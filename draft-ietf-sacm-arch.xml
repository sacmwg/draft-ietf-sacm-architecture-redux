<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.12 -->
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-sacm-arch-10" category="std" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.7.0 -->
  <front>
    <title abbrev="SACM Architecture">Security Automation and Continuous Monitoring (SACM) Architecture</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-sacm-arch-10"/>
    <author initials="A." surname="Montville" fullname="Adam W. Montville">
      <organization abbrev="CIS">Center for Internet Security</organization>
      <address>
        <postal>
          <street>31 Tech Valley Drive</street>
          <city>East Greenbush</city>
          <region>NY</region>
          <code>12061</code>
          <country>USA</country>
        </postal>
        <email>adam.montville.sdo@gmail.com</email>
      </address>
    </author>
    <author initials="B." surname="Munyan" fullname="Bill Munyan">
      <organization abbrev="CIS">Center for Internet Security</organization>
      <address>
        <postal>
          <street>31 Tech Valley Drive</street>
          <city>East Greenbush</city>
          <region>NY</region>
          <code>12061</code>
          <country>USA</country>
        </postal>
        <email>bill.munyan.ietf@gmail.com</email>
      </address>
    </author>
    <date year="2021" month="May" day="28"/>
    <area>Security</area>
    <workgroup>SACM Working Group</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <t>This document defines an architecture enabling a cooperative Security Automation and Continuous Monitoring (SACM) ecosystem.  This work is predicated upon information gleaned from SACM Use Cases and Requirements (<xref target="RFC7632" format="default"/> and <xref target="RFC8248" format="default"/> respectively), and terminology as found in <xref target="I-D.ietf-sacm-terminology" format="default"/>.</t>
      <t>WORKING GROUP: The source for this draft is maintained in GitHub.  Suggested changes should be submitted as pull requests at https://github.com/sacmwg/ietf-mandm-sacm-arch/.  Instructions are on that page as well.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>The purpose of this draft is to define an architectural approach for a SACM Domain, based on the spirit of use cases found in <xref target="RFC7632" format="default"/> and requirements found in <xref target="RFC8248" format="default"/>. This approach gains the most advantage by supporting a variety of collection systems, and intends to enable a cooperative ecosystem of tools from disparate sources with minimal operator configuration.</t>
      <section anchor="requirements-notation" numbered="true" toc="default">
        <name>Requirements notation</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in RFC
2119, BCP 14 <xref target="RFC2119" format="default"/>.</t>
      </section>
    </section>
    <section anchor="terms-and-definitions" numbered="true" toc="default">
      <name>Terms and Definitions</name>
      <t>This draft defers to <xref target="I-D.ietf-sacm-terminology" format="default"/> for terms and definitions.</t>
    </section>
    <section anchor="architectural-overview" numbered="true" toc="default">
      <name>Architectural Overview</name>
      <t>The generic approach proposed herein recognizes the need to obtain information from existing and future state collection systems, and makes every attempt to respect <xref target="RFC7632" format="default"/> and <xref target="RFC8248" format="default"/>. At the foundation of any architecture are entities, or components, that need to communicate. They communicate by sharing information, where, in a given flow, one or more components are consumers of information and one or more components are providers of information.  Different roles within a cooperative ecosystem may act as both Producers and Consumers of SACM-relevant information.</t>
      <figure anchor="fig-basic">
        <name>Basic Architectural Structure</name>
        <artwork name="" type="" align="left" alt="">
       +----------------+
       | SACM Component |
       |   (Producer)   |
       +-------+--------+
               |
               |
+--------------v----------------+
|      Integration Service      |
+--------------+----------------+
               |
               |
       +-------v--------+
       | SACM Component |
       |   (Consumer)   |
       +----------------+
</artwork>
      </figure>
      <section anchor="producer" numbered="true" toc="default">
        <name>Producer</name>
        <t>A Producer can be described as an abstraction that refers to an entity capable of sending SACM-relevant information to one or many Consumers.  In general, information (a "payload") is produced to a particular topic, subscribed to by one or more Consumers.  Producers need not be concerned about any specifics of the payload it is providing to a given topic.  A Producer may, for example, publish posture collection instructions to collector topics.</t>
      </section>
      <section anchor="consumer" numbered="true" toc="default">
        <name>Consumer</name>
        <t>A Consumer can be described as an abstraction that refers to an entity capable of receiving SACM-relevant information from one or many Producers.  A Consumer acts as a subscriber to a given topic (or set of topics), enabling it to receive event notifications when a Producer provides a payload to that topic or topics.  Consumers receive payloads and act upon them according to their capabilities.  A Consumer may, for example, subscribe to a posture collection topic to receive and act upon, collection instructions.</t>
      </section>
      <section anchor="integration-service" numbered="true" toc="default">
        <name>Integration Service</name>
        <t>The Integration Service acts as the broker between Producers and Consumers; acting as the destination for Producers to publish payloads, and as the source for Consumers subscribing to those payloads.</t>
        <t>SACM Components are intended to interact with other SACM Components. These interactions can be thought of, at the architectural level, as the combination of interfaces with their supported operations.  Each interaction will convey a classified payload of information. This classification of payload information allows Consumers to subscribe to only the classifications to which they are capable of handling.  The payload information should contain subdomain-specific characteristics and/or instructions.</t>
      </section>
      <section anchor="payloadmessage" numbered="true" toc="default">
        <name>Payload/Message</name>
        <t>The payload (sometimes referred to as a "message" or "message payload") is the unit of data involved in any given interaction between two SACM components.  The payload MAY be used to convey the semantic meaning of the operation to be performed.  Protocols such as <xref target="RFC6120" format="default"/> achieves this meaning through XML namespace identification within a <tt>&lt;message/&gt;</tt> or <tt>&lt;iq/&gt;</tt> stanza.  Topic-centric protocols such as <xref target="MQTT" format="default"/> convey the meaning of payloads through topic naming techniques.  Both methods require connected components to verify message payloads according to their respective capabilities.</t>
        <t>With respect to the Integration Service, the payload is simply an array of bytes, so the data contained within it is not required to convey a specific format or meaning to the Integration Service.  The serialization of the payload combined with the payload categorization provides meaning within the SACM context.</t>
      </section>
      <section anchor="payload-categorization" numbered="true" toc="default">
        <name>Payload Categorization</name>
        <t>Within the SACM ecosystem, categorization of payloads and their transport provide the context through which various capabilities are achieved.  Two types of payload categorization can be described.</t>
        <section anchor="topic-centric" numbered="true" toc="default">
          <name>Topic-centric</name>
          <t>Topic-centric payload categorization allows for a broad spectrum of payloads by characterizing those payloads through the Integration Service topic.  In this categorization, the topic name becomes a label attached to the payload to which the Integration Service matches against known subscriptions.  The topic becomes the operational context for the payload.  Topic-centric categorization allows for any payload to be sent to any topic, but requires that SACM consumers parse the payloads to determine whether or not they have the capability to act on those payloads.</t>
          <t>When interacting using a topic-centric payload categorization, topic naming conventions SHOULD provide an adequate amount of information to be deterministic regarding the purpose of the interaction.  For example, a topic named <tt>/notification/collection/oval</tt> would indicate that (a) the topic is a broadcast/notification (publish/subscribe) topic, (b) subscribers to this topic are performing a "collection" action, and (c) the payloads published to the topic are represented using the OVAL serialization format.</t>
        </section>
        <section anchor="payload-centric" numbered="true" toc="default">
          <name>Payload-centric</name>
          <t>Payload-centric categorization encapsulates the intent of an interaction within the message payload itself, using an identifying token, tag, or namespace identifier.  This method allows for the limitation of message types, and therefore increases the extensibility of message payloads.</t>
          <t>Payload-centric categorization allows for modularization and specification of extensions, and for plugin-based support of capabilities based the categorization.  XMPP is an example of utilization of payload-centric categorization, allowing only three distinct "stanzas" (<tt>&lt;message/&gt;</tt>, <tt>&lt;presence/&gt;</tt>, and <tt>&lt;iq/&gt;</tt>), using payloads defined by the various extension protocols maintained by the XMPP standards foundation.</t>
        </section>
      </section>
      <section anchor="capabilities" numbered="true" toc="default">
        <name>Capabilities</name>
        <t>SACM components interact with each other based on their capacity to perform specific actions.  In advertising its capabilities, a SACM component indicates its competence to understand message payloads, perform any payload translation or normalization, and act upon that message.  For example, an Orchestration component receives a message to initiate posture attribute collection.  The Orchestrator may then normalize those instructions to a particular collection system's serialization.  The normalized instructions are then published to the Integration Service, notifying the appropriate subscribers.</t>
        <t>Capabilities are described using Uniform Resource Names (URNs), which will be maintained and enhanced via IANA tables (IANA Considerations). Using topic-centric categorization of message payloads, capability URNs SHOULD be associated with Integration Service topics to which publishers, subscribers, and service handlers, will interact.  Topic naming conventions are considered implementation details and are not considered for standardization.  Given a payload-centric categorization of message payloads, capability URNs SHOULD be used as the identifying token, tag, or namespace in order to distinguish specific payloads.</t>
      </section>
      <section anchor="interaction-categories" numbered="true" toc="default">
        <name>Interaction Categories</name>
        <t>Two categories of interactions SHOULD be supported by the Integration Service: broadcast and directed.  Broadcast interactions are asynchronous by default, and directed interactions may be invoked either synchronously or asynchronously.</t>
        <section anchor="broadcast" numbered="true" toc="default">
          <name>Broadcast</name>
          <t>A broadcast interaction, commonly referred to as publish/subscribe, allows for a wider distribution of a message payload.  When a payload is published to the Integration Service, all subscribers to that payload are alerted and may consume the message payload.  This category of interaction can also be described as a "unicast" interaction when only a single subscriber exists.  An example of a broadcast interaction could be to publish Linux OVAL objects to a posture collection topic.  Subscribing consumers receive the notification, and proceed to collect endpoint configuration posture based on the supplied message payload.</t>
        </section>
        <section anchor="directed" numbered="true" toc="default">
          <name>Directed</name>
          <t>The intent of a directed interaction is to enable point-to-point communications between a producer and consumer, through the standard interfaces provided by the Integration Service.  The provider component indicates which consumer is intended to receive the payload, and the Integration Service routes the payload directly to that consumer.  Two "styles" of directed interaction exist, differing only by the response from the payload consumer.</t>
          <section anchor="synchronous" numbered="true" toc="default">
            <name>Synchronous</name>
            <t>Synchronous, request/response style interaction requires that the requesting component block and wait for the receiving component to respond, or to time out when that response is delayed past a given time threshold.  A synchronous interaction example may be querying a CMDB for posture attribute information in order to perform an evaluation.</t>
          </section>
          <section anchor="asynchronous" numbered="true" toc="default">
            <name>Asynchronous</name>
            <t>An asynchronous interaction involves the payload producer directing the message to a consumer, but not blocking or waiting for an immediate response.  This style of interaction allows the producer to continue on to other activities without the need to wait for responses.  This style is particularly useful when the interaction payload invokes a potentially long-running task, such as data collection, report generation, or policy evaluation.  The receiving component may reply later via callbacks or further interactions, but it is not mandatory.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="sacm-role-based-architecture" numbered="true" toc="default">
      <name>SACM Role-based Architecture</name>
      <t>Within the cooperative SACM ecosystem, a number of roles act in coordination to provide relevant policy/guidance, perform data collection, storage, evaluation, and support downstream analytics and reporting.</t>
      <figure anchor="fig-notional">
        <name>Notional Role-based Architecture</name>
        <artwork name="" type="" align="left" alt="">
  +-------------------------------------------+
  |                 Manager                   |
  +-------------------^-----------------------+
                      |
  +-----------------+ |  +--------------------+
  | Orchestrator(s) | |  | Repositories/CMDBs |
  +---------+-------+ |  +----------+---------+
            |         |             |                +--------------------+
            |         |             |                |  Downstream Uses   |
            |         |             |                | +----------------+ |
  +---------v---------v-------------v---------+      | |   Analytics    | |
  |             Integration Service           &lt;------&gt; +----------------+ |
  +-----------^--------------------------^----+      | +----------------+ |
              |                          |           | |   Reporting    | |
              |                          |           | +----------------+ |
  +-----------v-------------------+      |           +--------------------+
  |  Collection Sub-Architecture  |      |
  +-------------------------------+      |
                         +---------------v---------------+
                         |  Evaluation Sub-Architecture  |
                         +-------------------------------+
</artwork>
      </figure>
      <t>As shown in <xref target="fig-notional" format="default"/>, the SACM role-based architecture consists of some basic SACM Components communicating using an integration service. The integration service is expected to maximally align with the requirements described in <xref target="RFC8248" format="default"/>, which means that the integration service will support brokered (i.e. point-to-point) and proxied data exchange.</t>
      <section anchor="architectural-rolescomponents" numbered="true" toc="default">
        <name>Architectural Roles/Components</name>
        <t>This document suggests a variety of players in a cooperative ecosystem; known as SACM Components. SACM Components may be composed of other SACM Components, and each SACM Component plays one, or more, of several roles relevant to the ecosystem. Roles may act as providers of information, consumers of information, or both provider and consumer.  <xref target="fig-notional" format="default"/> depicts a number of SACM components which are architecturally significant and therefore warrant discussion and clarification.</t>
        <section anchor="manager" numbered="true" toc="default">
          <name>Manager</name>
          <t>The Manager acts as the control plane for the SACM ecosystem; a sort of high level component capable of coordinating the actions, notifications, and events between components.  The manager controls the administrative interfaces with the various components of the ecosystem, acting as the central point to which all other components will register and advertise their capabilities.  It is the responsibility of the manager to control a component's access to the ecosystem, maintain an inventory of components attached to the ecosystem, and to initiate the various workflows involved in the collection and/or evaluation of posture attributes.</t>
          <t>The manager should maintain the master set of capabilities that can be supported within the ecosystem.  These are the various collection, evaluation, and persistence capabilities with which components may register.  The manager MAY be responsible for assigning topics for each of the capabilities that are supported, as registering components subsequently subscribe to, or configure service handlers for, those topics.</t>
          <t>The manager may act as the user interface to the ecosystem, providing user dashboards, inventories, component management, or operational controls within the boundary of responsibility.</t>
        </section>
        <section anchor="orchestrators" numbered="true" toc="default">
          <name>Orchestrator(s)</name>
          <t>Orchestration components provide the manager with resources for delegating work across the SACM ecosystem.  Orchestrators are responsible for receiving messages from the manager, e.g. posture attribute collection instructions, and routing those messages to the appropriate "actions".  For example, an orchestrator may support the capability of translating posture collection instructions using the Open Vulnerability and Assessment Language (OVAL) and providing those instructions to OVAL collectors.  An orchestrator may support the capability of initiating policy evaluation.  Where the Manager is configured to ask a particular set of questions, those questions are delegated to Orchestrators, who are then capable of asking those questions using specific dialects.</t>
        </section>
        <section anchor="repositoriesconfiguration-management-databases-cmdbs" numbered="true" toc="default">
          <name>Repositories/Configuration Management Databases (CMDBs)</name>
          <t><xref target="fig-notional" format="default"/> only includes a single reference to "Repositories/CMDBs", but in practice, a number of separate data repositories may exist, including posture attribute repositories, policy repositories, local vulnerability definition data repositories, and state assessment results repositories.  These data repositories may exist separately or together in a single representation, and the design of these repositories may be as distinct as their intended purpose, such as the use of relational database management systems (RDBMS) or graph/map implementations focused on the relationships between data elements.  Each implementation of a SACM repository should focus on the relationships between data elements and implement the SACM information and data model(s).</t>
        </section>
        <section anchor="integration-service-1" numbered="true" toc="default">
          <name>Integration Service</name>
          <t>If each SACM component represents a set of capabilities, then the Integration Service represents the "fabric" by which SACM components are woven together.  The Integration Service acts as a message broker, combining a set of common message categories and infrastructure to allow SACM components to communicate using a shared set of interfaces.  The Integration Service's brokering capabilities enable the exchange of various information payloads, orchestration of component capabilities, message routing and reliable delivery.  The Integration Service minimizes the dependencies from one system to another through the loose coupling of applications through messaging.  SACM components will "attach" to the Integration Service either through native support for the integration implementation, or through the use of "adapters" which provide a proxied attachment.</t>
          <t>The Integration Service should provide mechanisms for both synchronous and asynchronous request/response-style messaging, and a publish/subscribe mechanism to implement an event-based architecture.  It is the responsibility of the Integration Service to coordinate and manage the sending and receiving of messages.  The Integration Service should allow components to directly connect and produce or consume messages, or connect via message translators which can act as a proxy, transforming messages from a component format to one implementing a SACM data model.</t>
          <t>The Integration Service MUST provide routing capabilities for payloads between producers and consumers.  The Integration Service MAY provide further capabilities within the payload delivery pipeline.  Examples of these capabilities include, but are not limited to, intermediate processing, message transformation, type conversion, validation, or other enterprise integration patterns.</t>
        </section>
      </section>
      <section anchor="downstream-uses" numbered="true" toc="default">
        <name>Downstream Uses</name>
        <t>As depicted by <xref target="fig-notional" format="default"/>, a number of downstream uses exist in the cooperative ecosystem.  Each notional SACM component represents distinct sub-architectures which will exchange information via the integration services, using interactions described in this draft.</t>
        <section anchor="reporting" numbered="true" toc="default">
          <name>Reporting</name>
          <t>The Reporting component represents capabilities outside of the SACM architecture scope dealing with the query and retrieval of collected posture attribute information, evaluation results, etc. in various display formats that are useful to a wide range of stakeholders.</t>
        </section>
        <section anchor="analytics" numbered="true" toc="default">
          <name>Analytics</name>
          <t>The Analytics component represents capabilities outside of the SACM architecture scope dealing with the discovery, interpretation, and communication of any meaningful patterns of data in order to inform effective decision making within the organization.</t>
        </section>
      </section>
      <section anchor="sub-architectures" numbered="true" toc="default">
        <name>Sub-Architectures</name>
        <t><xref target="fig-notional" format="default"/> shows two components representing sub-architectural roles involved in a cooperative ecosystem of SACM components for the purpose of posture assessment: Collection and Evaluation.</t>
        <section anchor="collection-sub-architecture" numbered="true" toc="default">
          <name>Collection Sub-Architecture</name>
          <t>The Collection sub-architecture is, in a SACM context, the mechanism by which posture attributes are collected from applicable endpoints and persisted to a repository, such as a configuration management database (CMDB).  Control plane functions initiated by the Manager will coordinate the necessary orchestration components, who will choreograph endpoint data collection via defined interactions, using the Integration Service as a message broker.  Instructions to perform endpoint data collection are directed to a Posture Collection Service capable of performing collection activities utilizing any number of protocols, such as SNMP, NETCONF/RESTCONF, SCAP, SSH, WinRM, packet capture, or host-based.  Instructions are orchestrated with the appropriate Posture Collection Services using serializations supported according to the collector's capabilities.</t>
          <figure anchor="fig-collection">
            <name>Decomposed Collection Sub-Architecture</name>
            <artwork name="" type="" align="left" alt="">
  +----------------------------------------------------------+
  |                       Manager                            |
  +-----------+----------------------------------------------+
              |
          Orchestrate
          Collection
              |
  +-----------v-------------+ +------------------------------+
  |      Orchestrator(s)    | | Posture Attribute Repository |
  +-----------+-------------+ +--------------^---------------+
              |                              |
           Perform                           |
          Collection                  Collected Data
              |                              ^
              |                              |
  +-----------v------------------------------+---------------+
  |                    Integration Service                   |
  +----+------------------^------------------------------^---+
       |                  |           |                  |
       v                  +           v                  |
    Perform           Collected    Perform           Collected
   Collection           Data      Collection           Data
       |                  ^           |                  ^
       |                  |           |                  |
  +----v-----------------------+ +------------------------------+
  | Posture Collection Service | |    |     Endpoint     |      |
  +---^------------------------+ | +--v------------------+----+ |
      |                   |      | |Posture Collection Service| |
      |                   |      | +--------------------------+ |
    Events             Queries   +------------------------------+
      ^                   |          (PCS resides on Endpoint)
      |                   |
  +---+-------------------v----+
  |          Endpoint          |
  +----------------------------+
(PCS does not reside on Endpoint)

</artwork>
          </figure>
          <section anchor="posture-collection-service" numbered="true" toc="default">
            <name>Posture Collection Service</name>
            <t>The Posture Collection Service (PCS) is a SACM component responsible for the collection of posture attributes from an endpoint or set of endpoints.  A single PCS MAY be responsible for management of posture attribute collection from many endpoints.  The PCS will interact with the Integration Service to receive collection instructions, and to provide collected posture attributes for persistence to one or more Posture Attribute Repositories.  Collection instructions may be supplied in a variety of forms, including subscription to a publish/subscribe topic to which the Integration Service has published instructions, or via request/response-style messaging (either synchronous or asynchronous).</t>
            <t>Four classifications of posture collections MAY be supported.</t>
            <section anchor="ad-hoc" numbered="true" toc="default">
              <name>Ad-Hoc</name>
              <t>Ad-Hoc collection is defined as a single colletion of posture attributes, collected at a particular time.  An example of ad-hoc collection is the single collection of a specific registry key.</t>
            </section>
            <section anchor="continuousscheduled" numbered="true" toc="default">
              <name>Continuous/Scheduled</name>
              <t>Continuous/Scheduled collection is defined as the ongoing, periodic collection of posture attributes.  An example of scheduled collection is the collection of a specific registry key value every day at a given time.</t>
            </section>
            <section anchor="observational" numbered="true" toc="default">
              <name>Observational</name>
              <t>This classification of collection is triggered by the observation, external to an endpoint, of information asserting posture attribute values for that endpoint.  An example of observational collection is examination of netflow data for particular packet captures and/or specific information within those captures.</t>
            </section>
            <section anchor="event-based" numbered="true" toc="default">
              <name>Event-based</name>
              <t>Event-based collection may be triggered either internally or externally to the endpoint.  Internal event-based collection is triggered when a posture attribute of interest is added, removed, or modified on an endpoint.  This modification indicates a change in the current state of the endpoint, potentially affecting its adherence to some defined policy.  Modification of the endpoint's minimum password length is an example of an attribute change which could trigger collection.</t>
              <t>External event-based collection can be described as a collector being subscribed to an external source of information, receiving events from that external source on a periodic or continuous basis.  An example of event-based collection is subscription to YANG Push notifications.</t>
            </section>
          </section>
          <section anchor="endpoint" numbered="true" toc="default">
            <name>Endpoint</name>
            <t>Building upon <xref target="I-D.ietf-sacm-terminology" format="default"/>, the SACM Collection Sub-Architecture augments the definition of an Endpoint as a component within an organization's management domain from which a Posture Collection Service will collect relevant posture attributes.</t>
          </section>
          <section anchor="posture-attribute-repository" numbered="true" toc="default">
            <name>Posture Attribute Repository</name>
            <t>The Posture Attribute Repository is a SACM component responsible for the persistent storage of posture attributes collected via interactions between the Posture Collection Service and Endpoints.</t>
          </section>
          <section anchor="posture-collection-workflow" numbered="true" toc="default">
            <name>Posture Collection Workflow</name>
            <t>Posture collection may be triggered from a number of components, but commonly begin either via event-based triggering on an endpoint or through manual orchestration, both illustrated in <xref target="fig-collection" format="default"/> above.  Once orchestration has provided the directive to perform collection, posture collection services consume the directives.  Posture collection is invoked for those endpoints overseen by the respective posture collection services.  Collected data is then provided to the Integration Service, with a directive to store that information in an appropriate repository.</t>
          </section>
        </section>
        <section anchor="evaluation-sub-architecture" numbered="true" toc="default">
          <name>Evaluation Sub-Architecture</name>
          <t>The Evaluation Sub-Architecture, in the SACM context, is the mechanism by which policy, expressed in the form of expected state, is compared with collected posture attributes to yield an evaluation result, that result being contextually dependent on the policy being evaluated.</t>
          <figure anchor="fig-evaluation">
            <name>Decomposed Evaluation Sub-Architecture</name>
            <artwork name="" type="" align="left" alt="">
+------------------+
|     Manager      |
+-------+----------+
        |
   Orchestrate        +------------------+
    Evaluation        |    Collection    |    +-------------------------------+
        |             | Sub+Architecture |    | Evaluation Results Repository |
 +------v----------+  +--------^---------+    +-----------------^-------------+
 | Orchestrator(s) |           |                                |
 +------+----------+     (Potentially)                          |
        |                   Perform                 Store Evaluation Results
     Perform               Collection                           |
    Evaluation                 |                                |
        |                      |                                |
 +------v----------------------v--------------------------------+-------------+
 |                             Integration Service                            |
 +--------^----------------------^-----------------------^--------------------+
          |                      |                       |
          |                      |                       |
          |               Retrieve Posture            Perform
   Retrieve Policy           Attributes              Evaluation
          |                      |                       |
          |                      |                       |
   +------v-----+          +-----v------+       +--------v-------------------+
   |   Policy   |          |  Posture   |       | Posture Evaluation Service |
   | Repository |          | Attribute  |       +----------------------------+
   +------------+          | Repository |
                           +------------+

</artwork>
          </figure>
          <section anchor="posture-evaluation-service" numbered="true" toc="default">
            <name>Posture Evaluation Service</name>
            <t>The Posture Evaluation Service (PES) represents the SACM component responsible for coordinating the policy to be evaluated and the collected posture attributes relevant to that policy, as well as the comparison engine responsible for correctly determining compliance with the expected state.</t>
          </section>
          <section anchor="policy-repository" numbered="true" toc="default">
            <name>Policy Repository</name>
            <t>The Policy Repository represents a persistent storage mechanism for the policy to be assessed against collected posture attributes to determine if an endpoint meets the desired expected state.  Examples of information contained in a Policy Repository would be Vulnerability Definition Data or configuration recommendations as part of a CIS Benchmark or DISA STIG.</t>
          </section>
          <section anchor="evaluation-results-repository" numbered="true" toc="default">
            <name>Evaluation Results Repository</name>
            <t>The Evaluation Results Repository persists the information representing the results of a particular posture assessment, indicating those posture attributes collected from various endpoints which either meet or do not meet the expected state defined by the assessed policy.  Consideration should be made for the context of individual results.  For example, meeting the expected state for a configuration attribute indicates a correct configuration of the endpoint, whereas meeting an expected state for a vulnerable software version indicates an incorrect configuration.</t>
          </section>
          <section anchor="posture-evaluation-workflow" numbered="true" toc="default">
            <name>Posture Evaluation Workflow</name>
            <t>Posture evaluation is orchestrated through the Integration Service to the appropriate Posture Evaluation Service (PES).  The PES will, using interactions defined by the applicable taxonomy, query both the Posture Attribute Repository and the Policy Repository to obtain relevant state data for comparison.  If necessary, the PES may be required to invoke further posture collection.  Once all relevant posture information has been collected, it is compared to expected state based on applicable policy.  Comparison results are then persisted to an evaluation results repository for further downstream use and analysis.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="ecosystem-interactions" numbered="true" toc="default">
      <name>Ecosystem Interactions</name>
      <t>&lt;&gt;{: #ecosystem-interactions title="Ecosystem Interactions"}
Ecosystem interactions describe the various functions between SACM components, including manager requirements, the onboarding of components, capability advertisement, administrative actions, and status updates, among others.  The Manager component acts as the administrative "lead" for the SACM ecosystem, and must maintain records of registered components, manage capabilities, and more.</t>
      <section anchor="manager-1" numbered="true" toc="default">
        <name>Manager</name>
        <t>The Manager, being a specialized role in the architecture, enables the onboarding and capability management of the various SACM component roles.  The Manager must support the set of capabilities needed to operate the SACM ecosystem.</t>
        <t>With this in mind, the Manager must first authenticate to the Integration Service.  Once authentication has succeeded, the Manager MUST establish a service handler capable of performing SACM component registration/onboarding activities (Component Registration Operation).  The Manager MUST also establish a subscription to an ecosystem-wide status notification mechanism,  in order to receive published status updates from other SACM components.</t>
        <t>The following requirements exist for the Manager to establish service handlers supporting the component registration taxonomy (Component Registration Operation):</t>
        <ul spacing="normal">
          <li>The Manager MUST enable the capability to receive onboarding requests,</li>
          <li>The Manager MUST have the capability to generate, manage, and persist unique identifiers for all registered components,</li>
          <li>The Manager MUST maintain the relationships between capabilities and payload categorizations (such as topic names or specific payload identifiers),</li>
          <li>The Manager MUST have the capability to inventory and manage its "roster" (the list of registered components),</li>
          <li>The Manager MUST have the capability to manage its roster's advertised capabilities, including those endpoints to which those capabilities apply.</li>
          <li>In addition to supporting component registration, the Manager is responsible for many of the operational functions of the architecture, including initiating collection or evaluation, queries for repository data, or the assembly of information for downstream use.</li>
          <li>The Manager MUST support making directed requests to registered components over the component's administrative interface.  Administrative interface functions are described by their taxonomy, below.</li>
          <li>The Manager MUST support each of the interaction categories as described above.</li>
        </ul>
      </section>
      <section anchor="component-registration" numbered="true" toc="default">
        <name>Component Registration</name>
        <t>Component registration describes how an individual component becomes part of the SACM ecosystem; authenticating to the Integration Service, registering and establishing its administrative interface with, the Manager.</t>
        <t>The component onboarding workflow involves multiple steps:</t>
        <ul spacing="normal">
          <li>The component first authenticates to the Integration Service.</li>
          <li>The component initiates registration with the Manager, per the component registration operation (Component Registration Operation).</li>
          <li>The component handles the response from the Manager to configure a service handler allowing the component to receive directed messages over the  administrative interface with the Manager.</li>
        </ul>
      </section>
      <section anchor="administrative-interface" numbered="true" toc="default">
        <name>Administrative Interface</name>
        <t>The administrative interface represents a direct communication channel between the Manager and any registered Component.  This interface allows the Manager to make directed requests to a component in order to perform specific actions.</t>
        <section anchor="capability-advertisement-handshake" numbered="true" toc="default">
          <name>Capability Advertisement Handshake</name>
          <t>Capability Advertisement is the mechanism by which components initially indicate their capabilities to the Manager. This handshake is completed using the administrative interface with the Manager.  It becomes the Manager's responsibility to persist component/capability relationships, and to provide the component the information necessary to receive and process message payloads specific to the supported capabilities.</t>
        </section>
        <section anchor="health-check" numbered="true" toc="default">
          <name>Health Check</name>
          <t>The administrative "health check" is a mechanism by which the Manager queries for the "liveness" of its roster of components, and to possibly alert users or other systems when components are no longer present.  The Manager MAY enable a periodic message to each component to determine if that component is still listening to the Administrative Interface. The Health Check interaction MAY include a request for "Capability Refresh", to reinitiate the Capability Advertisement Handshake. This interaction is similar to the "Heartbeat" interaction, but is initiated by the Manager.</t>
        </section>
        <section anchor="heartbeat" numbered="true" toc="default">
          <name>Heartbeat</name>
          <t>The administrative "heartbeat" is a mechanism by which a Component indicates to the Manager that the Component remains connected to the ecosystem. The Heartbeat differs from the Health Check interaction in that the Component initiates the interaction, and that no response from the Manager is required.</t>
        </section>
        <section anchor="capability-specific-requests" numbered="true" toc="default">
          <name>Capability-specific Requests</name>
          <t>Any number of capability-specific requests can be enabled through the administrative interface that allow the Manager to direct actions to be performed by a specific component.  Utilizing the interface from a component to the Manager, this interface can be used to indicate a component has come back online, or to provide an updated capability advertisement, potentially resulting in updates to subscriptions or service handlers.</t>
        </section>
      </section>
      <section anchor="status-notifications" numbered="true" toc="default">
        <name>Status Notifications</name>
        <t>A generic status notifications mechanism SHOULD be configured to which (a) the Manager is subscribed, and (b) all onboarded components can publish.  Status notifications may be used by the Manager to update user interfaces, to provide notification of the start, finish, success or failure of ecosystem operations, or as events to trigger subsequent activities.</t>
      </section>
      <section anchor="component-interactions" numbered="true" toc="default">
        <name>Component Interactions</name>
        <t>Component interactions describe functionality between components relating to collection, evaluation, or other downstream processes.  The following component interactions begin with the Manager providing a set of instructions to an Orchestrator or set of Orchestrators that have registered with the SACM ecosystem indicating the appropriate capabilities, such as collection or evaluation.  Subscribing Orchestrator(s) MAY translate, manipulate, filter, augment, or otherwise transform the Manager's instructions into content supported through the Orchestrator's capabilities.</t>
        <section anchor="initiate-ad-hoc-collection" numbered="true" toc="default">
          <name>Initiate Ad-Hoc Collection</name>
          <t>The Orchestrator supplies a payload of collection instructions to a Posture Collection Service either through direct or broadcast mechanisms.  The receiving PCS components perform the required collection based on their capabilities.  Each PCS then forms a payload of collected posture attributes (including endpoint identifying information) and provides that payload to the Posture Attribute Repository interface, for persistence.</t>
        </section>
        <section anchor="coordinate-periodic-collection" numbered="true" toc="default">
          <name>Coordinate Periodic Collection</name>
          <t>Similar to ad-hoc collection, the Orchestrator supplies a payload of collection instructions similar to those of ad-hoc collection.  Additional information elements containing collection identification and periodicity are included.</t>
          <section anchor="schedule-periodic-collection" numbered="true" toc="default">
            <name>Schedule Periodic Collection</name>
            <t>To enable operations on periodic collection, the scheduling payload MUST include both a unique identifier for the set of collection instructions, as well as a periodicity expression to enable the collection schedule.  An optional "immediate collection" flag will indicate to the collection component that, upon receipt of the collection instructions, a collection will automatically be initiated prior to engagement of the scheduled collection.</t>
          </section>
          <section anchor="cancel-periodic-collection" numbered="true" toc="default">
            <name>Cancel Periodic Collection</name>
            <t>The Orchestrator disables the periodic collection of posture attributes by supplying collector(s) the unique identifier of previously scheduled collection instructions.  An optional "final collection" flag will indicate to the collection component that, upon receipt of the cancellation instructions, a final ad-hoc collection is to take place.</t>
          </section>
        </section>
        <section anchor="coordinate-observationalevent-based-collection" numbered="true" toc="default">
          <name>Coordinate Observational/Event-based Collection</name>
          <t>In these scenarios, the Posture Collection Service acts as the "observer".  Interactions with the observer could specify a time period of observation and potentially information intended to filter observed posture attributes to aid the PCS in determining those attributes that are applicable for collection and persistence to the Posture Attribute Repository.</t>
          <section anchor="initiate-observationalevent-based-collection" numbered="true" toc="default">
            <name>Initiate Observational/Event-based Collection</name>
            <t>The Orchestrator supplies a payload of instructions to a topic or set of topics to which Posture Collection Services (observers) are subscribed.  This payload could include specific instructions based on the observer's capabilities to determine specific posture attributes to observe and collect.</t>
          </section>
          <section anchor="cancel-observationalevent-based-collection" numbered="true" toc="default">
            <name>Cancel Observational/Event-based Collection</name>
            <t>The Orchestrator supplies a payload of instructions to a topic or set of topics to which Posture Collection Services are subscribed.  The receiving PCS components cancel the identified observational/event-based collection executing on those PCS components.</t>
          </section>
        </section>
        <section anchor="persist-collected-posture-attributes" numbered="true" toc="default">
          <name>Persist Collected Posture Attributes</name>
          <t>Following successful collection, Posture Collection Services (PCS) will supply the payload of collected posture attributes to the interface(s) supporting the persistent storage of those attributes to the Posture Attribute Repository.  Information in this payload should include identifying information of the computing resource(s) for which attributes were collected.</t>
        </section>
        <section anchor="initiate-ad-hoc-evaluation" numbered="true" toc="default">
          <name>Initiate Ad-Hoc Evaluation</name>
          <t>The Orchestrator supplies a payload of evaluation instructions to a Posture Evaluation Services (PES) either through direct or broadcast mechanisms.  The receiving PES components perform the required evaluation based on their capabilities.  The PES generates a payload of posture evaluation results and publishes that payload to the Evaluation Results Repository interface, for persistence.</t>
        </section>
        <section anchor="coordinate-periodic-evaluation" numbered="true" toc="default">
          <name>Coordinate Periodic Evaluation</name>
          <t>Similar to ad-hoc evaluation, the Orchestrator supplies a payload of evaluation instructions similar to those of ad-hoc evaluation.  Additional information elements containing evaluation identification and periodicity are included.</t>
          <section anchor="schedule-periodic-evaluation" numbered="true" toc="default">
            <name>Schedule Periodic Evaluation</name>
            <t>To enable operations on periodic evaluation, the scheduling payload MUST include both a unique identifier for the set of evaluation instructions, as well as a periodicity expression to enable the evaluation schedule.  An optional "immediate evaluation" flag will indicate to the Posture Evaluation Service (PES) that, upon receipt of the evaluation instructions, an evaluation will automatically be initiated prior to engagement of the scheduled evaluation.</t>
          </section>
          <section anchor="cancel-periodic-evaluation" numbered="true" toc="default">
            <name>Cancel Periodic Evaluation</name>
            <t>The Orchestrator disables the periodic evaluation of posture attributes by supplying Posture Evaluation Service(s) the unique identifier of previously scheduled evaluation instructions.  An optional "final evaluation" flag will indicate to the PES that, upon receipt of the cancellation instructions, a final ad-hoc evaluation is to take place.</t>
          </section>
        </section>
        <section anchor="coordinate-change-based-evaluation" numbered="true" toc="default">
          <name>Coordinate Change-based Evaluation</name>
          <t>A more fine-grained approach to periodic evaluation may be enabled through the triggering of Posture Evaluation based on changes to posture attribute values at the time of their collection and persistence to the Posture Attribute Repository.</t>
          <section anchor="identify-attributes" numbered="true" toc="default">
            <name>Identify Attributes</name>
            <t>The Orchestrator enables change-based evaluation through a payload published to Posture Attribute Repository component(s).  This payload includes appropriate information elements describing the posture attributes on which changes in value will trigger posture evaluation.</t>
          </section>
          <section anchor="cancel-change-based-evaluation" numbered="true" toc="default">
            <name>Cancel Change-based Evaluation</name>
            <t>An Orchestrator may disable change-based evaluation through a payload published to Posture Attribute Repository component(s), including those information elements necessary to identify those posture attributes for which change-based evaluation no longer applies.</t>
          </section>
        </section>
        <section anchor="queries" numbered="true" toc="default">
          <name>Queries</name>
          <t>Queries should allow for a "freshness" time period, allowing the requesting entity to determine if/when posture attributes must be re-collected prior to performing evaluation.  This freshness time period can be "zeroed out" for the purpose of automatically triggering re-collection regardless of the most recent collection.</t>
        </section>
      </section>
    </section>
    <section anchor="operations" numbered="true" toc="default">
      <name>Operations</name>
      <t>The following sections describe a number of operations required to enable a cooperative ecosystem of posture attribute collection and evaluation functions.</t>
      <section anchor="component-registration-op" numbered="true" toc="default">
        <name>Component Registration</name>
        <t>Component registration describes how an individual component becomes part of the SACM ecosystem; registering with the Manager, and establishing the administrative interface.</t>
        <ul spacing="normal">
          <li>Interaction Type: Directed (Request/Response)</li>
          <li>Source Component: Any component wishing to join the ecosystem, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
          <li>Target Component(s): Manager</li>
        </ul>
        <section anchor="request-payload" numbered="true" toc="default">
          <name>Request Payload</name>
          <t>When a component onboards with the ecosystem, it must identify itself to the Manager, using either descriptive information or an already-existing component unique identifier.</t>
          <artwork name="" type="" align="left" alt="">
component-registration-request:
  {:component-identification:}

component-identification:
  component-unique-identifier (if re-establishing communication)
    #-OR-#
  component-type {:component-type:}
  component-name
  component-description (optional)

component-type:
  enumeration:
    - posture-collection-service
    - posture-evaluation-service
    - repository-interface
    - orchestrator
    - others?
</artwork>
          <t>When registering for the first time, the component will send identifying information including the component type and a name.  If the component is re-establishing communications, for example after a restart of the component or deployment of a new version, the component only needs to supply its previously generated (and persisted) [component-unique-identifier].</t>
        </section>
        <section anchor="request-processing" numbered="true" toc="default">
          <name>Request Processing</name>
          <t>When the Manager receives the component's request for onboarding, it will:</t>
          <ul spacing="normal">
            <li>Generate a unique identifier, <tt>[component-unique-identifier]</tt>, for the onboarding component,</li>
            <li>Persist identifying information, including the <tt>[component-unique-identifier]</tt> to its component inventory, enabling an up-to-date roster of components being managed,</li>
            <li>Establish the administrative interface to the onboarded component by enabling a service handler to listen for directed messages from the component.</li>
          </ul>
        </section>
        <section anchor="response-payload" numbered="true" toc="default">
          <name>Response Payload</name>
          <t>The Manager will respond to the component with a payload including the component's unique identifier.  At this point, the Manager is aware of the component's existence in the ecosystem, and the component can self-identify by virtue of receiving its unique identifier.</t>
          <artwork name="" type="" align="left" alt="">
component-registration-response:
  component-unique-identifier: [component-unique-identifier]
</artwork>
        </section>
        <section anchor="response-processing" numbered="true" toc="default">
          <name>Response Processing</name>
          <t>Successful receipt of the Manager's response, including the <tt>[component-unique-identifier]</tt>, indicates the component is onboarded to the ecosystem.  Using the response payload, the component can then establish it's end of the administrative interface with the Manager.  The component must then persist it's unique identifier for use when re-establishing communication with the Manager after failure recovery or restart.</t>
        </section>
      </section>
      <section anchor="administrative-interface-1" numbered="true" toc="default">
        <name>Administrative Interface</name>
        <t>&lt;&gt;{: #administrative-interface title="Administrative Interface"}
A number of functions may take place which, instead of being published to multiple subscribers, may require direct interaction between the Manager and a registered component (and vice-versa).  During component onboarding, this direct channel, known as the Administrative Interface, is established first by the Manager and subsequently complemented by the component onboarding the SACM ecosystem.  Three operations are defined for the administrative interface, but any number of application or capability-specific operations MAY be enabled using the directed messaging provided by this interface.</t>
        <section anchor="capability-advertisement-handshake-1" numbered="true" toc="default">
          <name>Capability Advertisement Handshake</name>
          <t>&lt;&gt;{: #capability-advertisement-op title="Capability Advertisement Handshake"}
Capability advertisement represents the ability of any registered component to inform the Manager of that component's capacity for performing certain operations. For example, a Posture Collection Service component may advertise its capability to perform collection using a particular collection system/serialization.  This capability advertisement is important for the Manager to persist in order for the Manager to correctly classify components registered within the SACM ecosystem, and therefore provide the ability to publish messages to components in accordance with their capabilities.</t>
          <ul spacing="normal">
            <li>Interaction Type: Directed (Request/Response)</li>
            <li>Source Component: Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
            <li>Target Component(s): Manager</li>
          </ul>
          <section anchor="request-payload-1" numbered="true" toc="default">
            <name>Request Payload</name>
            <t>The component's capability advertisement request payload will include a list of "Capability URNs" (TBD IANA SECTION) that represent it's supported operational capabilities.</t>
            <artwork name="" type="" align="left" alt="">
capability-advertisement:
  capabilities:
    capability-urn: [urn]
    capability-urn: [urn]
    capability-urn: [urn]
    ...
</artwork>
          </section>
          <section anchor="request-processing-1" numbered="true" toc="default">
            <name>Request Processing</name>
            <t>Upon receipt of the component's capability advertisement, the Manager SHOULD:</t>
            <ul spacing="normal">
              <li>Persist the component's capabilities to the Manager's inventory</li>
              <li>Coordinate, based on the supplied capabilities, the service handlers (for directed messages) and/or event listeners (for broadcast messages) to which the component should support.</li>
            </ul>
          </section>
          <section anchor="response-payload-1" numbered="true" toc="default">
            <name>Response Payload</name>
            <t>The response payload delivered to the component should include the appropriate service handling/event listening information required for the component to handle further interactions based on each advertised capability.  If a capability was not registered successfully, appropriate error messages SHOULD be supplied to inform the component of the failure(s).</t>
            <artwork name="" type="" align="left" alt="">
capability-advertisement-response:
  capabilities:
    capability:
      capability-urn: [urn]
      registration-status: (success | failure)
      service-handler-or-event-listener: [info]
      messages: [messages]
    capability:
      capability-urn: [urn]
      registration-status: (success | failure)
      service-handler-or-event-listener: [info]
      messages: [messages]
</artwork>
          </section>
          <section anchor="response-processing-1" numbered="true" toc="default">
            <name>Response Processing</name>
            <t>Once the component has received the response to its capability advertisement, it should configure the capability-specific service handler(s) or event listener(s). Once these handlers/listeners have been configured, the component is considered fully onboarded to the SACM ecosystem.</t>
          </section>
        </section>
        <section anchor="health-check-1" numbered="true" toc="default">
          <name>Health Check</name>
          <t>&lt;&gt;{: #health-check-op title="Health Check"}
As time passes, it is important that the Manager maintains knowledge of all registered component's current operational status.  The health check operation describes the efforts taken by the Manager to maintain the most up-to-date inventory of it's component roster, and to potentially alert users or other outside systems of unavailable components.</t>
          <ul spacing="normal">
            <li>Interaction Type: Directed (Request/Response)</li>
            <li>Source Component: Manager</li>
            <li>Target Component(s): Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
          </ul>
          <section anchor="request-payload-2" numbered="true" toc="default">
            <name>Request Payload</name>
            <t>The request for the health check is a simple "ping".</t>
            <artwork name="" type="" align="left" alt="">
health-check-request:
  action: ping
</artwork>
          </section>
          <section anchor="request-processing-2" numbered="true" toc="default">
            <name>Request Processing</name>
            <t>When the target component receives the health check request, the target component need only respond that it is operational and connected to the integration service.  This is a simple "Hello component, are you listening?  Yes, I am" interaction.  The health check request from the Manager should be made with an appropriately small timeout indicator; only an operational component will be able to respond to the request, so if that component is offline and cannot respond, the Manager should not be kept waiting for an extended amount of time.</t>
          </section>
          <section anchor="response-payload-2" numbered="true" toc="default">
            <name>Response Payload</name>
            <t>When responding to the health check request, the response payload will simply indicate success:
~~~~~~
health-check-response:
  response: success
~~~~~~</t>
          </section>
          <section anchor="response-processing-2" numbered="true" toc="default">
            <name>Response Processing</name>
            <t>Upon receipt of the "health-check-response" payload, the Manager will update its inventory of currently operational components with the timestamp of the receipt.  Manager implementations may raise alerts, inform users, or take other actions when health checks are unsuccessful, at their discretion.</t>
          </section>
        </section>
        <section anchor="heartbeat-1" numbered="true" toc="default">
          <name>Heartbeat</name>
          <t>&lt;&gt;{: #heartbeat-op title="Heartbeat"}
As time passes and SACM ecosystem components which have previously registered are brought offline (perhaps for maintenance or redeployment) and back online, it is important that registered components maintain administrative contact with the Manager. The heartbeat operation describes the efforts taken by a registered component to determine the status of contact with the Manager, and to take appropriate action if such contact cannot be made.</t>
          <ul spacing="normal">
            <li>Interaction Type: Directed (Request/Response)</li>
            <li>Source Component: Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
            <li>Target Component(s): Manager</li>
          </ul>
          <section anchor="request-payload-3" numbered="true" toc="default">
            <name>Request Payload</name>
            <t>The request payload simply defines the hearbeat action:</t>
            <artwork name="" type="" align="left" alt="">
heartbeat-request:
  action: pulse
</artwork>
          </section>
          <section anchor="request-processing-3" numbered="true" toc="default">
            <name>Request Processing</name>
            <t>When the Manager receives the heartbeat request, it need only respond that it is operational and connected to the integration service.  This is a simple "Hello Manager, are you listening?  Yes, I am" interaction.  The heartbeat request from the component should be made with an appropriately small timeout indicator; only an operational Manager will be able to respond to the request, so if it is offline and cannot respond, the component should not be kept waiting for an extended amount of time.</t>
          </section>
          <section anchor="response-payload-3" numbered="true" toc="default">
            <name>Response Payload</name>
            <t>When responding to the heartbeat request, the response payload will simply indicate success:
~~~~~~
heartbeat-response:
  response: success
~~~~~~</t>
          </section>
          <section anchor="response-processing-3" numbered="true" toc="default">
            <name>Response Processing</name>
            <t>Upon receipt of the "heartbeat-response" payload, the component may reset its heartbeat timer and continue normal operations, awaiting incoming message payloads.  Component implementations may raise alerts, inform users, or take other actions when heartbeat requests are unsuccessful (potentially indicating a downed Manager), at their discretion.</t>
          </section>
        </section>
      </section>
      <section anchor="status-notification" numbered="true" toc="default">
        <name>Status Notification</name>
        <t>&lt;&gt;{: #status-notification-op title="Status Notification"}</t>
        <t>From time to time during the performance of any given operation, a component may need to supply status information to the Manager (or any other concerned component), for use in display to users, or to trigger other events within the SACM ecosystem.  The status notification operation is designed to allow any component to broadcast status message payloads to any subscribers with the need to know. For example, a collection component could broadcast to the Manager that it has initiated collection, subsequent collection progress updates, and finally completion or error conditions.</t>
        <ul spacing="normal">
          <li>Interaction Type: Broadcast (Publish/Subscribe)</li>
          <li>Source Component: Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
          <li>Target Component(s): Typically the Manager, but any registered component may subscribe to status notifications.</li>
        </ul>
        <section anchor="request-payload-4" numbered="true" toc="default">
          <name>Request Payload</name>
          <t>At a minimum, the payload broadcast for a status notification MUST include the status message and the publishing component's <tt>component-unique-identifier</tt>. Further identifying information, such as status codes, operation indicators, etc., MAY be provided by implementing components.</t>
          <artwork name="" type="" align="left" alt="">
status-notification:
  publisher: [component-unique-identifier]
  message: [message]
  [additional information]
</artwork>
        </section>
        <section anchor="request-processing-4" numbered="true" toc="default">
          <name>Request Processing</name>
          <t>When subscribers are notified of the status message, respective components may act upon them in component/application-specific ways, including persisting those messages to repositories, forwarding to log aggregation tools, displaying on user interfaces, and so on. Potential for use of component status notifications is only limited by application implementations.</t>
        </section>
        <section anchor="response-payload-4" numbered="true" toc="default">
          <name>Response Payload</name>
          <t>N/A</t>
        </section>
        <section anchor="response-processing-4" numbered="true" toc="default">
          <name>Response Processing</name>
          <t>N/A</t>
        </section>
      </section>
      <section anchor="initiate-ad-hoc-collection-1" numbered="true" toc="default">
        <name>Initiate Ad-Hoc Collection</name>
        <t>### Manager to Orchestrator
&lt;&gt;{: #-op title=""}</t>
        <section anchor="orchestrator-to-posture-collection-service" numbered="true" toc="default">
          <name>Orchestrator to Posture Collection Service</name>
        </section>
        <section anchor="posture-collection-service-to-posture-attribute-repository" numbered="true" toc="default">
          <name>Posture Collection Service to Posture Attribute Repository</name>
        </section>
      </section>
      <section anchor="initiate-ad-hoc-evaluation-1" numbered="true" toc="default">
        <name>Initiate Ad-Hoc Evaluation</name>
        <t>### Manager to Orchestrator</t>
        <section anchor="orchestrator-to-evaluator" numbered="true" toc="default">
          <name>Orchestrator to Evaluator</name>
        </section>
        <section anchor="evaluator-to-posture-evaluation-repository" numbered="true" toc="default">
          <name>Evaluator to Posture Evaluation Repository</name>
        </section>
      </section>
    </section>
    <section anchor="privacy-considerations" numbered="true" toc="default">
      <name>Privacy Considerations</name>
      <t>[TBD]</t>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>[TBD]</t>
    </section>
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>&lt;&gt;{: #iana-considerations title="IANA Considerations"}</t>
      <t>[TBD] Some boilerplate code...</t>
      <section anchor="component-types" numbered="true" toc="default">
        <name>Component Types</name>
        <t>URI: <tt>urn:ietf:sacm:component-type</tt>
Description: The allowed enumeration of the various component types permitted to utilize the SACM ecosystem.</t>
        <ul spacing="normal">
          <li>Manager</li>
          <li>Orchestrator</li>
          <li>Collector</li>
          <li>Evaluator</li>
          <li>Repository Interface</li>
          <li>[MORE]</li>
        </ul>
      </section>
      <section anchor="component-capabilities" numbered="true" toc="default">
        <name>Component Capabilities</name>
        <t>### Health Check
A URN representing a component's capability to initiate Health Check operations and to process any provided response payloads.</t>
        <t>URI: <tt>urn:ietf:sacm:capability:action:health-check</tt></t>
        <section anchor="heartbeat-2" numbered="true" toc="default">
          <name>Heartbeat</name>
          <t>A URN representing a component's capability to initiate Heartbeat operations and to process any provided response payloads.</t>
          <t>URI: <tt>urn:ietf:sacm:capability:action:heartbeat</tt></t>
        </section>
        <section anchor="status-notification-publish" numbered="true" toc="default">
          <name>Status Notification (Publish)</name>
          <t>A URN representing a component's capability to publish status notifications.</t>
          <t>URI: <tt>urn:ietf:sacm:capability:publish:status-notification</tt></t>
        </section>
        <section anchor="status-notification-subscribe" numbered="true" toc="default">
          <name>Status Notification (Subscribe)</name>
          <t>A URN representing a component's capability to subscribe to status notification events.</t>
          <t>URI: <tt>urn:ietf:sacm:capability:subscribe:status-notification</tt></t>
        </section>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner">
              <organization/>
            </author>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8412" target="https://www.rfc-editor.org/info/rfc8412">
          <front>
            <title>Software Inventory Message and Attributes (SWIMA) for PA-TNC</title>
            <author fullname="C. Schmidt" initials="C." surname="Schmidt">
              <organization/>
            </author>
            <author fullname="D. Haynes" initials="D." surname="Haynes">
              <organization/>
            </author>
            <author fullname="C. Coffin" initials="C." surname="Coffin">
              <organization/>
            </author>
            <author fullname="D. Waltermire" initials="D." surname="Waltermire">
              <organization/>
            </author>
            <author fullname="J. Fitzgerald-McKay" initials="J." surname="Fitzgerald-McKay">
              <organization/>
            </author>
            <date month="July" year="2018"/>
            <abstract>
              <t>This document extends "PA-TNC: A Posture Attribute (PA) Protocol Compatible with Trusted Network Connect (TNC)" (RFC 5792) by providing specific attributes and message exchanges to allow endpoints to report their installed software inventory information to a NEA Server, as defined in "Network Endpoint Assessment (NEA): Overview and Requirements" (RFC 5209).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8412"/>
          <seriesInfo name="DOI" value="10.17487/RFC8412"/>
        </reference>
        <reference anchor="I-D.ietf-sacm-ecp" target="https://www.ietf.org/archive/id/draft-ietf-sacm-ecp-05.txt">
          <front>
            <title>Endpoint Posture Collection Profile</title>
            <author fullname="Daniel Haynes" initials="D" surname="Haynes">
              <organization/>
            </author>
            <author fullname="Jessica Fitzgerald-McKay" initials="J" surname="Fitzgerald-McKay">
              <organization/>
            </author>
            <author fullname="Lisa Lorenzin" initials="L" surname="Lorenzin">
              <organization/>
            </author>
            <date day="21" month="June" year="2019"/>
            <abstract>
              <t>This document specifies the Endpoint Posture Collection Profile, which describes the best practices for the application of IETF, TNC, and ISO/IEC data models, protocols, and interfaces to support the on- going collection and communication of endpoint posture to a centralized server where it can be stored and made available to other tools.  This document is an extension of the Trusted Computing Group's Endpoint Compliance Profile Version 1.0 specification [ECP].</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-sacm-ecp-05"/>
          <format target="https://www.ietf.org/archive/id/draft-ietf-sacm-ecp-05.pdf" type="PDF"/>
        </reference>
        <reference anchor="RFC8600" target="https://www.rfc-editor.org/info/rfc8600">
          <front>
            <title>Using Extensible Messaging and Presence Protocol (XMPP) for Security Information Exchange</title>
            <author fullname="N. Cam-Winget" initials="N." role="editor" surname="Cam-Winget">
              <organization/>
            </author>
            <author fullname="S. Appala" initials="S." surname="Appala">
              <organization/>
            </author>
            <author fullname="S. Pope" initials="S." surname="Pope">
              <organization/>
            </author>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre">
              <organization/>
            </author>
            <date month="June" year="2019"/>
            <abstract>
              <t>This document describes how to use the Extensible Messaging and Presence Protocol (XMPP) to collect and distribute security incident reports and other security-relevant information between network- connected devices, primarily for the purpose of communication among Computer Security Incident Response Teams and associated entities. To illustrate the principles involved, this document describes such a usage for the Incident Object Description Exchange Format (IODEF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8600"/>
          <seriesInfo name="DOI" value="10.17487/RFC8600"/>
        </reference>
        <reference anchor="RFC6120" target="https://www.rfc-editor.org/info/rfc6120">
          <front>
            <title>Extensible Messaging and Presence Protocol (XMPP): Core</title>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre">
              <organization/>
            </author>
            <date month="March" year="2011"/>
            <abstract>
              <t>The Extensible Messaging and Presence Protocol (XMPP) is an application profile of the Extensible Markup Language (XML) that enables the near-real-time exchange of structured yet extensible data between any two or more network entities.  This document defines XMPP's core protocol methods: setup and teardown of XML streams, channel encryption, authentication, error handling, and communication primitives for messaging, network availability ("presence"), and request-response interactions.  This document obsoletes RFC 3920.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6120"/>
          <seriesInfo name="DOI" value="10.17487/RFC6120"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="I-D.ietf-sacm-terminology" target="https://www.ietf.org/archive/id/draft-ietf-sacm-terminology-16.txt">
          <front>
            <title>Security Automation and Continuous Monitoring (SACM) Terminology</title>
            <author fullname="Henk Birkholz" initials="H" surname="Birkholz">
              <organization/>
            </author>
            <author fullname="Jarrett Lu" initials="J" surname="Lu">
              <organization/>
            </author>
            <author fullname="John Strassner" initials="J" surname="Strassner">
              <organization/>
            </author>
            <author fullname="Nancy Cam-Winget" initials="N" surname="Cam-Winget">
              <organization/>
            </author>
            <author fullname="Adam Montville" initials="A" surname="Montville">
              <organization/>
            </author>
            <date day="14" month="December" year="2018"/>
            <abstract>
              <t>This memo documents terminology used in the documents produced by SACM (Security Automation and Continuous Monitoring).</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-sacm-terminology-16"/>
        </reference>
        <reference anchor="RFC8322" target="https://www.rfc-editor.org/info/rfc8322">
          <front>
            <title>Resource-Oriented Lightweight Information Exchange (ROLIE)</title>
            <author fullname="J. Field" initials="J." surname="Field">
              <organization/>
            </author>
            <author fullname="S. Banghart" initials="S." surname="Banghart">
              <organization/>
            </author>
            <author fullname="D. Waltermire" initials="D." surname="Waltermire">
              <organization/>
            </author>
            <date month="February" year="2018"/>
            <abstract>
              <t>This document defines a resource-oriented approach for security automation information publication, discovery, and sharing.  Using this approach, producers may publish, share, and exchange representations of software descriptors, security incidents, attack indicators, software vulnerabilities, configuration checklists, and other security automation information as web-addressable resources. Furthermore, consumers and other stakeholders may access and search this security information as needed, establishing a rapid and on-demand information exchange network for restricted internal use or public access repositories.  This specification extends the Atom Publishing Protocol and Atom Syndication Format to transport and share security automation resource representations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8322"/>
          <seriesInfo name="DOI" value="10.17487/RFC8322"/>
        </reference>
        <reference anchor="draft-birkholz-sacm-yang-content" target="https://tools.ietf.org/html/draft-birkholz-sacm-yang-content-01">
          <front>
            <title>YANG subscribed notifications via SACM Statements</title>
            <author initials="H." surname="Birkholz" fullname="Henk Birkholz">
              <organization/>
            </author>
            <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="RFC7632" target="https://www.rfc-editor.org/info/rfc7632">
          <front>
            <title>Endpoint Security Posture Assessment: Enterprise Use Cases</title>
            <author fullname="D. Waltermire" initials="D." surname="Waltermire">
              <organization/>
            </author>
            <author fullname="D. Harrington" initials="D." surname="Harrington">
              <organization/>
            </author>
            <date month="September" year="2015"/>
            <abstract>
              <t>This memo documents a sampling of use cases for securely aggregating configuration and operational data and evaluating that data to determine an organization's security posture.  From these operational use cases, we can derive common functional capabilities and requirements to guide development of vendor-neutral, interoperable standards for aggregating and evaluating data relevant to security posture.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7632"/>
          <seriesInfo name="DOI" value="10.17487/RFC7632"/>
        </reference>
        <reference anchor="RFC8248" target="https://www.rfc-editor.org/info/rfc8248">
          <front>
            <title>Security Automation and Continuous Monitoring (SACM) Requirements</title>
            <author fullname="N. Cam-Winget" initials="N." surname="Cam-Winget">
              <organization/>
            </author>
            <author fullname="L. Lorenzin" initials="L." surname="Lorenzin">
              <organization/>
            </author>
            <date month="September" year="2017"/>
            <abstract>
              <t>This document defines the scope and set of requirements for the Security Automation and Continuous Monitoring (SACM) architecture, data model, and transfer protocols.  The requirements and scope are based on the agreed-upon use cases described in RFC 7632.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8248"/>
          <seriesInfo name="DOI" value="10.17487/RFC8248"/>
        </reference>
        <reference anchor="RFC5023" target="https://www.rfc-editor.org/info/rfc5023">
          <front>
            <title>The Atom Publishing Protocol</title>
            <author fullname="J. Gregorio" initials="J." role="editor" surname="Gregorio">
              <organization/>
            </author>
            <author fullname="B. de hOra" initials="B." role="editor" surname="de hOra">
              <organization/>
            </author>
            <date month="October" year="2007"/>
            <abstract>
              <t>The Atom Publishing Protocol (AtomPub) is an application-level protocol for publishing and editing Web resources.  The protocol is based on HTTP transfer of Atom-formatted representations.  The Atom format is documented in the Atom Syndication Format.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5023"/>
          <seriesInfo name="DOI" value="10.17487/RFC5023"/>
        </reference>
        <reference anchor="CISCONTROLS" target="https://www.cisecurity.org/controls">
          <front>
            <title>CIS Controls v7.1</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="MQTT" target="https://mqtt.org/mqtt-specification/">
          <front>
            <title>MQTT</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="NIST800126" target="https://csrc.nist.gov/publications/detail/sp/800-126/rev-3/final">
          <front>
            <title>SP 800-126 Rev. 3 - The Technical Specification for the Security Content Automation Protocol (SCAP) - SCAP Version 1.3</title>
            <author initials="D." surname="Waltermire" fullname="David Waltermire">
              <organization/>
            </author>
            <author initials="S." surname="Quinn" fullname="Stephen Quinn">
              <organization/>
            </author>
            <author initials="H." surname="Booth" fullname="Harold Booth">
              <organization/>
            </author>
            <author initials="K." surname="Scarfone" fullname="Karen Scarfone">
              <organization/>
            </author>
            <author initials="D." surname="Prisaca" fullname="Dragos Prisaca">
              <organization/>
            </author>
            <date year="2018" month="February"/>
          </front>
        </reference>
        <reference anchor="NISTIR7694" target="https://csrc.nist.gov/publications/detail/nistir/7694/final">
          <front>
            <title>NISTIR 7694 Specification for Asset Reporting Format 1.1</title>
            <author initials="A." surname="Halbardier" fullname="Adam Halbardier">
              <organization/>
            </author>
            <author initials="D." surname="Waltermire" fullname="David Waltermire">
              <organization/>
            </author>
            <author initials="M." surname="Johnson" fullname="Mark Johnson">
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="XMPPEXT" target="https://xmpp.org/extensions/">
          <front>
            <title>XMPP Extensions</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK99" target="https://www.github.com/sacmwg/vulnerability-scenario/ietf-hackathon">
          <front>
            <title>IETF 99 Hackathon - Vulnerability Scenario EPCP</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK100" target="https://www.github.com/sacmwg/vulnerability-scenario/ietf-hackathon">
          <front>
            <title>IETF 100 Hackathon - Vulnerability Scenario EPCP+XMPP</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK101" target="https://www.github.com/CISecurity/Integration">
          <front>
            <title>IETF 101 Hackathon - Configuration Assessment XMPP</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK102" target="https://www.github.com/CISecurity/YANG">
          <front>
            <title>IETF 102 Hackathon - YANG Collection on Traditional Endpoints</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK103" target="https://www.ietf.org/how/meetings/103/">
          <front>
            <title>IETF 103 Hackathon - N/A</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK104" target="https://github.com/CISecurity/SACM-Architecture">
          <front>
            <title>IETF 104 Hackathon - A simple XMPP client</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK105" target="https://github.com/CISecurity/SACM-Architecture">
          <front>
            <title>IETF 105 Hackathon - A more robust XMPP client including collection extensions</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="security-domain-workflows" numbered="true" toc="default">
      <name>Security Domain Workflows</name>
      <t>This section describes three primary information security domains from which workflows may be derived: IT Asset Management, Vulnerability Management, and Configuration Management.</t>
      <section anchor="it-asset-management" numbered="true" toc="default">
        <name>IT Asset Management</name>
        <t>Information Technology asset management is easier said than done. The <xref target="CISCONTROLS" format="default"/> have two controls dealing with IT asset management. Control 1, Inventory and Control of Hardware Assets, states, "Actively manage (inventory, track, and correct) all hardware devices on the network so that only authorized devices are given access, and unauthorized and unmanaged devices are found and prevented from gaining access." Control 2, Inventory and Control of Software Assets, states, "Actively manage (inventory, track, and correct) all software on the network so that only authorized software is installed and can execute, and that unauthorized and unmanaged software is found and prevented from installation or execution."</t>
        <t>In spirit, this covers all of the processing entities on your network (as opposed to things like network cables, dongles, adapters, etc.), whether physical or virtual, on-premises or in the cloud.</t>
        <section anchor="components-capabilities-and-workflows" numbered="true" toc="default">
          <name>Components, Capabilities and Workflow(s)</name>
          <t>TBD</t>
          <section anchor="components" numbered="true" toc="default">
            <name>Components</name>
            <t>TBD</t>
          </section>
          <section anchor="capabilities-1" numbered="true" toc="default">
            <name>Capabilities</name>
            <t>An IT asset management capability needs to be able to:</t>
            <ul spacing="normal">
              <li>Identify and catalog new assets by executing Target Endpoint Discovery Tasks</li>
              <li>Provide information about its managed assets, including uniquely identifying information (for that enterprise)</li>
              <li>Handle software and/or hardware (including virtual assets)</li>
              <li>Represent cloud hybrid environments</li>
            </ul>
          </section>
          <section anchor="workflows" numbered="true" toc="default">
            <name>Workflow(s)</name>
            <t>TBD</t>
          </section>
        </section>
      </section>
      <section anchor="vulnerability-management" numbered="true" toc="default">
        <name>Vulnerability Management</name>
        <t>Vulnerability management is a relatively established process. To paraphrase the <xref target="CISCONTROLS" format="default"/>, continuous vulnerability management is the act of continuously acquiring, assessing, and taking subsequent action on new information in order to identify and remediate vulnerabilities, therefore minimizing the window of opportunity for attackers.</t>
        <t>A vulnerability assessment (i.e. vulnerability detection) is performed in two steps:</t>
        <ul spacing="normal">
          <li>Endpoint information collected by the endpoint management capabilities is examined by the vulnerability management capabilities through Evaluation Tasks.</li>
          <li>If the data possessed by the endpoint management capabilities is insufficient, a Collection Task is triggered and the necessary data is collected from the target endpoint.</li>
        </ul>
        <t>Vulnerability detection relies on the examination of different endpoint information depending on the nature of a specific vulnerability. Common endpoint information used to detect a vulnerability includes:</t>
        <ul spacing="normal">
          <li>A specific software version is installed on the endpoint</li>
          <li>File system attributes</li>
          <li>Specific state attributes</li>
        </ul>
        <t>In some cases, the endpoint information needed to determine an endpoint's vulnerability status will have been previously collected by the endpoint management capabilities and available in a Repository. However, in other cases, the necessary endpoint information will not be readily available in a Repository and a Collection Task will be triggered to perform collection from the target endpoint. Of course, some implementations of endpoint management capabilities may prefer to enable operators to perform this collection even when sufficient information can be provided by the endpoint management capabilities (e.g. there may be freshness requirements for information).</t>
        <section anchor="components-capabilities-and-workflows-1" numbered="true" toc="default">
          <name>Components, Capabilities and Workflow(s)</name>
          <t>TBD</t>
          <section anchor="components-1" numbered="true" toc="default">
            <name>Components</name>
            <t>TBD</t>
          </section>
          <section anchor="capabilities-2" numbered="true" toc="default">
            <name>Capabilities</name>
            <t>TBD</t>
          </section>
          <section anchor="workflows-1" numbered="true" toc="default">
            <name>Workflow(s)</name>
            <t>TBD</t>
          </section>
        </section>
      </section>
      <section anchor="configuration-management" numbered="true" toc="default">
        <name>Configuration Management</name>
        <t>Configuration management involves configuration assessment, which requires state assessment. The <xref target="CISCONTROLS" format="default"/> specify two high-level controls concerning configuration management (Control 5 for non-network devices and Control 11 for network devices). As an aside, these controls are listed separately because many enterprises have different organizations for managing network infrastructure and workload endpoints. Merging the two controls results in the following paraphrasing: Establish, implement, and actively manage (track, report on, correct) the security configuration of systems using a rigorous configuration management and change control process in order to prevent attackers from exploiting vulnerable services and settings.</t>
        <t>Typically, an enterprise will use configuration guidance from a reputable source, and from time to time they may tailor the guidance from that source prior to adopting it as part of their enterprise standard. The enterprise standard is then provided to the appropriate configuration assessment tools and they assess endpoints and/or appropriate endpoint information.</t>
        <t>A preferred flow follows:</t>
        <ul spacing="normal">
          <li>Reputable source publishes new or updated configuration guidance</li>
          <li>Enterprise configuration assessment capability retrieves configuration guidance from reputable source</li>
          <li>Optional: Configuration guidance is tailored for enterprise-specific needs</li>
          <li>Configuration assessment tool queries asset inventory repository to retrieve a list of affected endpoints</li>
          <li>Configuration assessment tool queries configuration state repository to evaluate compliance</li>
          <li>If information is stale or unavailable, configuration assessment tool triggers an ad hoc assessment</li>
        </ul>
        <t>The SACM architecture needs to support varying deployment models to accommodate the current state of the industry, but should strongly encourage event-driven approaches to monitoring configuration.</t>
        <section anchor="components-capabilities-and-workflows-2" numbered="true" toc="default">
          <name>Components, Capabilities and Workflow(s)</name>
          <t>This section provides more detail about the components and capabilities required when considering the aforementioned configuration management workflow.</t>
          <section anchor="components-2" numbered="true" toc="default">
            <name>Components</name>
            <t>The following is a minimal list of SACM Components required to implement the aforementioned configuration assessment workflow.</t>
            <ul spacing="normal">
              <li>Configuration Policy Feed: An external source of authoritative configuration recommendations.</li>
              <li>Configuration Policy Repository: An internal repository of enterprise standard configurations.</li>
              <li>Configuration Assessment Orchestrator: A component responsible for orchestrating assessments.</li>
              <li>Posture Attribute Collection Subsystem: A component responsible for collection of posture attributes from systems.</li>
              <li>Posture Attribute Repository: A component used for storing system posture attribute values.</li>
              <li>Configuration Assessment Evaluator: A component responsible for evaluating system posture attribute values against expected posture attribute values.</li>
              <li>Configuration Assessment Results Repository: A component used for storing evaluation results.</li>
            </ul>
          </section>
          <section anchor="capabilities-3" numbered="true" toc="default">
            <name>Capabilities</name>
            <t>Per <xref target="RFC8248" format="default"/>, solutions MUST support capability negotiation. Components implementing specific interfaces and operations (i.e. interactions) will need a method of describing their capabilities to other components participating in the ecosystem; for example, "As a component in the ecosystem, I can assess the configuration of Windows, MacOS, and AWS using OVAL".</t>
          </section>
          <section anchor="configuration-assessment-workflow" numbered="true" toc="default">
            <name>Configuration Assessment Workflow</name>
            <t>This section describes the components and interactions in a basic configuration assessment workflow. For simplicity, error conditions are recognized as being necessary and are not depicted. When one component messages another component, the message is expected to be handled appropriately unless there is an error condition, or other notification, messaged in return.</t>
            <figure anchor="fig-configassess">
              <name>Configuration Assessment Component Interactions</name>
              <artwork name="" type="" align="left" alt="">
+-------------+  +----------------+  +------------------+  +------------+
| Policy Feed |  |  Orchestrator  |  |    Evaluation    |  | Evaluation |
+------+------+  +-------+--------+  | Sub-Architecture |  |   Results  |
       |                 |           +---^----------+---+  | Repository |
       |                 |               |          |      +------^-----+
       |                 |               |          |             |
     1.|               3.|             8.|        9.|          10.|
       |                 |               |          |             |
       |                 |               |          |             |
+------v-----------------v---------------+----------v-------------+-----+
|                           Integration Service                         |
+-----+----------------------------------+----------^---------+------^--+
      |                                  |          |         |      |
      |                                  |          |         |      |
    2.|                                4.|        5.|       6.|    7.|
      |                                  |          |         |      |
      |                                  |          |         |      |
+-----v------+                       +---v----------+---+  +--v------+--+
|   Policy   |                       |    Collection    |  |  Posture   |
| Repository |                       | Sub-Architecture |  | Attribute  |
+------------+                       +------------------+  | Repository |
                                                           +------------+
</artwork>
            </figure>
            <t><xref target="fig-configassess" format="default"/> depicts configuration assessment components and their interactions, which are further described below.</t>
            <ol spacing="normal" type="1"><li>A policy feed provides a configuration assessment policy payload to the Integration Service.</li>
              <li>The Policy Repository, a consumer of Policy Feed information, receives and persists the Policy Feed's payload.</li>
              <li>Orchestration component(s), either manually invoked, scheduled, or event-based, publish a payload to begin the configuration assessment process.</li>
              <li>If necessary, Collection Sub-Architecture components may be invoked to collect neeeded posture attribute information.</li>
              <li>If necessary, the Collection Sub-Architecture will provide collected posture attributes to the Integration Service for persistence to the Posture Attribute Repository.</li>
              <li>The Posture Attribute Repository will consume a payload querying for relevant posture attribute information.</li>
              <li>The Posture Attribute Repository will provide the requested information to the Integration Service, allowing further orchestration payloads requesting the Evaluation Sub-Architecture perform evaluation tasks.</li>
              <li>The Evaluation Sub-Architecture consumes the evaluation payload and performs component-specific state comparison operations to produce evaluation results.</li>
              <li>A payload containing evaluation results are provided by the Evaluation Sub-Architecture to the Integration Service</li>
              <li>Evaluation results are consumed by/persisted to the Evaluation Results Repository</li>
            </ol>
            <t>In the above flow, the payload information is expected to convey the context required by the receiving component for the action being taken under different circumstances. For example, a directed message sent from an Orchestrator to a Collection sub-architecture might be telling that Collector to watch a specific posture attribute and report only specific detected changes to the Posture Attribute Repository, or it might be telling the Collector to gather that posture attribute immediately. Such details are expected to be handled as part of that payload, not as part of the architecture described herein.</t>
          </section>
        </section>
      </section>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIACYIsWAAA+V97XLcRpLg/34KBP3D5LK7ackej82Z2z2aki3dWB8jSqOd
mBifi91gN1ZooAdAk2pbvpjXuIjdl5snufyqqqxCAaRseW8vjuGwyG6gKisr
K78zazabTbqiK/PT7CJf7Jqi22dnu67emK6oq8xUy+y8rrqi2tW7NntSV0VX
N0W1yg4vzs6fHGVnzWJddPmi2zX5xFxeNvk1jARfhd8s60VlNjDJsjFX3azI
u6tZaxabmYGnZvc+mbQdTPU/TVlX8FDX7PJJsW3ot7a7/8knX35yf2Ka3Hgo
Jzcrmeh13bxBiL5p6t128ubmNHtcdXlT5d3sAc42WZjuNGu75WRRL+HB02zX
zky7KIrJtjidZFlXL06zfd7Cr23ddE1+1bq/9xv/58TsunXdnE5mWVHBZ2dz
REh3XZRlDs/yAs+WZpO9Dr+pG5j0PEeosqu6cfD5xWSZxd354wv4K9+YojzN
DAw239iR5u2y/u8r/Ga+qDcIHcCaw9o+vZe9zBfr7E8GntpnD5riGqeF5QJA
H9+7/8nn9z7Gv2Gm0+yhaTvAVZ5Xl7t2DR83+Qq2+jR7+md6Z1d1DTz26uLM
rvMrWM2u2pvKLfIrAMd/9rOXdwnDzDc0zBxJ4j91cZOqbpDKr3OkgRdfn9+/
d+9L+fWLz+7dx183QJQlE2pX1+VsYbYGgIapZqWpVjuzyu1jG6Hnts3bdgPI
mG0AwjL6elHDIhZ4tJJf59em3Jnhr6vlti5gaNN1TXG56/LZ0nSGn53hUltc
Hrz0ePZg7g9ZvtieZvA/Wdznn3xymr3dbLerpljyZ58DHk+zf33y/PlkUlRX
GjPhULCzm6Kqy3oFaMRPOhn00/v3T7OmLgvcHD7ll0XzZl2XP/CbsMkrWD/Q
RtXhuHDuTLPCHV533bY9PTlBFLc01xxI6mTdbcqT20aafXKPx2Ie9uezp99k
7e6yXQB+8mVW1V1xVSwIpW12XRhmGRed6XLcpJZetucafxeafzQHIudJ6WNL
+Y/y6k34jbzwdJ6dm83sNTCYvAteeWqqxT78EhD2288/vW+p7f5nX8ivv/nk
/qf4KxyT82dPX7549u1FGlc3NzfzRdHKASN8IUZgA1qNDxiH+Dd+nl3/do7I
evLHly/Tg27+1nU0FP4ya7f5wiHvRI+KI8DfTx9fvPzik0/u3f88PdyibRbz
CmhyvqqvT7a7y9LuxMky7+Ckn7TbExhgBiOcAHeYfXpyVVSm1FNdPM/kiexF
fj3PPgV8v1znxBIqGK7MLjSYxH86+N4Js3OmEy3Unjc1sPy6BBl2fvb8CEbE
f7M/5U2LX9+bfzpEFQ/m2WtT0hlo8mCTH5jrYhl/KW9dzLM/7oqqCl646PLt
Oq/UN4ry6rpbh2RnYAeX6gt5+A/z7GJhmisQm8HzfwBhWYVf+SU8bwo4RyaE
vzGrug2+AtYCX3ydXzY70+yz+5/c+0I2/fGL337+5Wc/d9Pxy6I5wSH6+83D
Z/hlYmfPgLt2QAhbENMo8r8mRgU7dm9ox0BGPzLlpWmWRd4EKyZBHX33i7b5
yTz7H/W6autwo5+Y5o36Annsw38dOIDIlOkA5m+BaFvCmsYOvpw9dN/BV4/O
zv/w5ZfDPGJVdOvdJYrUE+SdN6uT611Z5Y0VY+0ir0xT1CfE4tdm8cYADis9
6eOHL7/OvvwScCVfwoL/pAcBOuNBsofPz58LUPdAyPzqUMEkdwXrmISbhe3e
nWAD7ils5AR1mlVDlJiA4l4ABbCcq2K146eJZlkjyAIQ7r8vCCjbEnPfD+Ym
AXjutIwM/nvZmGWBfwCzfCgaROvA+HQYDC+J65uTDShjcOTaE3jlJAHGpwEY
T0/O3AwDjCK9SBTPs8B06E/1WTDVWdYWm22Z8+FYgAJSdW7u33zouX8Tzb2p
mxzUHtA2Ow0AcIRFuUNrI/MqX+ZP9WQym81AKQZ9zSy6yeTlumgzMJJ2RCfL
HPhi3oL1lRkFTgbkDOwUxjQwar3NG1LSfp7hli/qdt+CFjTPMpr9BsyoDP7d
NvkSeS5oT7stjOTUQfh9Veamgi+umnrDmtSrNgfVpiVgl8CZ/7YDrkiaVXb4
44+i5/z0E31Lf6OyA383OaoXCH65P5rS10q1zEwL/H4HHxYVvEZqX/fTT/PJ
5PWzF394DCT+zYtnr56fkirQ1rtmkYvkRzSiyogrAWOiAomDAMMw3xTdI9jz
LLvYrVZ5i+tbrEGTBNDbdb0D6XqZo+q4KTr8DiDY7sDKaWBJ8DSsr0uRj7Av
4lPaDIBtO4G5Hleww7sFq58gk/E8dmsYagumA85xk4MJxNSwKZZLMBcnH6EB
1dRLfg1pIwdQmm0NqK6vojV2tVBLRCxw1s1229QGLCfEjCi+D2pEyjS7hC1b
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
9nMYrQld1V4yo8FbAH/6P65rxmplDwEA

-->

</rfc>
