<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.12 -->
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-sacm-arch-12" category="std" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.7.0 -->
  <front>
    <title abbrev="SACM Architecture">Security Automation and Continuous Monitoring (SACM) Architecture</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-sacm-arch-12"/>
    <author initials="A." surname="Montville" fullname="Adam W. Montville">
      <organization abbrev="CIS">Center for Internet Security</organization>
      <address>
        <postal>
          <street>31 Tech Valley Drive</street>
          <city>East Greenbush</city>
          <region>NY</region>
          <code>12061</code>
          <country>USA</country>
        </postal>
        <email>adam.montville.sdo@gmail.com</email>
      </address>
    </author>
    <author initials="B." surname="Munyan" fullname="Bill Munyan">
      <organization abbrev="CIS">Center for Internet Security</organization>
      <address>
        <postal>
          <street>31 Tech Valley Drive</street>
          <city>East Greenbush</city>
          <region>NY</region>
          <code>12061</code>
          <country>USA</country>
        </postal>
        <email>bill.munyan.ietf@gmail.com</email>
      </address>
    </author>
    <date year="2021" month="June" day="25"/>
    <area>Security</area>
    <workgroup>SACM Working Group</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <t>This document defines an architecture enabling a cooperative Security Automation and Continuous Monitoring (SACM) ecosystem.  This work is predicated upon information gleaned from SACM Use Cases and Requirements (<xref target="RFC7632" format="default"/> and <xref target="RFC8248" format="default"/> respectively), and terminology as found in <xref target="I-D.ietf-sacm-terminology" format="default"/>.</t>
      <t>WORKING GROUP: The source for this draft is maintained in GitHub.  Suggested changes should be submitted as pull requests at https://github.com/sacmwg/ietf-mandm-sacm-arch/.  Instructions are on that page as well.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" toc="default">
      <name>Introduction</name>
      <t>The purpose of this draft is to define an architectural approach for a SACM Domain, based on the spirit of use cases found in <xref target="RFC7632" format="default"/> and requirements found in <xref target="RFC8248" format="default"/>. This approach gains the most advantage by supporting a variety of collection systems, and intends to enable a cooperative ecosystem of tools from disparate sources with minimal operator configuration.</t>
      <section anchor="requirements-notation" toc="default">
        <name>Requirements notation</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in RFC
2119, BCP 14 <xref target="RFC2119" format="default"/>.</t>
      </section>
    </section>
    <section anchor="terms-and-definitions" toc="default">
      <name>Terms and Definitions</name>
      <dl newline="false" spacing="normal">
        <dt>Assessment:</dt>
        <dd>
  Defined in <xref target="RFC5209" format="default"/> as "the process of collecting posture for a set of capabilities on the endpoint (e.g., host-based firewall) such that the appropriate validators may evaluate the posture against compliance policy."</dd>
        <dt>Asset:</dt>
        <dd>
  Is a system resource, as defined in <xref target="RFC4949" format="default"/>, that may be composed of other assets.</dd>
        <dt/>
        <dd>Examples of Assets include: Endpoints, Software, Guidance, or X.509 public key certificates. An asset is not necessarily owned by an organization.</dd>
        <dt>Asset Management:</dt>
        <dd>
  The IT process by which assets are provisioned, updated, maintained and deprecated.</dd>
        <dt>Attribute:</dt>
        <dd>
  Is a data element, as defined in <xref target="RFC5209" format="default"/>, that is atomic.</dd>
        <dt/>
        <dd>In the context of SACM, attributes are "atomic" information elements and an equivalent to attribute-value-pairs.  Attributes can be components of Subjects.</dd>
        <dt>Capability:</dt>
        <dd>
  A set of features that are available from a SACM Component.</dd>
        <dt/>
        <dd>See also "capability" in <xref target="I-D.ietf-i2nsf-terminology" format="default"/>.</dd>
        <dt>Collector:</dt>
        <dd>
  A piece of software that acquires information about one or more target endpoints by conducting collection tasks.</dd>
        <dt/>
        <dd>A collector can be distributed across multiple endpoints, e.g. across a target endpoint and a SACM component.  The separate parts of the collector can communicate with a specialized protocol, such as PA-TNC [RFC5792].  At least one part of a distributed collector has to take on the role of a provider of information by providing SACM interfaces to propagate capabilities and to provide SACM content in the form of collection results.</dd>
        <dt>Configuration:</dt>
        <dd>
  A non-volatile subset of the endpoint attributes of a endpoint that is intended to be unaffected by a normal reboot-cycle.</dd>
        <dt/>
        <dd>Configuration is a type of imperative guidance that is stored in files (files dedicated to contain configuration and/ or files that are software components), directly on block devices, or on specific hardware components that can be accessed via corresponding software components.  Modification of configuration can be conducted manually or automatically via management (plane) interfaces that support management protocols, such as SNMP or WMI. A change of configuration can occur during both run-time and down- time of an endpoint.  It is common practice to scheduled a change of configuration during or directly after the completion of a boot-cycle via corresponding software components located on the target endpoint itself.</dd>
        <dt>Consumer:</dt>
        <dd>
  A SACM Role that requires a SACM Component to include SACM Functions enabling it to receive information from other SACM Components.</dd>
        <dt>Endpoint:</dt>
        <dd>
  Defined in <xref target="RFC5209" format="default"/> as "any computing device that can be connected to a network."</dd>
        <dt/>
        <dd>Additional Information - The <xref target="RFC5209" format="default"/> definition continues, "Such devices normally are associated with a particular link layer address before joining the network and potentially an IP address once on the network.  This includes: laptops, desktops, servers, cell phones, or any device that may have an IP address."</dd>
        <dt/>
        <dd>To further clarify the <xref target="RFC5209" format="default"/> definition, an endpoint is any physical or virtual device that may have a network address.  Note that, network infrastructure devices (e.g. switches, routers, firewalls), which fit the definition, are also considered to be endpoints within this document.</dd>
        <dt/>
        <dd>Physical endpoints are always composites that are composed of hardware components and software components. Virtual endpoints are composed entirely of software components and rely on software components that provide functions equivalent to hardware components.</dd>
        <dt/>
        <dd>The SACM architecture differentiates two essential categories of endpoints: Endpoints whose security posture is intended to be assessed (target endpoints) and endpoints that are specifically excluded from endpoint posture assessment (excluded endpoints).</dd>
        <dt/>
        <dd>Based on the definition of an asset, an endpoint is a type of asset.</dd>
        <dt>Endpoint Attribute:</dt>
        <dd>
  Is a discreet endpoint characteristic that is computably observable.</dd>
        <dt/>
        <dd>Endpoint Attributes typically constitute Attributes that can be bundled into Subject (e.g. information about a specific network interface can be represented via a set of multiple AVP).</dd>
        <dt>Endpoint Characteristics:</dt>
        <dd>
  The state, configuration and composition of the software components and (virtual) hardware components a target endpoint is composed of, including observable behavior, e.g. sys-calls, log-files, or PDU emission on a network.</dd>
        <dt/>
        <dd>In SACM work-flows, (Target) Endpoint Characteristics are represented via Information Elements.</dd>
        <dt>Posture:</dt>
        <dd>
  Defined in <xref target="RFC5209" format="default"/> as "configuration and/or status of hardware or software on an endpoint as it pertains to an organization's security policy."</dd>
        <dt/>
        <dd>This term is used within the scope of SACM to represent the configuration and state information that is collected from a target endpoint in the form of endpoint attributes (e.g. software/hardware inventory, configuration settings, dynamically assigned addresses).  This information may constitute one or more posture attributes.</dd>
        <dt>Posture Attributes:</dt>
        <dd>
  Defined in <xref target="RFC5209" format="default"/> as "attributes describing the configuration or status (posture) of a feature of the endpoint.  A Posture Attribute represents a single property of an observed state.  For example, a Posture Attribute might describe the version of the operating system installed on the system."</dd>
        <dt/>
        <dd>Within this document this term represents a specific assertion about endpoint configuration or state (e.g. configuration setting, installed software, hardware) represented via endpoint attributes.  The phrase "features of the endpoint" highlighted above refers to installed software or software components.</dd>
        <dt>Provider:</dt>
        <dd>
  A provider is a SACM role assigned to a SACM component that provides role-specific functions to provide information to other SACM components.</dd>
        <dt>Repository:</dt>
        <dd>
  A repository is a controller that contains functions to consume, store and provide information of a particular kind.</dd>
        <dt/>
        <dd>Such information is typically data transported on the data plane, but potentially also data and metadata from the control and management plane.  A single repository may provide the functions of more than one specific repository type (i.e. configuration baseline repository, assessment results repository, etc.)</dd>
        <dt>Security Automation:</dt>
        <dd>
  The process of which security alerts can be automated through the use of different components to monitor, analyze and assess endpoints and network traffic for the purposes of detecting misconfigurations, misbehaviors or threats.</dd>
        <dt/>
        <dd>Security Automation is intended to identify target endpoints that cannot be trusted (see "trusted" in <xref target="RFC4949" format="default"/>. This goal is achieved by creating and processing evidence (assessment statements) that a target endpoint is not a trusted system <xref target="RFC4949" format="default"/>.</dd>
        <dt>SIEM:</dt>
        <dd>
  TBD</dd>
        <dt>SOAR:</dt>
        <dd>
  TBD</dd>
        <dt>State:</dt>
        <dd>
  A volatile set of endpoint attributes of a (target) endpoint that is affected by a reboot-cycle.</dd>
        <dt/>
        <dd>Local state is created by the interaction of components with other components via the control plane, via processing data plane payload, or via the functional properties of local hardware and software components. Dynamic configuration (e.g.  IP address distributed dynamically via an address distribution and management services, such as DHCP) is considered state that is the result of the interaction with another component (e.g. provided by a DHCP server with a specific configuration).</dd>
        <dt>Target Endpoint:</dt>
        <dd>
  Is an endpoint that is under assessment at some point in, or region of, time.</dd>
        <dt/>
        <dd>Every endpoint that is not specifically designated as an excluded endpoint is a target endpoint.  A target endpoint is not part of a SACM domain unless it contains a SACM component (e.g. a SACM component that publishes collection results coming from an internal collector).</dd>
        <dt/>
        <dd>A target endpoint is similar to a device that is a Target of Evaluation (TOE) as defined in Common Criteria and as referenced by <xref target="RFC4949" format="default"/>.</dd>
        <dt>Vulnerability Assessment:</dt>
        <dd>
  An assessment specifically tailored to determining whether a set of endpoints is vulnerable according to the information contained in the vulnerability description information.</dd>
        <dt>Workflow:</dt>
        <dd>
  A workflow is a modular composition of tasks that can contain loops, conditionals, multiple starting points and multiple endpoints.</dd>
        <dt/>
        <dd>The most prominent workflow in SACM is the assessment workflow.</dd>
      </dl>
      <t>--&gt;</t>
    </section>
    <section anchor="architectural-overview" toc="default">
      <name>Architectural Overview</name>
      <t>The generic approach proposed herein recognizes the need to obtain information from existing and future state collection systems, and makes every attempt to respect <xref target="RFC7632" format="default"/> and <xref target="RFC8248" format="default"/>. At the foundation of any architecture are entities, or components, that need to communicate. They communicate by sharing information, where, in a given flow, one or more components are consumers of information and one or more components are providers of information.  Different roles within a cooperative ecosystem may act as both Producers and Consumers of SACM-relevant information.</t>
      <figure anchor="fig-basic">
        <name>Basic Architectural Structure</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
       +----------------+
       | SACM Component |
       |   (Producer)   |
       +-------+--------+
               |
               |
+--------------v----------------+
|      Integration Service      |
+--------------+----------------+
               |
               |
       +-------v--------+
       | SACM Component |
       |   (Consumer)   |
       +----------------+
]]></artwork>
      </figure>
      <section anchor="producer" toc="default">
        <name>Producer</name>
        <t>A Producer can be described as an abstraction that refers to an entity capable of sending SACM-relevant information to one or many Consumers.  In general, information (a "payload") is produced to a particular topic, subscribed to by one or more Consumers.  Producers need not be concerned about any specifics of the payload it is providing to a given topic.  A Producer may, for example, publish posture collection instructions to collector topics.</t>
      </section>
      <section anchor="consumer" toc="default">
        <name>Consumer</name>
        <t>A Consumer can be described as an abstraction that refers to an entity capable of receiving SACM-relevant information from one or many Producers.  A Consumer acts as a subscriber to a given topic (or set of topics), enabling it to receive event notifications when a Producer provides a payload to that topic or topics.  Consumers receive payloads and act upon them according to their capabilities.  A Consumer may, for example, subscribe to a posture collection topic to receive and act upon, collection instructions.</t>
      </section>
      <section anchor="integration-service" toc="default">
        <name>Integration Service</name>
        <t>The Integration Service acts as the broker between Producers and Consumers; acting as the destination for Producers to publish payloads, and as the source for Consumers subscribing to those payloads.</t>
        <t>SACM Components are intended to interact with other SACM Components. These interactions can be thought of, at the architectural level, as the combination of interfaces with their supported operations.  Each interaction will convey a classified payload of information. This classification of payload information allows Consumers to subscribe to only the classifications to which they are capable of handling.  The payload information should contain subdomain-specific characteristics and/or instructions.</t>
      </section>
      <section anchor="payloadmessage" toc="default">
        <name>Payload/Message</name>
        <t>The payload (sometimes referred to as a "message" or "message payload") is the unit of data involved in any given interaction between two SACM components.  The payload MAY be used to convey the semantic meaning of the operation to be performed.  Protocols such as <xref target="RFC6120" format="default"/> achieves this meaning through XML namespace identification within a <tt>&lt;message/&gt;</tt> or <tt>&lt;iq/&gt;</tt> stanza.  Topic-centric protocols such as <xref target="MQTT" format="default"/> convey the meaning of payloads through topic naming techniques.  Both methods require connected components to verify message payloads according to their respective capabilities.</t>
        <t>With respect to the Integration Service, the payload is simply an array of bytes, so the data contained within it is not required to convey a specific format or meaning to the Integration Service.  The serialization of the payload combined with the payload categorization provides meaning within the SACM context.</t>
      </section>
      <section anchor="payload-categorization" toc="default">
        <name>Payload Categorization</name>
        <t>Within the SACM ecosystem, categorization of payloads and their transport provide the context through which various capabilities are achieved.  Two types of payload categorization can be described.</t>
        <section anchor="topic-centric" toc="default">
          <name>Topic-centric</name>
          <t>Topic-centric payload categorization allows for a broad spectrum of payloads by characterizing those payloads through the Integration Service topic.  In this categorization, the topic name becomes a label attached to the payload to which the Integration Service matches against known subscriptions.  The topic becomes the operational context for the payload.  Topic-centric categorization allows for any payload to be sent to any topic, but requires that SACM consumers parse the payloads to determine whether or not they have the capability to act on those payloads.</t>
          <t>When interacting using a topic-centric payload categorization, topic naming conventions SHOULD provide an adequate amount of information to be deterministic regarding the purpose of the interaction.  For example, a topic named <tt>/notification/collection/oval</tt> would indicate that (a) the topic is a broadcast/notification (publish/subscribe) topic, (b) subscribers to this topic are performing a "collection" action, and (c) the payloads published to the topic are represented using the OVAL serialization format.</t>
        </section>
        <section anchor="payload-centric" toc="default">
          <name>Payload-centric</name>
          <t>Payload-centric categorization encapsulates the intent of an interaction within the message payload itself, using an identifying token, tag, or namespace identifier.  This method allows for the limitation of message types, and therefore increases the extensibility of message payloads.</t>
          <t>Payload-centric categorization allows for modularization and specification of extensions, and for plugin-based support of capabilities based the categorization.  XMPP is an example of utilization of payload-centric categorization, allowing only three distinct "stanzas" (<tt>&lt;message/&gt;</tt>, <tt>&lt;presence/&gt;</tt>, and <tt>&lt;iq/&gt;</tt>), using payloads defined by the various extension protocols maintained by the XMPP standards foundation.</t>
        </section>
      </section>
      <section anchor="capabilities" toc="default">
        <name>Capabilities</name>
        <t>SACM components interact with each other based on their capacity to perform specific actions.  In advertising its capabilities, a SACM component indicates its competence to understand message payloads, perform any payload translation or normalization, and act upon that message.  For example, an Orchestration component receives a message to initiate posture attribute collection.  The Orchestrator may then normalize those instructions to a particular collection system's serialization.  The normalized instructions are then published to the Integration Service, notifying the appropriate subscribers.</t>
        <t>Capabilities are described using Uniform Resource Names (URNs), which will be maintained and enhanced via IANA tables (IANA Considerations). Using topic-centric categorization of message payloads, capability URNs SHOULD be associated with Integration Service topics to which publishers, subscribers, and service handlers, will interact.  Topic naming conventions are considered implementation details and are not considered for standardization.  Given a payload-centric categorization of message payloads, capability URNs SHOULD be used as the identifying token, tag, or namespace in order to distinguish specific payloads.</t>
      </section>
      <section anchor="interaction-categories" toc="default">
        <name>Interaction Categories</name>
        <t>Two categories of interactions SHOULD be supported by the Integration Service: broadcast and directed.  Broadcast interactions are asynchronous by default, and directed interactions may be invoked either synchronously or asynchronously.</t>
        <section anchor="broadcast" toc="default">
          <name>Broadcast</name>
          <t>A broadcast interaction, commonly referred to as publish/subscribe, allows for a wider distribution of a message payload.  When a payload is published to the Integration Service, all subscribers to that payload are alerted and may consume the message payload.  This category of interaction can also be described as a "unicast" interaction when only a single subscriber exists.  An example of a broadcast interaction could be to publish Linux OVAL objects to a posture collection topic.  Subscribing consumers receive the notification, and proceed to collect endpoint configuration posture based on the supplied message payload.</t>
        </section>
        <section anchor="directed" toc="default">
          <name>Directed</name>
          <t>The intent of a directed interaction is to enable point-to-point communications between a producer and consumer, through the standard interfaces provided by the Integration Service.  The provider component indicates which consumer is intended to receive the payload, and the Integration Service routes the payload directly to that consumer.  Two "styles" of directed interaction exist, differing only by the response from the consumer.</t>
          <section anchor="synchronous" toc="default">
            <name>Synchronous</name>
            <t>Synchronous, request/response style interaction requires that the requesting component block and wait for the receiving component to respond, or to time out when that response is delayed past a given time threshold.  A synchronous interaction example may be querying a CMDB for posture attribute information in order to perform an evaluation.</t>
          </section>
          <section anchor="asynchronous" toc="default">
            <name>Asynchronous</name>
            <t>An asynchronous interaction involves the payload producer directing the message to a consumer, but not blocking or waiting for an immediate response.  This style of interaction allows the producer to continue on to other activities without the need to wait for responses.  This style is particularly useful when the interaction payload invokes a potentially long-running task, such as data collection, report generation, or policy evaluation.  The receiving component may reply later via callbacks or further interactions, but it is not mandatory.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="sacm-role-based-architecture" toc="default">
      <name>SACM Role-based Architecture</name>
      <t>Within the cooperative SACM ecosystem, a number of roles act in coordination to provide relevant policy/guidance, perform data collection, storage, evaluation, and support downstream analytics and reporting.</t>
      <figure anchor="fig-notional">
        <name>Notional Role-based Architecture</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
 +-------------------------------------------+
 |                 Manager                   |
 +-------------------^-----------------------+
                     |
 +-----------------+ |  +--------------------+
 | Orchestrator(s) | |  |  Repository(-ies)  |
 +---------^-------+ |  +----------^---------+
           |         |             |                +--------------------+
           |         |             |                |  Downstream Uses   |
           |         |             |                | +----------------+ |
 +---------v---------v-------------v---------+      | |   Analytics    | |
 |             Integration Service           <------> +----------------+ |
 +-----------^--------------------------^----+      | +----------------+ |
             |                          |           | |   Reporting    | |
             |                          |           | +----------------+ |
 +-----------v-------------------+      |           +--------------------+
 |  Collection Sub-Architecture  |      |
 +-------------------------------+      |
                        +---------------v---------------+
                        |  Evaluation Sub-Architecture  |
                        +-------------------------------+
]]></artwork>
      </figure>
      <t>As shown in <xref target="fig-notional" format="default"/>, the SACM role-based architecture consists of some basic SACM Components communicating using an integration service. The integration service is expected to maximally align with the requirements described in <xref target="RFC8248" format="default"/>, which means that the integration service will support brokered (i.e. point-to-point) and proxied data exchange.</t>
      <section anchor="architectural-rolescomponents" toc="default">
        <name>Architectural Roles/Components</name>
        <t>This document suggests a variety of players in a cooperative ecosystem; known as SACM Components. SACM Components may be composed of other SACM Components, and each SACM Component plays one, or more, of several roles relevant to the ecosystem. Roles may act as providers of information, consumers of information, or both provider and consumer.  <xref target="fig-notional" format="default"/> depicts a number of SACM components which are architecturally significant and therefore warrant discussion and clarification. Each role depicted in <xref target="fig-notional" format="default"/> represents the interface to the component(s) fulfilling that role, not necessarily any specific implementation.  For example, the "Repository" figure represents the interface to persistent storage, and not any particular persistent storage mechanism.</t>
        <section anchor="manager" toc="default">
          <name>Manager</name>
          <t>The Manager acts as the control plane for the SACM ecosystem; a sort of high level component capable of coordinating the actions, notifications, and events between components.  The manager controls the administrative interfaces with the various components of the ecosystem, acting as the central point to which all other components will register and advertise their capabilities.  It is the responsibility of the manager to control a component's access to the ecosystem, maintain an inventory of components attached to the ecosystem, and to initiate the various workflows involved in the collection and/or evaluation of posture attributes.</t>
          <t>The manager should maintain the master set of capabilities that can be supported within the ecosystem.  These are the various collection, evaluation, and persistence capabilities with which components may register.  The manager MAY be responsible for assigning topics for each of the capabilities that are supported, as registering components subsequently subscribe to, or configure service handlers for, those topics.</t>
          <t>The manager may act as the user interface to the ecosystem, providing user dashboards, inventories, component management, or operational controls within the boundary of responsibility.</t>
        </section>
        <section anchor="orchestrators" toc="default">
          <name>Orchestrator(s)</name>
          <t>Orchestration components provide the manager with resources for delegating work across the SACM ecosystem.  Orchestrators are responsible for receiving messages from the manager, e.g. posture attribute collection instructions, and routing those messages to the appropriate "actions".  For example, an orchestrator may support the capability of translating posture collection instructions using the Open Vulnerability and Assessment Language (OVAL) and providing those instructions to OVAL collectors.  An orchestrator may support the capability of initiating policy evaluation.  Where the Manager is configured to ask a particular set of questions, those questions are delegated to Orchestrators, who are then capable of asking those questions using specific dialects.</t>
        </section>
        <section anchor="repositories" toc="default">
          <name>Repositories</name>
          <t><xref target="fig-notional" format="default"/> only includes a single reference to "Repository(-ies)", but in practice, a number of separate data repositories may exist, including posture attribute repositories, policy repositories, local vulnerability definition data repositories, and state assessment results repositories. The diagrammed notion of a repository within the SACM context represents an interface in which payloads are provided (based on the capabilities of the producer), normalized, and persisted.</t>
          <t>These data repositories may exist separately or together in a single representation, and the design of these repositories may be as distinct as their intended purpose, such as the use of relational database management systems (RDBMS), filesystem-based storage, or graph/map implementations.  Each implementation of a SACM repository should focus on the relationships between data elements and implement the SACM information and data model(s).</t>
        </section>
        <section anchor="integration-service-1" toc="default">
          <name>Integration Service</name>
          <t>If each SACM component represents a set of capabilities, then the Integration Service represents the "fabric" by which SACM components are woven together.  The Integration Service acts as a message broker, combining a set of common message categories and infrastructure to allow SACM components to communicate using a shared set of interfaces.  The Integration Service's brokering capabilities enable the exchange of various information payloads, orchestration of component capabilities, message routing and reliable delivery.  The Integration Service minimizes the dependencies from one system to another through the loose coupling of applications through messaging.  SACM components will "attach" to the Integration Service either through native support for the integration implementation, or through the use of "adapters" which provide a proxied attachment.</t>
          <t>The Integration Service should provide mechanisms for both synchronous and asynchronous request/response-style messaging, and a publish/subscribe mechanism to implement an event-based architecture.  It is the responsibility of the Integration Service to coordinate and manage the sending and receiving of messages.  The Integration Service should allow components to directly connect and produce or consume messages, or connect via message translators which can act as a proxy, transforming messages from a component format to one implementing a SACM data model.</t>
          <t>The Integration Service MUST provide routing capabilities for payloads between producers and consumers.  The Integration Service MAY provide further capabilities within the payload delivery pipeline.  Examples of these capabilities include, but are not limited to, intermediate processing, message transformation, type conversion, validation, or other enterprise integration patterns.</t>
        </section>
      </section>
      <section anchor="downstream-uses" toc="default">
        <name>Downstream Uses</name>
        <t>As depicted by <xref target="fig-notional" format="default"/>, a number of downstream uses exist in the cooperative ecosystem.  Each notional SACM component represents distinct sub-architectures which will exchange information via the integration services, using interactions described in this draft.</t>
        <section anchor="reporting" toc="default">
          <name>Reporting</name>
          <t>The Reporting component represents capabilities outside of the SACM architecture scope dealing with the query and retrieval of collected posture attribute information, evaluation results, etc. in various display formats that are useful to a wide range of stakeholders.</t>
        </section>
        <section anchor="analytics" toc="default">
          <name>Analytics</name>
          <t>The Analytics component represents capabilities outside of the SACM architecture scope dealing with the discovery, interpretation, and communication of any meaningful patterns of data in order to inform effective decision making within the organization.</t>
        </section>
      </section>
      <section anchor="sub-architectures" toc="default">
        <name>Sub-Architectures</name>
        <t><xref target="fig-notional" format="default"/> shows two components representing sub-architectural roles involved in a cooperative ecosystem of SACM components for the purpose of posture assessment: Collection and Evaluation.</t>
        <section anchor="collection-sub-architecture" toc="default">
          <name>Collection Sub-Architecture</name>
          <t>The Collection sub-architecture is, in a SACM context, the mechanism by which posture attributes are collected from applicable endpoints and persisted to a repository, such as a configuration management database (CMDB).  Control plane functions initiated by the Manager will coordinate the necessary orchestration components, who will choreograph endpoint data collection via defined interactions, using the Integration Service as a message broker.  Instructions to perform endpoint data collection are directed to a Posture Collection Service capable of performing collection activities utilizing any number of protocols, such as SNMP, NETCONF/RESTCONF, SCAP, SSH, WinRM, packet capture, or host-based.  Instructions are orchestrated with the appropriate Posture Collection Services using serializations supported according to the collector's capabilities.</t>
          <figure anchor="fig-collection">
            <name>Decomposed Collection Sub-Architecture</name>
            <artwork name="" type="" align="left" alt=""><![CDATA[
  +----------------------------------------------------------+
  |                       Manager                            |
  +-----------+----------------------------------------------+
              |
          Orchestrate
          Collection
              |
  +-----------v-------------+ +------------------------------+
  |      Orchestrator(s)    | | Posture Attribute Repository |
  +-----------+-------------+ +--------------^---------------+
              |                              |
           Perform                           |
          Collection                  Collected Data
              |                              ^
              |                              |
  +-----------v------------------------------+---------------+
  |                    Integration Service                   |
  +----+------------------^------------------------------^---+
       |                  |           |                  |
       v                  +           v                  |
    Perform           Collected    Perform           Collected
   Collection           Data      Collection           Data
       |                  ^           |                  ^
       |                  |           |                  |
  +----v-----------------------+ +------------------------------+
  | Posture Collection Service | |    |     Endpoint     |      |
  +---^------------------------+ | +--v------------------+----+ |
      |                   |      | |Posture Collection Service| |
      |                   |      | +--------------------------+ |
    Events             Queries   +------------------------------+
      ^                   |          (PCS resides on Endpoint)
      |                   |
  +---+-------------------v----+
  |          Endpoint          |
  +----------------------------+
(PCS does not reside on Endpoint)

]]></artwork>
          </figure>
          <section anchor="posture-collection-service" toc="default">
            <name>Posture Collection Service</name>
            <t>The Posture Collection Service (PCS) is a SACM component responsible for the collection of posture attributes from an endpoint or set of endpoints.  A single PCS MAY be responsible for management of posture attribute collection from many endpoints.  The PCS will interact with the Integration Service to receive collection instructions, and to provide collected posture attributes for persistence to one or more Posture Attribute Repositories.  Collection instructions may be supplied in a variety of forms, including subscription to a publish/subscribe topic to which the Integration Service has published instructions, or via request/response-style messaging (either synchronous or asynchronous).</t>
            <t>Four classifications of posture collections MAY be supported.</t>
            <section anchor="ad-hoc" toc="default">
              <name>Ad-Hoc</name>
              <t>Ad-Hoc collection is defined as a single colletion of posture attributes, collected at a particular time.  An example of ad-hoc collection is the single collection of a specific registry key.</t>
            </section>
            <section anchor="continuousscheduled" toc="default">
              <name>Continuous/Scheduled</name>
              <t>Continuous/Scheduled collection is defined as the ongoing, periodic collection of posture attributes.  An example of scheduled collection is the collection of a specific registry key value every day at a given time.</t>
            </section>
            <section anchor="observational" toc="default">
              <name>Observational</name>
              <t>This classification of collection is triggered by the observation, external to an endpoint, of information asserting posture attribute values for that endpoint.  An example of observational collection is examination of netflow data for particular packet captures and/or specific information within those captures.</t>
            </section>
            <section anchor="event-based" toc="default">
              <name>Event-based</name>
              <t>Event-based collection may be triggered either internally or externally to the endpoint.  Internal event-based collection is triggered when a posture attribute of interest is added, removed, or modified on an endpoint.  This modification indicates a change in the current state of the endpoint, potentially affecting its adherence to some defined policy.  Modification of the endpoint's minimum password length is an example of an attribute change which could trigger collection.</t>
              <t>External event-based collection can be described as a collector being subscribed to an external source of information, receiving events from that external source on a periodic or continuous basis.  An example of event-based collection is subscription to YANG Push notifications.</t>
            </section>
          </section>
          <section anchor="endpoint" toc="default">
            <name>Endpoint</name>
            <t>Building upon <xref target="I-D.ietf-sacm-terminology" format="default"/>, the SACM Collection Sub-Architecture augments the definition of an Endpoint as a component within an organization's management domain from which a Posture Collection Service will collect relevant posture attributes.</t>
          </section>
          <section anchor="posture-attribute-repository" toc="default">
            <name>Posture Attribute Repository</name>
            <t>The Posture Attribute Repository is a SACM component responsible for the persistent storage of posture attributes collected via interactions between the Posture Collection Service and Endpoints.</t>
          </section>
          <section anchor="posture-collection-workflow" toc="default">
            <name>Posture Collection Workflow</name>
            <t>Posture collection may be triggered from a number of components, but commonly begin either via event-based triggering on an endpoint or through manual orchestration, both illustrated in <xref target="fig-collection" format="default"/> above.  Once orchestration has provided the directive to perform collection, posture collection services consume the directives.  Posture collection is invoked for those endpoints overseen by the respective posture collection services.  Collected data is then provided to the Integration Service, with a directive to store that information in an appropriate repository.</t>
          </section>
        </section>
        <section anchor="evaluation-sub-architecture" toc="default">
          <name>Evaluation Sub-Architecture</name>
          <t>The Evaluation Sub-Architecture, in the SACM context, is the mechanism by which policy, expressed in the form of expected state, is compared with collected posture attributes to yield an evaluation result, that result being contextually dependent on the policy being evaluated.</t>
          <figure anchor="fig-evaluation">
            <name>Decomposed Evaluation Sub-Architecture</name>
            <artwork name="" type="" align="left" alt=""><![CDATA[
+------------------+
|     Manager      |
+-------+----------+
        |
   Orchestrate        +------------------+
    Evaluation        |    Collection    |    +-------------------------------+
        |             | Sub+Architecture |    | Evaluation Results Repository |
 +------v----------+  +--------^---------+    +-----------------^-------------+
 | Orchestrator(s) |           |                                |
 +------+----------+     (Potentially)                          |
        |                   Perform                 Store Evaluation Results
     Perform               Collection                           |
    Evaluation                 |                                |
        |                      |                                |
 +------v----------------------v--------------------------------+-------------+
 |                             Integration Service                            |
 +--------^----------------------^-----------------------^--------------------+
          |                      |                       |
          |                      |                       |
          |               Retrieve Posture            Perform
   Retrieve Policy           Attributes              Evaluation
          |                      |                       |
          |                      |                       |
   +------v-----+          +-----v------+       +--------v-------------------+
   |   Policy   |          |  Posture   |       | Posture Evaluation Service |
   | Repository |          | Attribute  |       +----------------------------+
   +------------+          | Repository |
                           +------------+

]]></artwork>
          </figure>
          <section anchor="posture-evaluation-service" toc="default">
            <name>Posture Evaluation Service</name>
            <t>The Posture Evaluation Service (PES) represents the SACM component responsible for coordinating the policy to be evaluated and the collected posture attributes relevant to that policy, as well as the comparison engine responsible for correctly determining compliance with the expected state.</t>
          </section>
          <section anchor="policy-repository" toc="default">
            <name>Policy Repository</name>
            <t>The Policy Repository represents a persistent storage mechanism for the policy to be assessed against collected posture attributes to determine if an endpoint meets the desired expected state.  Examples of information contained in a Policy Repository would be Vulnerability Definition Data or configuration recommendations as part of a CIS Benchmark or DISA STIG.</t>
          </section>
          <section anchor="evaluation-results-repository" toc="default">
            <name>Evaluation Results Repository</name>
            <t>The Evaluation Results Repository persists the information representing the results of a particular posture assessment, indicating those posture attributes collected from various endpoints which either meet or do not meet the expected state defined by the assessed policy.  Consideration should be made for the context of individual results.  For example, meeting the expected state for a configuration attribute indicates a correct configuration of the endpoint, whereas meeting an expected state for a vulnerable software version indicates an incorrect configuration.</t>
          </section>
          <section anchor="posture-evaluation-workflow" toc="default">
            <name>Posture Evaluation Workflow</name>
            <t>Posture evaluation is orchestrated through the Integration Service to the appropriate Posture Evaluation Service (PES).  The PES will, using interactions defined by the applicable taxonomy, query both the Posture Attribute Repository and the Policy Repository to obtain relevant state data for comparison.  If necessary, the PES may be required to invoke further posture collection.  Once all relevant posture information has been collected, it is compared to expected state based on applicable policy.  Comparison results are then persisted to an evaluation results repository for further downstream use and analysis.</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="ecosystem-interactions" toc="default">
      <name>Ecosystem Interactions</name>
      <t>Ecosystem interactions describe the various functions between SACM components, including manager requirements, the onboarding of components, capability advertisement, administrative actions, and status updates, among others. The Manager component acts as the administrative "lead" for the SACM ecosystem, and must maintain records of registered components, manage capabilities, and more.</t>
      <section anchor="manager-1" toc="default">
        <name>Manager</name>
        <t>The Manager, being a specialized role in the architecture, enables the onboarding and capability management of the various SACM component roles.  The Manager must support the set of capabilities needed to operate the SACM ecosystem.</t>
        <t>With this in mind, the Manager must first authenticate to the Integration Service.  Once authentication has succeeded, the Manager MUST establish a service handler capable of performing SACM component registration/onboarding activities (Component Registration Operation).  The Manager MUST also establish a subscription to an ecosystem-wide status notification mechanism,  in order to receive published status updates from other SACM components.</t>
        <t>The following requirements exist for the Manager to establish service handlers supporting the component registration taxonomy (Component Registration Operation):</t>
        <ul spacing="normal">
          <li>The Manager MUST enable the capability to receive onboarding requests,</li>
          <li>The Manager MUST have the capability to generate, manage, and persist unique identifiers for all registered components,</li>
          <li>The Manager MUST maintain the relationships between capabilities and payload categorizations (such as topic names or specific payload identifiers),</li>
          <li>The Manager MUST have the capability to inventory and manage its "roster" (the list of registered components),</li>
          <li>The Manager MUST have the capability to manage its roster's advertised capabilities, including those endpoints to which those capabilities apply.</li>
          <li>In addition to supporting component registration, the Manager is responsible for many of the operational functions of the architecture, including initiating collection or evaluation, queries for repository data, or the assembly of information for downstream use.</li>
          <li>The Manager MUST support making directed requests to registered components over the component's administrative interface.  Administrative interface functions are described by their taxonomy, below.</li>
          <li>The Manager MUST support each of the interaction categories as described above.</li>
        </ul>
      </section>
      <section anchor="component-registration" toc="default">
        <name>Component Registration</name>
        <t>Component registration describes how an individual component becomes part of the SACM ecosystem; authenticating to the Integration Service, registering and establishing its administrative interface with, the Manager.</t>
        <t>The component onboarding workflow involves multiple steps:</t>
        <ul spacing="normal">
          <li>The component first authenticates to the Integration Service.</li>
          <li>The component initiates registration with the Manager, per the component registration operation (Component Registration Operation).</li>
          <li>The component handles the response from the Manager to configure a service handler allowing the component to receive directed messages over the  administrative interface with the Manager.</li>
        </ul>
      </section>
      <section anchor="administrative-interface" toc="default">
        <name>Administrative Interface</name>
        <t>The administrative interface represents a direct communication channel between the Manager and any registered Component.  This interface allows the Manager to make directed requests to a component in order to perform specific actions.</t>
        <section anchor="capability-advertisement-handshake" toc="default">
          <name>Capability Advertisement Handshake</name>
          <t>Capability Advertisement is the mechanism by which components initially indicate their capabilities to the Manager. This handshake is completed using the administrative interface with the Manager.  It becomes the Manager's responsibility to persist component/capability relationships, and to provide the component the information necessary to receive and process message payloads specific to the supported capabilities.</t>
        </section>
        <section anchor="health-check" toc="default">
          <name>Health Check</name>
          <t>The administrative "health check" is a mechanism by which the Manager queries for the "liveness" of its roster of components, and to possibly alert users or other systems when components are no longer present.  The Manager MAY enable a periodic message to each component to determine if that component is still listening to the Administrative Interface. The Health Check interaction MAY include a request for "Capability Refresh", to reinitiate the Capability Advertisement Handshake. This interaction is similar to the "Heartbeat" interaction, but is initiated by the Manager.</t>
        </section>
        <section anchor="heartbeat" toc="default">
          <name>Heartbeat</name>
          <t>The administrative "heartbeat" is a mechanism by which a Component indicates to the Manager that the Component remains connected to the ecosystem. The Heartbeat differs from the Health Check interaction in that the Component initiates the interaction, and that no response from the Manager is required.</t>
        </section>
        <section anchor="capability-specific-requests" toc="default">
          <name>Capability-specific Requests</name>
          <t>Any number of capability-specific requests can be enabled through the administrative interface that allow the Manager to direct actions to be performed by a specific component.  Utilizing the interface from a component to the Manager, this interface can be used to indicate a component has come back online, or to provide an updated capability advertisement, potentially resulting in updates to subscriptions or service handlers.</t>
        </section>
      </section>
      <section anchor="status-notifications" toc="default">
        <name>Status Notifications</name>
        <t>A generic status notifications mechanism SHOULD be configured to which (a) the Manager is subscribed, and (b) all onboarded components can publish.  Status notifications may be used by the Manager to update user interfaces, to provide notification of the start, finish, success or failure of ecosystem operations, or as events to trigger subsequent activities.</t>
      </section>
      <section anchor="component-interactions" toc="default">
        <name>Component Interactions</name>
        <t>Component interactions describe functionality between components relating to collection, evaluation, or other downstream processes.  The following component interactions begin with the Manager providing a set of instructions to an Orchestrator or set of Orchestrators that have registered with the SACM ecosystem indicating the appropriate capabilities, such as collection or evaluation.  Subscribing Orchestrator(s) MAY translate, manipulate, filter, augment, or otherwise transform the Manager's instructions into content supported through the Orchestrator's capabilities.</t>
        <section anchor="initiate-ad-hoc-collection" toc="default">
          <name>Initiate Ad-Hoc Collection</name>
          <t>The Orchestrator supplies a payload of collection instructions to a Posture Collection Service either through direct or broadcast mechanisms.  The receiving PCS components perform the required collection based on their capabilities.  Each PCS then forms a payload of collected posture attributes (including endpoint identifying information) and provides that payload to the Posture Attribute Repository interface, for persistence.</t>
        </section>
        <section anchor="coordinate-periodic-collection" toc="default">
          <name>Coordinate Periodic Collection</name>
          <t>Similar to ad-hoc collection, the Orchestrator supplies a payload of collection instructions similar to those of ad-hoc collection.  Additional information elements containing collection identification and periodicity are included.</t>
          <section anchor="schedule-periodic-collection" toc="default">
            <name>Schedule Periodic Collection</name>
            <t>To enable operations on periodic collection, the scheduling payload MUST include both a unique identifier for the set of collection instructions, as well as a periodicity expression to enable the collection schedule.  An optional "immediate collection" flag will indicate to the collection component that, upon receipt of the collection instructions, a collection will automatically be initiated prior to engagement of the scheduled collection.</t>
          </section>
          <section anchor="cancel-periodic-collection" toc="default">
            <name>Cancel Periodic Collection</name>
            <t>The Orchestrator disables the periodic collection of posture attributes by supplying collector(s) the unique identifier of previously scheduled collection instructions.  An optional "final collection" flag will indicate to the collection component that, upon receipt of the cancellation instructions, a final ad-hoc collection is to take place.</t>
          </section>
        </section>
        <section anchor="coordinate-observationalevent-based-collection" toc="default">
          <name>Coordinate Observational/Event-based Collection</name>
          <t>In these scenarios, the Posture Collection Service acts as the "observer".  Interactions with the observer could specify a time period of observation and potentially information intended to filter observed posture attributes to aid the PCS in determining those attributes that are applicable for collection and persistence to the Posture Attribute Repository.</t>
          <section anchor="initiate-observationalevent-based-collection" toc="default">
            <name>Initiate Observational/Event-based Collection</name>
            <t>The Orchestrator supplies a payload of instructions to a topic or set of topics to which Posture Collection Services (observers) are subscribed.  This payload could include specific instructions based on the observer's capabilities to determine specific posture attributes to observe and collect.</t>
          </section>
          <section anchor="cancel-observationalevent-based-collection" toc="default">
            <name>Cancel Observational/Event-based Collection</name>
            <t>The Orchestrator supplies a payload of instructions to a topic or set of topics to which Posture Collection Services are subscribed.  The receiving PCS components cancel the identified observational/event-based collection executing on those PCS components.</t>
          </section>
        </section>
        <section anchor="persist-collected-posture-attributes" toc="default">
          <name>Persist Collected Posture Attributes</name>
          <t>Following successful collection, Posture Collection Services (PCS) will supply the payload of collected posture attributes to the interface(s) supporting the persistent storage of those attributes to the Posture Attribute Repository.  Information in this payload should include identifying information of the computing resource(s) for which attributes were collected.</t>
        </section>
        <section anchor="initiate-ad-hoc-evaluation" toc="default">
          <name>Initiate Ad-Hoc Evaluation</name>
          <t>The Orchestrator supplies a payload of evaluation instructions to a Posture Evaluation Services (PES) either through direct or broadcast mechanisms.  The receiving PES components perform the required evaluation based on their capabilities.  The PES generates a payload of posture evaluation results and publishes that payload to the Evaluation Results Repository interface, for persistence.</t>
        </section>
        <section anchor="coordinate-periodic-evaluation" toc="default">
          <name>Coordinate Periodic Evaluation</name>
          <t>Similar to ad-hoc evaluation, the Orchestrator supplies a payload of evaluation instructions similar to those of ad-hoc evaluation.  Additional information elements containing evaluation identification and periodicity are included.</t>
          <section anchor="schedule-periodic-evaluation" toc="default">
            <name>Schedule Periodic Evaluation</name>
            <t>To enable operations on periodic evaluation, the scheduling payload MUST include both a unique identifier for the set of evaluation instructions, as well as a periodicity expression to enable the evaluation schedule.  An optional "immediate evaluation" flag will indicate to the Posture Evaluation Service (PES) that, upon receipt of the evaluation instructions, an evaluation will automatically be initiated prior to engagement of the scheduled evaluation.</t>
          </section>
          <section anchor="cancel-periodic-evaluation" toc="default">
            <name>Cancel Periodic Evaluation</name>
            <t>The Orchestrator disables the periodic evaluation of posture attributes by supplying Posture Evaluation Service(s) the unique identifier of previously scheduled evaluation instructions.  An optional "final evaluation" flag will indicate to the PES that, upon receipt of the cancellation instructions, a final ad-hoc evaluation is to take place.</t>
          </section>
        </section>
        <section anchor="coordinate-change-based-evaluation" toc="default">
          <name>Coordinate Change-based Evaluation</name>
          <t>A more fine-grained approach to periodic evaluation may be enabled through the triggering of Posture Evaluation based on changes to posture attribute values at the time of their collection and persistence to the Posture Attribute Repository.</t>
          <section anchor="identify-attributes" toc="default">
            <name>Identify Attributes</name>
            <t>The Orchestrator enables change-based evaluation through a payload published to Posture Attribute Repository component(s).  This payload includes appropriate information elements describing the posture attributes on which changes in value will trigger posture evaluation.</t>
          </section>
          <section anchor="cancel-change-based-evaluation" toc="default">
            <name>Cancel Change-based Evaluation</name>
            <t>An Orchestrator may disable change-based evaluation through a payload published to Posture Attribute Repository component(s), including those information elements necessary to identify those posture attributes for which change-based evaluation no longer applies.</t>
          </section>
        </section>
        <section anchor="queries" toc="default">
          <name>Queries</name>
          <t>Queries should allow for a "freshness" time period, allowing the requesting entity to determine if/when posture attributes must be re-collected prior to performing evaluation.  This freshness time period can be "zeroed out" for the purpose of automatically triggering re-collection regardless of the most recent collection.</t>
        </section>
      </section>
    </section>
    <section anchor="operations" toc="default">
      <name>Operations</name>
      <t>The following sections describe a number of operations required to enable a cooperative ecosystem of posture attribute collection and evaluation functions.</t>
      <section anchor="component-registration-1" toc="default">
        <name>Component Registration</name>
        <t>Component registration describes how an individual component becomes part of the SACM ecosystem; registering with the Manager, and establishing the administrative interface.</t>
        <ul spacing="normal">
          <li>Interaction Type: Directed (Request/Response)</li>
          <li>Source Component: Any component wishing to join the ecosystem, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
          <li>Target Component(s): Manager</li>
        </ul>
        <section anchor="request-payload" toc="default">
          <name>Request Payload</name>
          <t>When a component onboards with the ecosystem, it must identify itself to the Manager, using either descriptive information or an already-existing component unique identifier.</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
component-registration-request:
  {:component-identification:}

component-identification:
  component-unique-identifier (if re-establishing communication)
    #-OR-#
  component-type {:component-type:}
  component-name
  component-description (optional)

component-type:
  enumeration:
    - posture-collection-service
    - posture-evaluation-service
    - repository-interface
    - orchestrator
    - others?
]]></artwork>
          <t>When registering for the first time, the component will send identifying information including the component type and a name.  If the component is re-establishing communications, for example after a restart of the component or deployment of a new version, the component only needs to supply its previously generated (and persisted) [component-unique-identifier].</t>
        </section>
        <section anchor="request-processing" toc="default">
          <name>Request Processing</name>
          <t>When the Manager receives the component's request for onboarding, it will:</t>
          <ul spacing="normal">
            <li>Generate a unique identifier, <tt>[component-unique-identifier]</tt>, for the onboarding component,</li>
            <li>Persist identifying information, including the <tt>[component-unique-identifier]</tt> to its component inventory, enabling an up-to-date roster of components being managed,</li>
            <li>Establish the administrative interface to the onboarded component by enabling a service handler to listen for directed messages from the component.</li>
          </ul>
        </section>
        <section anchor="response-payload" toc="default">
          <name>Response Payload</name>
          <t>The Manager will respond to the component with a payload including the component's unique identifier.  At this point, the Manager is aware of the component's existence in the ecosystem, and the component can self-identify by virtue of receiving its unique identifier.</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
component-registration-response:
  component-unique-identifier: [component-unique-identifier]
]]></artwork>
        </section>
        <section anchor="response-processing" toc="default">
          <name>Response Processing</name>
          <t>Successful receipt of the Manager's response, including the <tt>[component-unique-identifier]</tt>, indicates the component is onboarded to the ecosystem.  Using the response payload, the component can then establish it's end of the administrative interface with the Manager.  The component must then persist it's unique identifier for use when re-establishing communication with the Manager after failure recovery or restart.</t>
        </section>
      </section>
      <section anchor="administrative-interface-1" toc="default">
        <name>Administrative Interface</name>
        <t>A number of functions may take place which, instead of being published to multiple subscribers, may require direct interaction between the Manager and a registered component (and vice-versa).  During component onboarding, this direct channel, known as the Administrative Interface, is established first by the Manager and subsequently complemented by the component onboarding the SACM ecosystem.  Three operations are defined for the administrative interface, but any number of application or capability-specific operations MAY be enabled using the directed messaging provided by this interface.</t>
        <section anchor="capability-advertisement-handshake-1" toc="default">
          <name>Capability Advertisement Handshake</name>
          <t>Capability advertisement represents the ability of any registered component to inform the Manager of that component's capacity for performing certain operations. For example, a Posture Collection Service component may advertise its capability to perform collection using a particular collection system/serialization.  This capability advertisement is important for the Manager to persist in order for the Manager to correctly classify components registered within the SACM ecosystem, and therefore provide the ability to publish messages to components in accordance with their capabilities.</t>
          <ul spacing="normal">
            <li>Interaction Type: Directed (Request/Response)</li>
            <li>Source Component: Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
            <li>Target Component(s): Manager</li>
          </ul>
          <section anchor="request-payload-1" toc="default">
            <name>Request Payload</name>
            <t>The component's capability advertisement request payload will include a list of "Capability URNs" (TBD IANA SECTION) that represent it's supported operational capabilities.</t>
            <artwork name="" type="" align="left" alt=""><![CDATA[
capability-advertisement:
  capabilities:
    capability-urn: [urn]
    capability-urn: [urn]
    capability-urn: [urn]
    ...
]]></artwork>
          </section>
          <section anchor="request-processing-1" toc="default">
            <name>Request Processing</name>
            <t>Upon receipt of the component's capability advertisement, the Manager SHOULD:</t>
            <ul spacing="normal">
              <li>Persist the component's capabilities to the Manager's inventory</li>
              <li>Coordinate, based on the supplied capabilities, the service handlers (for directed messages) and/or event listeners (for broadcast messages) to which the component should support.</li>
            </ul>
          </section>
          <section anchor="response-payload-1" toc="default">
            <name>Response Payload</name>
            <t>The response payload delivered to the component should include the appropriate service handling/event listening information required for the component to handle further interactions based on each advertised capability.  If a capability was not registered successfully, appropriate error messages SHOULD be supplied to inform the component of the failure(s).</t>
            <artwork name="" type="" align="left" alt=""><![CDATA[
capability-advertisement-response:
  capabilities:
    capability:
      capability-urn: [urn]
      registration-status: (success | failure)
      service-handler-or-event-listener: [info]
      messages: [messages]
    capability:
      capability-urn: [urn]
      registration-status: (success | failure)
      service-handler-or-event-listener: [info]
      messages: [messages]
]]></artwork>
          </section>
          <section anchor="response-processing-1" toc="default">
            <name>Response Processing</name>
            <t>Once the component has received the response to its capability advertisement, it should configure the capability-specific service handler(s) or event listener(s). Once these handlers/listeners have been configured, the component is considered fully onboarded to the SACM ecosystem.</t>
          </section>
        </section>
        <section anchor="health-check-1" toc="default">
          <name>Health Check</name>
          <t>As time passes, it is important that the Manager maintains knowledge of all registered component's current operational status.  The health check operation describes the efforts taken by the Manager to maintain the most up-to-date inventory of it's component roster, and to potentially trigger events to users or outside systems (e.g. a SIEM or SOAR) indicating unavailable components.</t>
          <ul spacing="normal">
            <li>Interaction Type: Directed (Request/Response)</li>
            <li>Source Component: Manager</li>
            <li>Target Component(s): Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
          </ul>
          <section anchor="request-payload-2" toc="default">
            <name>Request Payload</name>
            <t>The request for the health check is a simple "ping".</t>
            <artwork name="" type="" align="left" alt=""><![CDATA[
health-check-request:
  action: ping
]]></artwork>
          </section>
          <section anchor="request-processing-2" toc="default">
            <name>Request Processing</name>
            <t>When the target component receives the health check request, the target component need only respond that it is operational and connected to the integration service.  This is a simple "Hello component, are you listening?  Yes, I am" interaction.  The health check request from the Manager should be made with an appropriately small timeout indicator; only an operational component will be able to respond to the request, so if that component is offline and cannot respond, the Manager should not be kept waiting for an extended amount of time.</t>
          </section>
          <section anchor="response-payload-2" toc="default">
            <name>Response Payload</name>
            <t>When responding to the health check request, the response payload will simply indicate success:
~~~~~~
health-check-response:
  response: success
~~~~~~</t>
          </section>
          <section anchor="response-processing-2" toc="default">
            <name>Response Processing</name>
            <t>Upon receipt of the "health-check-response" payload, the Manager will update its inventory of currently operational components with the timestamp of the receipt.  Manager implementations may raise alerts, inform users, or take other actions when health checks are unsuccessful, at their discretion.</t>
          </section>
        </section>
        <section anchor="heartbeat-1" toc="default">
          <name>Heartbeat</name>
          <t>As time passes and SACM ecosystem components which have previously registered are brought offline (perhaps for maintenance or redeployment) and back online, it is important that registered components maintain administrative contact with the Manager. The heartbeat operation describes the efforts taken by a registered component to determine the status of contact with the Manager, and to take appropriate action if such contact cannot be made.</t>
          <ul spacing="normal">
            <li>Interaction Type: Directed (Request/Response)</li>
            <li>Source Component: Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
            <li>Target Component(s): Manager</li>
          </ul>
          <section anchor="request-payload-3" toc="default">
            <name>Request Payload</name>
            <t>The request payload simply defines the hearbeat action:</t>
            <artwork name="" type="" align="left" alt=""><![CDATA[
heartbeat-request:
  action: pulse
]]></artwork>
          </section>
          <section anchor="request-processing-3" toc="default">
            <name>Request Processing</name>
            <t>When the Manager receives the heartbeat request, it need only respond that it is operational and connected to the integration service.  This is a simple "Hello Manager, are you listening?  Yes, I am" interaction.  The heartbeat request from the component should be made with an appropriately small timeout indicator; only an operational Manager will be able to respond to the request, so if it is offline and cannot respond, the component should not be kept waiting for an extended amount of time.</t>
          </section>
          <section anchor="response-payload-3" toc="default">
            <name>Response Payload</name>
            <t>When responding to the heartbeat request, the response payload will simply indicate success:
~~~~~~
heartbeat-response:
  response: success
~~~~~~</t>
          </section>
          <section anchor="response-processing-3" toc="default">
            <name>Response Processing</name>
            <t>Upon receipt of the "heartbeat-response" payload, the component may reset its heartbeat timer and continue normal operations, awaiting incoming message payloads.  Component implementations may raise alerts, inform users, or take other actions when heartbeat requests are unsuccessful (potentially indicating a downed Manager), at their discretion.</t>
          </section>
        </section>
      </section>
      <section anchor="status-notification" toc="default">
        <name>Status Notification</name>
        <t>From time to time during the performance of any given operation, a component may need to supply status information to the Manager (or any other concerned component), for use in display to users, or to trigger other events within the SACM ecosystem.  The status notification operation is designed to allow any component to broadcast status message payloads to any subscribers with the need to know. For example, a collection component could broadcast to the Manager that it has initiated collection, subsequent collection progress updates, and finally completion or error conditions.</t>
        <ul spacing="normal">
          <li>Interaction Type: Broadcast (Publish/Subscribe)</li>
          <li>Source Component: Any registered component, such as Posture Collection Services, Repository Interfaces, Posture Evaluation Services and more.</li>
          <li>Target Component(s): Typically the Manager, but any registered component may subscribe to status notifications.</li>
        </ul>
        <section anchor="request-payload-4" toc="default">
          <name>Request Payload</name>
          <t>At a minimum, the payload broadcast for a status notification MUST include the status message and the publishing component's <tt>component-unique-identifier</tt>. Further identifying information, such as status codes, operation indicators, etc., MAY be provided by implementing components.</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
status-notification:
  publisher: [component-unique-identifier]
  message: [message]
  [additional information]
]]></artwork>
        </section>
        <section anchor="request-processing-4" toc="default">
          <name>Request Processing</name>
          <t>When subscribers are notified of the status message, respective components may act upon them in component/application-specific ways, including persisting those messages to repositories, forwarding to log aggregation tools, displaying on user interfaces, and so on. Potential for use of component status notifications is only limited by application implementations.</t>
        </section>
        <section anchor="response-payload-4" toc="default">
          <name>Response Payload</name>
          <t>N/A</t>
        </section>
        <section anchor="response-processing-4" toc="default">
          <name>Response Processing</name>
          <t>N/A</t>
        </section>
      </section>
      <section anchor="initiate-ad-hoc-collection-1" toc="default">
        <name>Initiate Ad-Hoc Collection</name>
        <t>### Manager to Orchestrator
### Orchestrator to Posture Collection Service
### Posture Collection Service to Posture Attribute Repository</t>
      </section>
      <section anchor="initiate-ad-hoc-evaluation-1" toc="default">
        <name>Initiate Ad-Hoc Evaluation</name>
        <t>### Manager to Orchestrator
### Orchestrator to Evaluator
### Evaluator to Posture Evaluation Repository</t>
      </section>
    </section>
    <section anchor="privacy-considerations" toc="default">
      <name>Privacy Considerations</name>
      <t>[TBD]</t>
    </section>
    <section anchor="security-considerations" toc="default">
      <name>Security Considerations</name>
      <t>[TBD]</t>
    </section>
    <section anchor="iana-considerations" toc="default">
      <name>IANA Considerations</name>
      <t>[TBD] Some boilerplate code...</t>
      <section anchor="component-types" toc="default">
        <name>Component Types</name>
        <t>URI: <tt>urn:ietf:sacm:component-type</tt>
Description: The allowed enumeration of the various component types permitted to utilize the SACM ecosystem.</t>
        <ul spacing="normal">
          <li>Manager</li>
          <li>Orchestrator</li>
          <li>Collector</li>
          <li>Evaluator</li>
          <li>Repository Interface</li>
          <li>[MORE]</li>
        </ul>
      </section>
      <section anchor="component-capabilities" toc="default">
        <name>Component Capabilities</name>
        <t>### Health Check
A URN representing a component's capability to initiate Health Check operations and to process any provided response payloads.</t>
        <t>URN: <tt>urn:ietf:sacm:capability:action:health-check</tt></t>
        <section anchor="heartbeat-2" toc="default">
          <name>Heartbeat</name>
          <t>A URN representing a component's capability to initiate Heartbeat operations and to process any provided response payloads.</t>
          <t>URN: <tt>urn:ietf:sacm:capability:action:heartbeat</tt></t>
        </section>
        <section anchor="status-notification-publish" toc="default">
          <name>Status Notification (Publish)</name>
          <t>A URN representing a component's capability to publish status notifications.</t>
          <t>URN: <tt>urn:ietf:sacm:capability:publish:status-notification</tt></t>
        </section>
        <section anchor="status-notification-subscribe" toc="default">
          <name>Status Notification (Subscribe)</name>
          <t>A URN representing a component's capability to subscribe to status notification events.</t>
          <t>URN: <tt>urn:ietf:sacm:capability:subscribe:status-notification</tt></t>
        </section>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner">
              <organization/>
            </author>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8412" target="https://www.rfc-editor.org/info/rfc8412">
          <front>
            <title>Software Inventory Message and Attributes (SWIMA) for PA-TNC</title>
            <author fullname="C. Schmidt" initials="C." surname="Schmidt">
              <organization/>
            </author>
            <author fullname="D. Haynes" initials="D." surname="Haynes">
              <organization/>
            </author>
            <author fullname="C. Coffin" initials="C." surname="Coffin">
              <organization/>
            </author>
            <author fullname="D. Waltermire" initials="D." surname="Waltermire">
              <organization/>
            </author>
            <author fullname="J. Fitzgerald-McKay" initials="J." surname="Fitzgerald-McKay">
              <organization/>
            </author>
            <date month="July" year="2018"/>
            <abstract>
              <t>This document extends "PA-TNC: A Posture Attribute (PA) Protocol Compatible with Trusted Network Connect (TNC)" (RFC 5792) by providing specific attributes and message exchanges to allow endpoints to report their installed software inventory information to a NEA Server, as defined in "Network Endpoint Assessment (NEA): Overview and Requirements" (RFC 5209).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8412"/>
          <seriesInfo name="DOI" value="10.17487/RFC8412"/>
        </reference>
        <reference anchor="I-D.ietf-sacm-ecp" target="https://www.ietf.org/archive/id/draft-ietf-sacm-ecp-05.txt">
          <front>
            <title>Endpoint Posture Collection Profile</title>
            <author fullname="Danny Haynes">
              <organization>The MITRE Corporation</organization>
            </author>
            <author fullname="Jessica Fitzgerald-McKay">
              <organization>Department of Defense</organization>
            </author>
            <author fullname="Lisa Lorenzin">
              <organization>Pulse Secure</organization>
            </author>
            <date day="21" month="June" year="2019"/>
            <abstract>
              <t>   This document specifies the Endpoint Posture Collection Profile,
   which describes the best practices for the application of IETF, TNC,
   and ISO/IEC data models, protocols, and interfaces to support the on-
   going collection and communication of endpoint posture to a
   centralized server where it can be stored and made available to other
   tools.  This document is an extension of the Trusted Computing
   Group's Endpoint Compliance Profile Version 1.0 specification [ECP].

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-sacm-ecp-05"/>
        </reference>
        <reference anchor="RFC8600" target="https://www.rfc-editor.org/info/rfc8600">
          <front>
            <title>Using Extensible Messaging and Presence Protocol (XMPP) for Security Information Exchange</title>
            <author fullname="N. Cam-Winget" initials="N." role="editor" surname="Cam-Winget">
              <organization/>
            </author>
            <author fullname="S. Appala" initials="S." surname="Appala">
              <organization/>
            </author>
            <author fullname="S. Pope" initials="S." surname="Pope">
              <organization/>
            </author>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre">
              <organization/>
            </author>
            <date month="June" year="2019"/>
            <abstract>
              <t>This document describes how to use the Extensible Messaging and Presence Protocol (XMPP) to collect and distribute security incident reports and other security-relevant information between network- connected devices, primarily for the purpose of communication among Computer Security Incident Response Teams and associated entities. To illustrate the principles involved, this document describes such a usage for the Incident Object Description Exchange Format (IODEF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8600"/>
          <seriesInfo name="DOI" value="10.17487/RFC8600"/>
        </reference>
        <reference anchor="RFC6120" target="https://www.rfc-editor.org/info/rfc6120">
          <front>
            <title>Extensible Messaging and Presence Protocol (XMPP): Core</title>
            <author fullname="P. Saint-Andre" initials="P." surname="Saint-Andre">
              <organization/>
            </author>
            <date month="March" year="2011"/>
            <abstract>
              <t>The Extensible Messaging and Presence Protocol (XMPP) is an application profile of the Extensible Markup Language (XML) that enables the near-real-time exchange of structured yet extensible data between any two or more network entities.  This document defines XMPP's core protocol methods: setup and teardown of XML streams, channel encryption, authentication, error handling, and communication primitives for messaging, network availability ("presence"), and request-response interactions.  This document obsoletes RFC 3920.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6120"/>
          <seriesInfo name="DOI" value="10.17487/RFC6120"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="I-D.ietf-sacm-terminology" target="https://www.ietf.org/archive/id/draft-ietf-sacm-terminology-16.txt">
          <front>
            <title>Security Automation and Continuous Monitoring (SACM) Terminology</title>
            <author fullname="Henk Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <author fullname="Jarrett Lu">
              <organization>Oracle Corporation</organization>
            </author>
            <author fullname="John Strassner">
              <organization>Huawei Technologies</organization>
            </author>
            <author fullname="Nancy Cam-Winget">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Adam Montville">
              <organization>Center for Internet Security</organization>
            </author>
            <date day="14" month="December" year="2018"/>
            <abstract>
              <t>   This memo documents terminology used in the documents produced by
   SACM (Security Automation and Continuous Monitoring).

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-sacm-terminology-16"/>
        </reference>
        <reference anchor="RFC8322" target="https://www.rfc-editor.org/info/rfc8322">
          <front>
            <title>Resource-Oriented Lightweight Information Exchange (ROLIE)</title>
            <author fullname="J. Field" initials="J." surname="Field">
              <organization/>
            </author>
            <author fullname="S. Banghart" initials="S." surname="Banghart">
              <organization/>
            </author>
            <author fullname="D. Waltermire" initials="D." surname="Waltermire">
              <organization/>
            </author>
            <date month="February" year="2018"/>
            <abstract>
              <t>This document defines a resource-oriented approach for security automation information publication, discovery, and sharing.  Using this approach, producers may publish, share, and exchange representations of software descriptors, security incidents, attack indicators, software vulnerabilities, configuration checklists, and other security automation information as web-addressable resources. Furthermore, consumers and other stakeholders may access and search this security information as needed, establishing a rapid and on-demand information exchange network for restricted internal use or public access repositories.  This specification extends the Atom Publishing Protocol and Atom Syndication Format to transport and share security automation resource representations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8322"/>
          <seriesInfo name="DOI" value="10.17487/RFC8322"/>
        </reference>
        <reference anchor="draft-birkholz-sacm-yang-content" target="https://tools.ietf.org/html/draft-birkholz-sacm-yang-content-01">
          <front>
            <title>YANG subscribed notifications via SACM Statements</title>
            <author initials="H." surname="Birkholz" fullname="Henk Birkholz">
              <organization/>
            </author>
            <author initials="N." surname="Cam-Winget" fullname="Nancy Cam-Winget">
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="RFC7632" target="https://www.rfc-editor.org/info/rfc7632">
          <front>
            <title>Endpoint Security Posture Assessment: Enterprise Use Cases</title>
            <author fullname="D. Waltermire" initials="D." surname="Waltermire">
              <organization/>
            </author>
            <author fullname="D. Harrington" initials="D." surname="Harrington">
              <organization/>
            </author>
            <date month="September" year="2015"/>
            <abstract>
              <t>This memo documents a sampling of use cases for securely aggregating configuration and operational data and evaluating that data to determine an organization's security posture.  From these operational use cases, we can derive common functional capabilities and requirements to guide development of vendor-neutral, interoperable standards for aggregating and evaluating data relevant to security posture.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7632"/>
          <seriesInfo name="DOI" value="10.17487/RFC7632"/>
        </reference>
        <reference anchor="RFC8248" target="https://www.rfc-editor.org/info/rfc8248">
          <front>
            <title>Security Automation and Continuous Monitoring (SACM) Requirements</title>
            <author fullname="N. Cam-Winget" initials="N." surname="Cam-Winget">
              <organization/>
            </author>
            <author fullname="L. Lorenzin" initials="L." surname="Lorenzin">
              <organization/>
            </author>
            <date month="September" year="2017"/>
            <abstract>
              <t>This document defines the scope and set of requirements for the Security Automation and Continuous Monitoring (SACM) architecture, data model, and transfer protocols.  The requirements and scope are based on the agreed-upon use cases described in RFC 7632.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8248"/>
          <seriesInfo name="DOI" value="10.17487/RFC8248"/>
        </reference>
        <reference anchor="RFC5023" target="https://www.rfc-editor.org/info/rfc5023">
          <front>
            <title>The Atom Publishing Protocol</title>
            <author fullname="J. Gregorio" initials="J." role="editor" surname="Gregorio">
              <organization/>
            </author>
            <author fullname="B. de hOra" initials="B." role="editor" surname="de hOra">
              <organization/>
            </author>
            <date month="October" year="2007"/>
            <abstract>
              <t>The Atom Publishing Protocol (AtomPub) is an application-level protocol for publishing and editing Web resources.  The protocol is based on HTTP transfer of Atom-formatted representations.  The Atom format is documented in the Atom Syndication Format.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5023"/>
          <seriesInfo name="DOI" value="10.17487/RFC5023"/>
        </reference>
        <reference anchor="RFC3444" target="https://www.rfc-editor.org/info/rfc3444">
          <front>
            <title>On the Difference between Information Models and Data Models</title>
            <author fullname="A. Pras" initials="A." surname="Pras">
              <organization/>
            </author>
            <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder">
              <organization/>
            </author>
            <date month="January" year="2003"/>
            <abstract>
              <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management.  This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3444"/>
          <seriesInfo name="DOI" value="10.17487/RFC3444"/>
        </reference>
        <reference anchor="RFC4949" target="https://www.rfc-editor.org/info/rfc4949">
          <front>
            <title>Internet Security Glossary, Version 2</title>
            <author fullname="R. Shirey" initials="R." surname="Shirey">
              <organization/>
            </author>
            <date month="August" year="2007"/>
            <abstract>
              <t>This Glossary provides definitions, abbreviations, and explanations of terminology for information system security. The 334 pages of entries offer recommendations to improve the comprehensibility of written material that is generated in the Internet Standards Process (RFC 2026). The recommendations follow the principles that such writing should (a) use the same term or definition whenever the same concept is mentioned; (b) use terms in their plainest, dictionary sense; (c) use terms that are already well-established in open publications; and (d) avoid terms that either favor a particular vendor or favor a particular technology or mechanism over other, competing techniques that already exist or could be developed.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="FYI" value="36"/>
          <seriesInfo name="RFC" value="4949"/>
          <seriesInfo name="DOI" value="10.17487/RFC4949"/>
        </reference>
        <reference anchor="RFC5209" target="https://www.rfc-editor.org/info/rfc5209">
          <front>
            <title>Network Endpoint Assessment (NEA): Overview and Requirements</title>
            <author fullname="P. Sangster" initials="P." surname="Sangster">
              <organization/>
            </author>
            <author fullname="H. Khosravi" initials="H." surname="Khosravi">
              <organization/>
            </author>
            <author fullname="M. Mani" initials="M." surname="Mani">
              <organization/>
            </author>
            <author fullname="K. Narayan" initials="K." surname="Narayan">
              <organization/>
            </author>
            <author fullname="J. Tardo" initials="J." surname="Tardo">
              <organization/>
            </author>
            <date month="June" year="2008"/>
            <abstract>
              <t>This document defines the problem statement, scope, and protocol requirements between the components of the NEA (Network Endpoint Assessment) reference model.  NEA provides owners of networks (e.g., an enterprise offering remote access) a mechanism to evaluate the posture of a system.  This may take place during the request for network access and/or subsequently at any time while connected to the network.  The learned posture information can then be applied to a variety of compliance-oriented decisions.  The posture information is frequently useful for detecting systems that are lacking or have out-of-date security protection mechanisms such as: anti-virus and host-based firewall software.  In order to provide context for the requirements, a reference model and terminology are introduced.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5209"/>
          <seriesInfo name="DOI" value="10.17487/RFC5209"/>
        </reference>
        <reference anchor="RFC6192" target="https://www.rfc-editor.org/info/rfc6192">
          <front>
            <title>Protecting the Router Control Plane</title>
            <author fullname="D. Dugal" initials="D." surname="Dugal">
              <organization/>
            </author>
            <author fullname="C. Pignataro" initials="C." surname="Pignataro">
              <organization/>
            </author>
            <author fullname="R. Dunn" initials="R." surname="Dunn">
              <organization/>
            </author>
            <date month="March" year="2011"/>
            <abstract>
              <t>This memo provides a method for protecting a router's control plane from undesired or malicious traffic.  In this approach, all legitimate router control plane traffic is identified.  Once legitimate traffic has been identified, a filter is deployed in the router's forwarding plane.  That filter prevents traffic not specifically identified as legitimate from reaching the router's control plane, or rate-limits such traffic to an acceptable level.</t>
              <t>Note that the filters described in this memo are applied only to traffic that is destined for the router, and not to all traffic that is passing through the router.  This document is not an Internet  Standards Track specification; it is published for informational  purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6192"/>
          <seriesInfo name="DOI" value="10.17487/RFC6192"/>
        </reference>
        <reference anchor="I-D.ietf-i2nsf-terminology" target="https://www.ietf.org/archive/id/draft-ietf-i2nsf-terminology-08.txt">
          <front>
            <title>Interface to Network Security Functions (I2NSF) Terminology</title>
            <author fullname="Susan Hares">
              <organization>Huawei</organization>
            </author>
            <author fullname="John Strassner">
              <organization>Huawei</organization>
            </author>
            <author fullname="Diego R. Lopez">
	 </author>
            <author fullname="Liang Xia">
              <organization>Huawei</organization>
            </author>
            <author fullname="Henk Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <date day="5" month="July" year="2019"/>
            <abstract>
              <t>   This document defines a set of terms that are used for the Interface
   to Network Security Functions (I2NSF) effort.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-i2nsf-terminology-08"/>
        </reference>
        <reference anchor="CISCONTROLS" target="https://www.cisecurity.org/controls">
          <front>
            <title>CIS Controls v7.1</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="MQTT" target="https://mqtt.org/mqtt-specification/">
          <front>
            <title>MQTT</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="NIST800126" target="https://csrc.nist.gov/publications/detail/sp/800-126/rev-3/final">
          <front>
            <title>SP 800-126 Rev. 3 - The Technical Specification for the Security Content Automation Protocol (SCAP) - SCAP Version 1.3</title>
            <author initials="D." surname="Waltermire" fullname="David Waltermire">
              <organization/>
            </author>
            <author initials="S." surname="Quinn" fullname="Stephen Quinn">
              <organization/>
            </author>
            <author initials="H." surname="Booth" fullname="Harold Booth">
              <organization/>
            </author>
            <author initials="K." surname="Scarfone" fullname="Karen Scarfone">
              <organization/>
            </author>
            <author initials="D." surname="Prisaca" fullname="Dragos Prisaca">
              <organization/>
            </author>
            <date year="2018" month="February"/>
          </front>
        </reference>
        <reference anchor="NISTIR7694" target="https://csrc.nist.gov/publications/detail/nistir/7694/final">
          <front>
            <title>NISTIR 7694 Specification for Asset Reporting Format 1.1</title>
            <author initials="A." surname="Halbardier" fullname="Adam Halbardier">
              <organization/>
            </author>
            <author initials="D." surname="Waltermire" fullname="David Waltermire">
              <organization/>
            </author>
            <author initials="M." surname="Johnson" fullname="Mark Johnson">
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="XMPPEXT" target="https://xmpp.org/extensions/">
          <front>
            <title>XMPP Extensions</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK99" target="https://www.github.com/sacmwg/vulnerability-scenario/ietf-hackathon">
          <front>
            <title>IETF 99 Hackathon - Vulnerability Scenario EPCP</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK100" target="https://www.github.com/sacmwg/vulnerability-scenario/ietf-hackathon">
          <front>
            <title>IETF 100 Hackathon - Vulnerability Scenario EPCP+XMPP</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK101" target="https://www.github.com/CISecurity/Integration">
          <front>
            <title>IETF 101 Hackathon - Configuration Assessment XMPP</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK102" target="https://www.github.com/CISecurity/YANG">
          <front>
            <title>IETF 102 Hackathon - YANG Collection on Traditional Endpoints</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK103" target="https://www.ietf.org/how/meetings/103/">
          <front>
            <title>IETF 103 Hackathon - N/A</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK104" target="https://github.com/CISecurity/SACM-Architecture">
          <front>
            <title>IETF 104 Hackathon - A simple XMPP client</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="HACK105" target="https://github.com/CISecurity/SACM-Architecture">
          <front>
            <title>IETF 105 Hackathon - A more robust XMPP client including collection extensions</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="security-domain-workflows" toc="default">
      <name>Security Domain Workflows</name>
      <t>This section describes three primary information security domains from which workflows may be derived: IT Asset Management, Vulnerability Management, and Configuration Management.</t>
      <section anchor="it-asset-management" toc="default">
        <name>IT Asset Management</name>
        <t>Information Technology asset management is easier said than done. The <xref target="CISCONTROLS" format="default"/> have two controls dealing with IT asset management. Control 1, Inventory and Control of Hardware Assets, states, "Actively manage (inventory, track, and correct) all hardware devices on the network so that only authorized devices are given access, and unauthorized and unmanaged devices are found and prevented from gaining access." Control 2, Inventory and Control of Software Assets, states, "Actively manage (inventory, track, and correct) all software on the network so that only authorized software is installed and can execute, and that unauthorized and unmanaged software is found and prevented from installation or execution."</t>
        <t>In spirit, this covers all of the processing entities on your network (as opposed to things like network cables, dongles, adapters, etc.), whether physical or virtual, on-premises or in the cloud.</t>
        <section anchor="components-capabilities-and-workflows" toc="default">
          <name>Components, Capabilities and Workflow(s)</name>
          <t>TBD</t>
          <section anchor="components" toc="default">
            <name>Components</name>
            <t>TBD</t>
          </section>
          <section anchor="capabilities-1" toc="default">
            <name>Capabilities</name>
            <t>An IT asset management capability needs to be able to:</t>
            <ul spacing="normal">
              <li>Identify and catalog new assets by executing Target Endpoint Discovery Tasks</li>
              <li>Provide information about its managed assets, including uniquely identifying information (for that enterprise)</li>
              <li>Handle software and/or hardware (including virtual assets)</li>
              <li>Represent cloud hybrid environments</li>
            </ul>
          </section>
          <section anchor="workflows" toc="default">
            <name>Workflow(s)</name>
            <t>TBD</t>
          </section>
        </section>
      </section>
      <section anchor="vulnerability-management" toc="default">
        <name>Vulnerability Management</name>
        <t>Vulnerability management is a relatively established process. To paraphrase the <xref target="CISCONTROLS" format="default"/>, continuous vulnerability management is the act of continuously acquiring, assessing, and taking subsequent action on new information in order to identify and remediate vulnerabilities, therefore minimizing the window of opportunity for attackers.</t>
        <t>A vulnerability assessment (i.e. vulnerability detection) is performed in two steps:</t>
        <ul spacing="normal">
          <li>Endpoint information collected by the endpoint management capabilities is examined by the vulnerability management capabilities through Evaluation Tasks.</li>
          <li>If the data possessed by the endpoint management capabilities is insufficient, a Collection Task is triggered and the necessary data is collected from the target endpoint.</li>
        </ul>
        <t>Vulnerability detection relies on the examination of different endpoint information depending on the nature of a specific vulnerability. Common endpoint information used to detect a vulnerability includes:</t>
        <ul spacing="normal">
          <li>A specific software version is installed on the endpoint</li>
          <li>File system attributes</li>
          <li>Specific state attributes</li>
        </ul>
        <t>In some cases, the endpoint information needed to determine an endpoint's vulnerability status will have been previously collected by the endpoint management capabilities and available in a Repository. However, in other cases, the necessary endpoint information will not be readily available in a Repository and a Collection Task will be triggered to perform collection from the target endpoint. Of course, some implementations of endpoint management capabilities may prefer to enable operators to perform this collection even when sufficient information can be provided by the endpoint management capabilities (e.g. there may be freshness requirements for information).</t>
        <section anchor="components-capabilities-and-workflows-1" toc="default">
          <name>Components, Capabilities and Workflow(s)</name>
          <t>TBD</t>
          <section anchor="components-1" toc="default">
            <name>Components</name>
            <t>TBD</t>
          </section>
          <section anchor="capabilities-2" toc="default">
            <name>Capabilities</name>
            <t>TBD</t>
          </section>
          <section anchor="workflows-1" toc="default">
            <name>Workflow(s)</name>
            <t>TBD</t>
          </section>
        </section>
      </section>
      <section anchor="configuration-management" toc="default">
        <name>Configuration Management</name>
        <t>Configuration management involves configuration assessment, which requires state assessment. The <xref target="CISCONTROLS" format="default"/> specify two high-level controls concerning configuration management (Control 5 for non-network devices and Control 11 for network devices). As an aside, these controls are listed separately because many enterprises have different organizations for managing network infrastructure and workload endpoints. Merging the two controls results in the following paraphrasing: Establish, implement, and actively manage (track, report on, correct) the security configuration of systems using a rigorous configuration management and change control process in order to prevent attackers from exploiting vulnerable services and settings.</t>
        <t>Typically, an enterprise will use configuration guidance from a reputable source, and from time to time they may tailor the guidance from that source prior to adopting it as part of their enterprise standard. The enterprise standard is then provided to the appropriate configuration assessment tools and they assess endpoints and/or appropriate endpoint information.</t>
        <t>A preferred flow follows:</t>
        <ul spacing="normal">
          <li>Reputable source publishes new or updated configuration guidance</li>
          <li>Enterprise configuration assessment capability retrieves configuration guidance from reputable source</li>
          <li>Optional: Configuration guidance is tailored for enterprise-specific needs</li>
          <li>Configuration assessment tool queries asset inventory repository to retrieve a list of affected endpoints</li>
          <li>Configuration assessment tool queries configuration state repository to evaluate compliance</li>
          <li>If information is stale or unavailable, configuration assessment tool triggers an ad hoc assessment</li>
        </ul>
        <t>The SACM architecture needs to support varying deployment models to accommodate the current state of the industry, but should strongly encourage event-driven approaches to monitoring configuration.</t>
        <section anchor="components-capabilities-and-workflows-2" toc="default">
          <name>Components, Capabilities and Workflow(s)</name>
          <t>This section provides more detail about the components and capabilities required when considering the aforementioned configuration management workflow.</t>
          <section anchor="components-2" toc="default">
            <name>Components</name>
            <t>The following is a minimal list of SACM Components required to implement the aforementioned configuration assessment workflow.</t>
            <ul spacing="normal">
              <li>Configuration Policy Feed: An external source of authoritative configuration recommendations.</li>
              <li>Configuration Policy Repository: An internal repository of enterprise standard configurations.</li>
              <li>Configuration Assessment Orchestrator: A component responsible for orchestrating assessments.</li>
              <li>Posture Attribute Collection Subsystem: A component responsible for collection of posture attributes from systems.</li>
              <li>Posture Attribute Repository: A component used for storing system posture attribute values.</li>
              <li>Configuration Assessment Evaluator: A component responsible for evaluating system posture attribute values against expected posture attribute values.</li>
              <li>Configuration Assessment Results Repository: A component used for storing evaluation results.</li>
            </ul>
          </section>
          <section anchor="capabilities-3" toc="default">
            <name>Capabilities</name>
            <t>Per <xref target="RFC8248" format="default"/>, solutions MUST support capability negotiation. Components implementing specific interfaces and operations (i.e. interactions) will need a method of describing their capabilities to other components participating in the ecosystem; for example, "As a component in the ecosystem, I can assess the configuration of Windows, MacOS, and AWS using OVAL".</t>
          </section>
          <section anchor="configuration-assessment-workflow" toc="default">
            <name>Configuration Assessment Workflow</name>
            <t>This section describes the components and interactions in a basic configuration assessment workflow. For simplicity, error conditions are recognized as being necessary and are not depicted. When one component messages another component, the message is expected to be handled appropriately unless there is an error condition, or other notification, messaged in return.</t>
            <figure anchor="fig-configassess">
              <name>Configuration Assessment Component Interactions</name>
              <artwork name="" type="" align="left" alt=""><![CDATA[
+-------------+  +----------------+  +------------------+  +------------+
| Policy Feed |  |  Orchestrator  |  |    Evaluation    |  | Evaluation |
+------+------+  +-------+--------+  | Sub-Architecture |  |   Results  |
       |                 |           +---^----------+---+  | Repository |
       |                 |               |          |      +------^-----+
       |                 |               |          |             |
     1.|               3.|             8.|        9.|          10.|
       |                 |               |          |             |
       |                 |               |          |             |
+------v-----------------v---------------+----------v-------------+-----+
|                           Integration Service                         |
+-----+----------------------------------+----------^---------+------^--+
      |                                  |          |         |      |
      |                                  |          |         |      |
    2.|                                4.|        5.|       6.|    7.|
      |                                  |          |         |      |
      |                                  |          |         |      |
+-----v------+                       +---v----------+---+  +--v------+--+
|   Policy   |                       |    Collection    |  |  Posture   |
| Repository |                       | Sub-Architecture |  | Attribute  |
+------------+                       +------------------+  | Repository |
                                                           +------------+
]]></artwork>
            </figure>
            <t><xref target="fig-configassess" format="default"/> depicts configuration assessment components and their interactions, which are further described below.</t>
            <ol spacing="normal" type="1"><li>A policy feed provides a configuration assessment policy payload to the Integration Service.</li>
              <li>The Policy Repository, a consumer of Policy Feed information, receives and persists the Policy Feed's payload.</li>
              <li>Orchestration component(s), either manually invoked, scheduled, or event-based, publish a payload to begin the configuration assessment process.</li>
              <li>If necessary, Collection Sub-Architecture components may be invoked to collect neeeded posture attribute information.</li>
              <li>If necessary, the Collection Sub-Architecture will provide collected posture attributes to the Integration Service for persistence to the Posture Attribute Repository.</li>
              <li>The Posture Attribute Repository will consume a payload querying for relevant posture attribute information.</li>
              <li>The Posture Attribute Repository will provide the requested information to the Integration Service, allowing further orchestration payloads requesting the Evaluation Sub-Architecture perform evaluation tasks.</li>
              <li>The Evaluation Sub-Architecture consumes the evaluation payload and performs component-specific state comparison operations to produce evaluation results.</li>
              <li>A payload containing evaluation results are provided by the Evaluation Sub-Architecture to the Integration Service</li>
              <li>Evaluation results are consumed by/persisted to the Evaluation Results Repository</li>
            </ol>
            <t>In the above flow, the payload information is expected to convey the context required by the receiving component for the action being taken under different circumstances. For example, a directed message sent from an Orchestrator to a Collection sub-architecture might be telling that Collector to watch a specific posture attribute and report only specific detected changes to the Posture Attribute Repository, or it might be telling the Collector to gather that posture attribute immediately. Such details are expected to be handled as part of that payload, not as part of the architecture described herein.</t>
          </section>
        </section>
      </section>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAFwo1mAAA+V9aXPjRpbgd/4KhPzB0oikXOWjbfUcq1KVbW27ji6p7Ono
aK8hEiQxAgE2AErFdnmj/8ZGzPy5/iX7zsyXCYBSue2Z2ViFwyURYB4vX777
mEwmozZvi+w0ucxm2zpvd8nZtq3WaZtXZZKW8+S8Ktu83FbbJnlelXlb1Xm5
TA4vz86fHyVn9WyVt9ms3dbZKL2+rrNbGAkehU/m1axM1zDJvE4X7STP2sWk
SWfrSQpvTR49HjUtTPW/0qIq4aW23majfFPTb037+KOPvvjo8Sits9SvcnS3
lIm+q+obXNFXdbXdjG7uTpOLss3qMmsnT3G20SxtT5OmnY9m1RxePE22zSRt
Znk+2uSnoyRpq9lpsssa+LWp6rbOFo37e7f2f47Sbbuq6tPRJMlL+OxsigBp
b/OiyOBd3uDZPF0n34VPqhomPc9wVcmiqt36/GaSRGF3fnEJf2XrNC9OkxQG
m651pGkzr/7HEp9MZ9UaVwdrzWBvHz9KrrLZKvk2hbd2ydM6v8VpYbuwoA8f
Pf7os0cf4t8w02nyLG1agFWWldfbZgUf19kSjvo0efEH+s62bGt47c3lme7z
CexmW+7S0m3yCSzHf/azt3cNw0zXNMwUUeI/dXOjsqoRy28zxIHXX54/fvTo
C/n1808ePcZf14CUBSNqW1XFZJZuUlg0TDUp0nK5TZeZvrYWfG6arGnWAIzJ
GlZYRI9nFWxihler93F2mxbbdPhxOd9UOQydtm2dX2/bbDJP25TfneBWG9we
fOli8nTqL1k225wm8D/Z3GcffXSavF1vNss6n/NnnwEcT5N/ff7q1WiUlwsL
mXAoONl1XlZFtQQw4ietDPrx48enSV0VOR4O3/LrvL5ZVcVf+JtwyEvYP+BG
2eK4cO/SeoknvGrbTXN6coIgbmiuKaDUyapdFyf3jTT56BGPxTTsD2cvvkqa
7XUzA/hk86Ss2nyRzwikTXKbp0wyLtu0zfCQGvqy3mv8XXD+6ykgOU9KHyvm
f52VN+ET+cKLaXKeriffAYHJ2uArL9JytgsfAsB+89nHjxXbHn/yufz66UeP
P5ZfP/7kk0/k10+++EQx89PHH+mvnz364nFwQPnjslmEJ0Qf4Yxw785fvrh6
/fKby37g393dTWd5IzeWDgBBDCfaWADDOMQQ8PPk9jdThP7z319d9Q+6/nPb
0lD4y6TZZDN3Gid2VBwB/n5xcXn1+UcfPXr8Wf9ws6aeTUtA8umyuj3ZbK8L
PdqTedYC6ThpNicwADCUz06A3Ew+PlnkZVrYqS5fJfJG8jq7nSYfwwFerTKi
MSUMVySXdplE0Fp47rjjOSOe5ZKv6gp4SFUAUzw/e3UEI+K/ybdZ3eDjR9OP
h9Ds6TT5Li3oyOoswJqn6W0+jx/Kty6nye+3eVkGX7hss80qK80Tg8pV1a5C
PE7hBOfmgbz8u2lyOUvrBfDh4P3fAfctw0d+C6/qHC5mGq6/TpdVEzwCWgUP
vsyu621a75LHHz36XA794vVvPvvik5976Pgwr09wiO558/AJPuw52TMg1y0g
wgb4PsoQXxLlgxN7NHRiwPS/TovrtJ7nWR3smDh/9OzvOubn0+R/VquyqcKD
fp7WN+YBEu1n/zpwAZHK0wXM3gLSNgQ1Cx38cvLMPYNHX5+d/+6LL4ZpxDJv
V9tr5NEnSIzvlie326LMauWLzSwr0zqvTogkrdLZTQowLO2kF8+uvky++AJg
JQ9hw9/aQQDPeJDk2avzV7KoR8C1fvVVwSQPXdYxcUtd26MHrQ2op5CRExSS
ljVhYs8qHgWrAJKzyJdbfptwlkWMJFjC4/ddAjLLnrkfB3MTRz13YksC/13V
6TzHP4BYPhORpHHL+Hh4GZ61V3cna5Du4Mo1J/CVk55lfBws48XJmZthgFD0
bxL5/STQRbpTfRJMdZY0+XpTZHw5ZiDRlK2b+9Nfeu5Po7nXVZ2BHAXia2sX
ABRhVmxRfUm8DJn4Wz0aTSYTkLJBAExn7Wh0tcqbBLSuLeHJPAO6mDWgziWp
WU4C6AzkFMZMYdRqk9Uk9f08TTCbVc2uAbFqmiQ0+x3oZQn8u6mzOdJcEMe2
GxjJyZfw+7LI0hIeLOpqzaLZmyYDWamhxc6BMv95C1SRRLXk8McfRXD66Sd6
Sn+j9AR/1xmKF7j8Ync0psdGEkrSBuj9Fj7MS/gayZHtTz9NR6PvXr7+3QWg
+FevX755dUqiQFNt61kmnB/BiDIo7gS0kxI4Di4Yhvkqb7+GM0+Sy+1ymTW4
v9kKRFNYerOqtsBdrzOURdd5i89gBZstqE01bAnehv21fegj5IvolNUr4NhO
YK6LEk54O2N5Fngy3sd2BUNtQBfBOe4y0KkYG9b5fA765+gD1Mjqas5fQ9zI
YCn1pgJQV4toj20l2BIhC9z1dLOpqxRUMYSMSNJPKwTKOLmGI5vzYmDTmxzQ
B8fewhQzOk0D/fAQa3vE4Vt8tFNGJzf7EiZsaJ51BZcknd+mcCqw++sdgHuj
rDxNboFWZ4DFsA5zZxhJG0aRHGW5Oe2a7kIW3QSH1AQo1E8YVed5s0nhHUUW
gDscIUC8zNcAKR4AoDSzlBuO5YMPQpQG/YRZAJ7JDai3cGlgOQfP31xeHYz5
3+TFS/r99bPfv7l4/ewp/n759dk337hf+I0R/PHyzTfyHH/z3zx/+fz5sxdP
+cvwaRJ99PzsDwcEkdHBy1dXFy9fnH1zgMfQBmQE8Q0gBWiNcKvhYgtizzNV
uOA7cHAj1KXHyZPzV8mjT/gs8RO6cB+AqF2v+Xo/RUwjVgIEzPO109EpP8o8
LqDigxgDwMGjB1wAqDf2bOHMAaWJrjGComiHz1Vpz+GYBENVk04Os+lyOk5W
8MUJ4/ACDucuLYojQCbANrpc+BXCv02d46GDmp7P8YCRJuwSUdszek/XkBKe
trA8YCY56ID4CGTX3fRgxJulfV40uFLGMaBhhE1jhmkIAFQCf/ppzAvCWeEY
cOyKLt4iAUE+g13juA2A+RTEuhTZGMGIpmuEiQDzcWx7nFxWi/YOTnacfLWF
TZU4PYDvX6effvRFwuI2YeYsq0WXzpppclbyVEgyAImTMsPjgAtXwH27w3XD
bQQKAtw+LfO/KP6zvP08LeG+6kkj6l9cuROF792tcoA8b4WQDp7d5sjnsvkY
mAgqEvCLIceITPMMEJL4DE6kFhIHY7SUJFlB0/YCmDFMAIwEB3hfPiNQXjDW
kM3hLSEVEj8YRWfhZR7wVw4CFidTMsIDRPD6A77gfYK75C05iEPZZJPmNYA3
OfMjz+BLetYljYTzb6//DZAeT/rcGaVOca1niveLLEVEbHhDuL70FtQlonJE
xISEn+vAtNXLDN4rmio58MauA+GabE2gWywSISpHNOcmBwTAWRtBJ5l1RsSu
CSCSXldbWCGwGMAzkndYnHK3kpAAgE0cK5R42rS5YfQ+04+RzDKI5mj/IqgB
pGd1Bdi03hZtjsJc5jEer7w+T+O5+ZgYMg7kJNIArc+E6MM/fAyMFXYZ8J31
tqRrwjwBbjeqnUAx/gLL2oipYMzUBdDw1dnk6sV58kfEwN988fhPdPgJyEUN
wwjnwqnSYHt+0lVK7KtNbzKlbqDaZ/wVujhzoAvwlz0CgC8/QvDSXomiL1Jk
ZTAakjogYG0WUk+SqiodVYHE9pCc58Y5Io4L5w+nQKhq2aFgTlmVk9uqgI8K
EpcEewMqbe4Zbcs90LvKfDybC3valuliAbMLGUrI1Iui13VVtZPZblZkhEOh
YpUTOuw2BDtQAVQIWApddLM1AHcmHIscCewh/zN3ci6sAsECtCmUABCAJ4j1
/AV3Md2l8ZccZNg53JxZiwQVDqyoZjcww20OJ0QEGkUZsWcADtTz6Ps8uFyM
dIakFRaGFtBZVaOwDNcLD79nasDA59XcG0roNO0uHEWiGwrDgqC6BZa5w3Wl
ojPM6AOccO3IfXK4KUDePwqwDdcpcpt9VW9K46/K5Yvnr3CK755fTPH+k7Td
v7xqBipMMt+ShnINvDGpt+WkzdcZ8wrgUZOE/kSEKh1GoYhNZ4z3GMbaoDqV
z0juaWarbL4tkLgMzi0zwiLd6YFgndVCKZAhK0zTxGPjww4mASQg/JJ7HpOu
vG2yYsH3rAGRTYkz3dPXSBQI2CJxNx0GgJsUEYGffLktRdVwmmJOb8HWMrwa
lqYQT2EpJBwWb74KHLSiPbJdWu5ow1si/IzvASoDuEu+2cg9Qe5oUc9EmQot
cM4ucWEWxgZeO9PcyZ10T0GnxUt1cIl4JndMaAaeH3LOpqlmOcFeiDqS5Xy2
LdI6AbjcJEW6Q/FrPq9JiMkWyNf+DbaM+8DDkpUS+m0qJJk5D18mF6/cFyuk
M3K8ujfRp+VkmlOYa9NWG1gx/HXDvzVZfZvV8MsM9L9kswLAM5lAgFowouS4
Sm+zcF6G31WVLLY1neAMNpYvdrSOfsiN7bUh2gkzbVa7hozoMPNtXrdAFQZm
9/CQFSTJi6rl18buIeBXnbLGizK1ng1J7UkDRwFXEvZZg0BBu1fhHcknS5GL
nMX3YOG1yDhw+A2yR8c4vASCxxwrQMQzXukW/bs83l26a0Qiz1tL3a2U3kep
ESN6yfC3AsFwJjccolCdFbtA7IrG5edl73O2GwgvX/irHgioPQsmMOCVomse
GJSAaywAnIjbBII70KuB8RCuJ0i7llWdMxd3mzLaCJwZGiXUC+V0qS6HZz8r
/HkYy45HtG8PMs9k1fqPty57S5dJLE8OjZ3y5m2sh+5VPwVB4Ik1eRiKwgyF
tJfuHXHyBT2HcRxlTIzK4nSWHPTqzJJ44DvIkbIafR4zJ5EwyQQSDYd9jbQA
pXzWAjvDN7gGAQNegDZv4dPguaG319tyXhCtBsCL1iH3ryvTp14k8TdYOL0O
WKOahigh4ojT052ofvbtqyPDMpLzYM/NqaJfg17ccVfCcpdQToNMUgP341Co
1FH/zeyy2MZe57Exy3q4wy6BxuVVLaoGaPcTBDfQp6JaTkj2I9r86umbJFvn
TSOGdc/OROmkC4YfTBZFdQdfOryi9RwlQ8AhTI9BbJnhM1FHEfVeMbbfx5O7
IiysHYG/bQKShp8qmOlFI8A3KDiARN2y8a6KbQMfNvbWq5nklDkfGnIR8ttG
+K/oGs2s4stEcCKxRDau6nqEGIQxAd76C0TqihKEnoMP1Zs+1US4koDgxMEl
L29hSVW9i3EVEJ9cIMDId2W6ljsJlCFfklGDOWMG9MaJAH7lyErN9bXqtKNi
bm3mtM1Fv1cY83sTC58KM+E+PDocytRHLOCKCSLW51DFTTrL8adHJjGYqiDL
D2LNTqgqX7JMThLG+RLmztjQBcS2Z9B1vly1zkBJy7gVv7ysSqy9KHKzGQ7N
dhhs5O3Z7NcghPyuRy7gvwhLwz0oMURiXxs66cl5HxwzwaReZBmb5TXOdKe4
dtS5+z2IKtaMzQpEqyw5cHai6JQOkhXArkD4ITJeV7d4RMDeG9YT4lUE9z+Q
FkavxAyhxiK1SuROByGThcN8Eu1DE0wgrTT0vgsoMcKLsU4E17yymkm4OPT+
N+jMUvtZ7T7gBUocTEFaXNqqat+E085Y5xqzdYDF/J6VsFnGKw83eTlnwxsq
H/bN3DJqsl62dVo2qCcbuQM/J6V6DKy6DTULFHHpBVzMOmtT+oMInJozYV/8
1CjeOBpdUbmDBh5IdHRXRA4dBJCBV2z2K4kYucMxXyfh5zCfZjFyo+m9QKeT
f3lshTAxIQWPs3Y2PYLz6/FWOhHBuAlYHXBMBgRctOGpgYS/iqi3AmViuaLd
bdlB5oTaQHiuYL/kA0UhLy12f+Ez50VbkR0+VGEIDnBB+CpBReKFo/XNs1a8
GCARBNAB/gAfqVDRJPTlGm5tIxbbrrc2EpjhuAApUJ2LDa0q6qENH8kjxtui
VN1kQBnkr4PIByEOuWUFMj1eEJD/s1s2tc1wWeR9Y/RH4OOfGWIMqraH5lAb
F4V3JFJ6n7iFK0vdwoRE29UABlw8e85H/uQp/PXy7LX5CyeRi+3NjCxxDtoX
Rak46hoaQ7tix6D4TYWaoYgZDYODX8bjJlk4nXmjmsMmMiowhTKfIv22F1Xu
OX5sYOtJANCVXVGl8zGr32lwRWFdwkxFAStorU5KGdRCn7JsEt1YZlHWdGHN
01aeISG/7L6mQpkhPcjc2cCpJr+nX5+/OmIBzanqDF49ETJ4E3lQBmbBzNaa
MgKtrF4omRwmTiV2lMByv4j3jsrJiAXxJLBrXTSB0KsrBA1KPHOC+GjwrNYo
p7FkSefFkcqkVKBdkpU3WMuuOyBeiUCbBY4IjDMVbyyuIdZZRfkMrxcR+YEr
590OxDLn5OeHrRR4hrlhgh1GzbAd4N/oT2xWmRO4jX8A30V8ZgG85GNEtHW+
jiNx/PQsucnXObJTkhysxYn2LYcF23nmIqxBl3r57ChyBJ6z1fcc6CloVKlQ
dBZ7kH4RqoTEZxTGiBkvdpLQckt79MGxYfRiJcYnJP8YroIQuFtl7MyNCVWD
29HItoLs+lVN2id6gFahpCEnxBsjuTdYKIvEG2YX/mu4I8yoQIVTyOad/Mmw
XFdzElxiJRsdc95yoO6PoiLzJLoKxDSL3Ew1fbjJtTjuHa/seuycvYniPeDS
ApgQln5doikLNTDg1lcoIuafMfjgLAhpeXmLFCe7o/iLZQbgQWldI02QXpKm
D4eR5Yios2oJGmvWiH2Wj666pq12bOHZW9TJhRkutqSYMO0aCkdZpzcwdka3
HnhStt6ItZ1imzqhM0GQzFkrCiqQGy9qlrvQQJdS1FdL7jwiO57Si+dbd2Uc
mcjws13g2sRYG2Ad5BHw+0aja4b6SI7GjGUOem+C4B8H6qk1sNCf7KxoYicl
bnHP91SLiL8HVO2pk9hQT3DG3KHYHpRqgV/gTSdX0SsKlsKRJerNr49C+uqs
yDDoKLo3/9v9SLxucjyJfo71ybvY9fLOP0mSQ13BEX4Qj3bcGU1/3nU/iJZw
213RO37VBKSCSEl8eGCM4V3tWUe0h9vOd++BiJ5CL0TMSswh/HiafABcG+N6
0FSKYZf/dPCE/gipwKU6GA5+GlGMloJ/dOZ+dTEGLtSJOa2GXDpjkleRSRZo
kdaSE5198qCaO6d7LyIRRRGsx+vr0I+i/5hIpcU4+MphmhyI7HdwxDGXtGrR
pI262VagUY5tigza03fBPbMz+qtAdEHUhBm6qeqSzQJo94V1KmdzdgRZEAoL
vCIJN6AlMW2g1bA1SMEMd3FM+pGz6ojM4KxahnjmNhqSaJZGRdDIDUfc6X7g
NPXXX+o02Q+6/zzZL2pO1MGUdu6WBNM2tAx/OnUHWMkhWlkkRIL2eDQecs5m
aHaMUqDuMEUk9eB2BpXUnReJEhj0RvN5WCaGEuoU8h0JbgISShG+cPrrjmyS
10EsSbj37qk7GAgKdw+f12f2a9cwHkITRokeYkciQB8R1HNBnL6uqxtY7jXo
81lWDjGK3+J3iPE34hxCOcBnnfivoblK0VtAOVahsw1DkT3wFTQOtugz06+j
Ohx63xO2QRtrgOhHVuuMPfbI8ZtAlXK2EphvizZV1FQ0NjIgp3AHsmKsWwCu
fa2bJ0btIj9oesYMif9AuxbzZzypJHmWkk3MqnMF6gPlbYYa26xAi+Eix7gq
Qd5YFCBLhb7n41kcbbLiRoE+FgNnDPmwWFiVBevx4Xj0IluXWhSTSKbxJGKF
OaRwVGp17ZlZwsVVZoZJWd3yBs5Z7OVhJ0wXsV/x8CfPMRpzyUitUx6i0om6
pSg0onkQyTlY8xcO8MLrH0nAU8giVnJcN9kc8vK2Km5Zv0C6xmTKHpfeE/QD
x5bXEBzPz/5AgVuNi57CI6YrkAHRRF/nOktJOwrN9sww4avwJ0I0mzPX4tgh
Z0cgURmzXFF0ZoNVw2Z7HVYNf//6/BtKtGo26LQUy5mijhMkf/hHgdHJP/+A
IPvhH/M/46+Yx/6XFDeH1Gkyg2+jSrHpWRAmPcJqzFbNDh1hdfZIonZoVcG1
UrIi5hHATE9QZIWDXVXzRmN7TJhMaLME1QLtgNEBN33U2mdUhIQb9EO8uKqU
iObZQznHoRjQcF7NjhML6pR8Ote7lsw9lbdme71VoJ07o4TszqKIMdLwhSI2
q2c6uDYX0VlTZKYjDHbFTLk05Cd4IpEM8j3HRHVe46P0MZJv2+CKJufBIKPv
ou849WQcT2fRgyIy6biccyAw0GvIsqIR0ynMjMAsnjC4E9VDseUieODOor2+
sfQyWkksRdEGPwhxfxTdhP6RhPhy4D5wWXiD0KveroP9oo3Z0cK/8L217C+w
3/dxcxU5L8SHF66DUdbdNXTlAxaQeFSk11mBWnmKYYCKWkZociygd17ATIxV
cmkBN2V1Vyp/2SjDu3Kz68QBqSNjGB+ocyHwAjoUZw98MU7LLxuTlDQYHZ6I
goC+JBcnSOKgIrIwR9ApmsyuoLFWrMzZsGBCvLnEGSnyi7DShZbTtLOW3VmR
HPPdyrITOOptw4k97QMwahxSTKIWJbNrSY7Ra0K2adgqmjXSNZaIiA0RDCVn
oaPImzpbpkIw43SqQGzq+qg9ds2TH06seH7iZdaT6jYtfkjuSDDISw4s5oM4
TI8MlpJNji7MLG3aYLjkUGTLEyfGHOn5Hl4fGTWDI8jJiU2DknmF+SlD/MCv
7CDhjbGcejg7CpFALbzuhvgRrWuajxKfv/z27JuIDjPkhZgIuXTkJPo7RvSs
BORqQNdt5fLkHJ7O8QOxa0AIbsQOJZB2rAhXOgcaM5WbDNErXZIBrSsrZLXG
azBXtpcPZyvydd46Uq5zE60dK0GvOYA0L9GF1MhWJN1Tbo75rrk094DHLEUM
ue5JOU+CCg1keHYJprwy/N6m2C5BNuVsKQ3cjvOs+CnfdbuAKSesc7yo3grK
FGzzosvgBrYx5n2QrMRCeZ1x+gcArE0OWAprDpJDK6eNQUpjDJzxn7gjEdyO
9LAdIqtXQHx3yjIdRIxMZxKR5G3aI9U0SjGfzxtlxSJhQDWKBONIPctQBWId
zeZYijY9ExIql9VEnMyUpVwgebtFt1/DJoKQ7Y+7nholNw2/DJ8D5Ss5Bp58
WbSxDvKN3SoCDoNiSeHiWziq2h9jaDbACGEetUM2y+RljQy01SB/t1xR/8k3
oXcJldycglC7wVDGMiAc149MJho6wtItNRPOFBubArtax6JPAW2GqMlUbtB5
OB5nTMGsHfrZK1gTmd8pCbWpiYao29wwFfC8wYvR/U2Z05G9ltTD5AWSs+Tw
zesXPoaatO7rLE64y8pVSj4xijE8e4GOuWvKh6E/zsVjy0ry0TR5wzR/n5jS
Q9PGVlrAZSn/vu6G5Q8KfEZHVwDXzdgCi3FRHNCstNOntHe9kipl9UkV6soQ
JzWVEEAflOSFUKkSsZPVGclE5u0Fh34RufAI8xUp1Ok9xPB9gUY6thhnHsbX
8ObO2RjJNHa5RYuVIzaG/YhtTXms6jhA5lCfCCPAA+OSX5+3BQkx7TnVUy/y
cD4PJduQ3vLEPQjG5yyOXTkD/aBEQn6NLtBFui3acTBE+DVJtEVTxw2603Oi
xGYcSXoKPhHJxa1kdGaWa4YfS5YRjBEZZDqC2zjUkO4ofC4IpSBffYQHAI7v
VhaFyBL/IAoD03UFRKozwANxzkNG58Suy51qB30ilUpEggG76PxJk6R4tY5R
Pjkgn2PTHoTSG+6LQOdiRY3ZnFyvZGMOhIy0/xywMByXazD22G/ycvuWpdOK
c233W6KpEIQ3zM46tnJyGRvxfOyDpNSiQSMORYfqxGGpBbgsBRpAY3gzCj4V
pCY7oJGEe7Fdyj9IIQSuNNdWE12LOn/pXqhlL1VXUy2R97zrcaCHK2Wzxl8b
e7PfRuOiRfskFKbpOm0c92ZB72KjRMLuZRaUSNQEmr3L49MboJOJjQSEzR0w
vQOOFOyBKuHiWKIIncgq2+aEvyYLojJ1eDrDD5JLT1tG5vexlhI5cYPQUoLJ
Qx2eZ6QvMY4qQDm9FCFzl+beuODdWyaOp5JFc5gZQoXSKLct30lxm8mKMEo6
w9w4NNEjsVZnVk50At5bVcWco00NcQ7hx/dXSDGsvt6xVnr+/OkTVkk6Ml4Q
SGv4lxdRE19scSqAPjNLGFHczsCSxPIdIoq7CIwFKpwZmTQ19wMNLORNRchL
yijCniKgyEoDIsQ6m5NQp+BUKsrnHJFQYRAtXxleiiQiY4JjYsOg8Su3LBWi
4ISHZyNaHBLoxE04c94Y2ReQGUSKxbbQ8w8x0Ds8kIWSo9HEKBdVuZzU25LN
tWlz40P/xBisVHZMwb+garIHnD+is8dsEXuaTDb6cBdRCEbBeVNMyqWsW1jH
dTq7obhaTX+0MgCflTdCY1Ue1BSIzfvcWlGIg3JPxqYb1FeK7LtpUm7X15yl
zwErqBNR8jgZ5Z0VSk1Wzs/Mmz9Zusodit8d4GFUOqDh2ABKRF7R4DElGmuu
pmuOZ1Y/k4AdPVhhiEsn+GLPz/EoeZfEP1wGpO58TgEefaN/Pzx630/vKMe4
kN6l0xqtKnjYHMEn7ygAxScJHE7g1hxFo38/MPr3dnSzsp7fun/1Bbj8/KHg
g6f+iN+gTSkK1HmPobqBNyE8bnt+C/861qFw9DOHcPxRjC2DsUn084884j/f
u6phDNJHx/s3uBcq/Y94g77CpG7wZw11/wY78V12U/5n+ALYWn8gzwbl69wY
A/ezb9L+q9mzhHjlA5eaN2LCeHsW+eA5uxDoCR9DmZ1cLxJB9kL/HqD6GER2
RjXg7krOnLCjcIWhzGc9yQhBlCZZBhouMUOR4hzCFgd2GJnce0fYyL10WWMi
SqsCED1Appa93biKCuv0bS5lD4p8WXrXZ1CmLaj3ZaJQ1WCEflAjcvbNS3YV
5T0cVoN5J5QbFKoeR6onvUU9h8s4veX6G2xwCIP58FSaEw+lqBRiw8X6mrA+
3IbKNzTJcJDob8Vjh2VI4liZ+FwGq3NFLzIDJgtvFPuI68FiEFyLC6Pyxhw8
eIvBfyIkOClA9HhTgZGAYONah4Jlx4PhtzQzhcM6BcxqeCBlxYiNFbhyCpYy
8kxs3ZbaXnUUNAQIhykMpBxLESbvBbnDcAEsY5k3sy1nS9NSqEaFqKRTDhai
PEJeh2JntEiToelEVcpPFyi6tSL7B6l2AYjKsnzK4cTjTsEzG/4YGf5iOzbO
cOCFiYOEFPxs76o2mK/atJwyJVIcZZVVrZjanRm6+yrcRbwrebMWk4BIXWQR
UAnMhrgFyUa+/HUgsv4WjS7i9sEkUQ75MoK2iX/yMqxaq1WsDiIT5S7cEgjU
utAJF1rLgrU0OQ84Z6+sXNmeCDMf8BAUUQsuzTgK2iNjKyZNceqNmo/RLtZJ
1CJixvX35ZqoyyXrD328sKlLqGEZp15r9in6G2Vp+gn/9tf/00hNp87d92Xx
mBVI6nmUbxaHMVgolPPAf2LBp+kUTRD7xVjjpAaJTfN6BhHYvpR0e6ISA+cW
z1AgePbVcbQlKrzB2Lh0w3K0GMsoLhaDC147ipUid49mUQU0wig1OgUEX48/
wlQJbHPHXEh1Skp1dv4Qtuuyr28Rhki43VINE93qmNOSeMpAyeX4UDTylGi1
shGMkvBRCs2JnR24hrE4u1z8tN2L4Sctp8fWXfppUMnHfNOr87RZXVfoEB07
xCQPpFXQNReQa5xFgS905c0hX5NflbE7vEhC7CJ1bjTgQ2yCmCnd7p2EuUmF
VzyhObDcJZMyLl7EVQS7FBKwwM6tdTlCJPAmCjESNd4MKIuQEiL7nJiBI5HR
F82YPjbKDS4nZN2Ff/vrvws9/ttf/6PH6VrFrlEV2aIwHsRa9fSaQqxDsfom
/GMDdD5MocMdmCLn30inleQQjfFOGtRsgl7fLJntXTaAOALeYy9C/XgrXfvS
dyia0NeUg3KGKl8sceLchB5ioWJsfKWT4qW7D8Q/SwjGYwQYhLJ15f3EhsPC
VB4SfjiGsZNL5nlaSMXQD6gMscgg6JvrCElkotaCY97D4vIgcXUHsU3kQCxl
vmpeaNpy5TNJhq/NAriKLtvJfUWdLtLb74z1ZMIPOas5TnV0xZk6U49NYZh9
BQeIbyMxBDiCLoOm2YQBxg4VU+VgIPozqA1SGsKZl+qadlGdPr0NdKLA4RNW
M14E5t6jsYkvCBnZnEl5sxf47oTYqdlWy0ysoRYFZBOGW7ac44D6Iq+oyboz
kLvex+gwD8lr76+RGDpvABYew8S9UD6A60eIBHnjnESZHL5++uT55dGY62vS
hxqnpIIz7AuOb7M6WaebSFb3GQeh795nQZtDFnllAXqlqyqtq2xW+cYLsbbw
MFtU3fgeR+K8R/oS9XU6pHJjHwwkrVwsjP5oY2JsGZqu/DRmIjLoBgu1kYNF
el1jXWNXmznW6hBh7yrOUmKkETFoX0KNd1ez/j+WiGt27uiqOSNb3zQRBFy/
PagPiHQXvSCd9YX5rC6QFFNYETmyNkxNGV78h40slmQuexfFbcpxer48qEqb
9oB9lEYVyCNWRo+OS/evnF1q++U0J2BJjjnDe2BOleld5jIoyHjnylmuIgdV
bOFsWAoEZhXHOnGLCtnLrNpuCslRSNH17HJg5FVeKOe7dHR/VJMOWPc42BN9
oGEWOmbJip2ya9VJrVkpvLJjqZESV3I5SOfpBitFHijF1RhgZ1/i1Um1xyFo
yuXXbzsVm4VEMppY1yEndJkPYsfthN1qDnYSGNcNA/FTkY7m6Ai5M+GXHmPi
A7TN/rApr7lnpk4HO/QliZWxUIVYH4e05wIp7PiehlfUudole0VFPWRuorpQ
fInOovoMvUuVhtXXKqIoCt6irGF8CbMdPuvdmN/SGOdQAjfKtqaVSFqugzlT
EC6O4Yj1HpyhVg7OgSfXOKAg5Ml2iQ7CPTZBiqEz1u0BMGqcvqqnlHONdViR
T1yQg1CQZJNvqBATskLTP4B5ejCKSIcs82lIG4U2k/A6ZnKqHmxfr2YcnpKx
N1J1KAqpo/psY22zoBeaaVLGrSfyJiQAG6yXUGsaXOTpQnu8MwpSBY/YJG/l
VOMJ3aKbjGWjHj+u1fZIcHCugmF27AQguNMTe08bG2zpOIhlG1rRp8ec3mj4
chC8FpjpfZsXowGQT4pQ1nuoepcdip3bFgMXlXx0y8ByYcZ5lhaaDUUvUuiG
EA0Q6VGlMqXiUQTcF8dhrTQqn3MVMNye8lnszFKAuMlfM6YTiVGgMIw7uoPK
ohusnY9hKBwzS5Eg6pAk2Hj35K8HG7RtV3gF5eJgcxUjYgfhV1rZQ9LNcFuK
/iY50we9MBCTjGpXIeLOQSckM/o6vYny1aKGHRh+FDnYetRF9HVxtV9D0B2E
SA0Nsd35MIIc0oHyHD1ehKiAWmBhNAV4zgOrpPEayjHv8XXSwZvn8XUFjipl
TqyON5aQH2XSTmDu2j8lYDgsO8oS1bWtfhOqcYy/tgyeaktpFC5o1COnMh1i
xNQRZ/JbI7+r4qdWXxeW99zZwijx2gkEHC3ELpBdJMbakjJos+Dvrqo6q0j1
8gGOUZQKUThfjcmG4HiDUa9G0VUm4l5ZJvZrcHoywGgIHwFa64laRJE5jQHG
pErZ0XyMFSe3sMS0M5xmoMfBOHnx7Or85YsvT14/u6RfxtRRFP5/+fU4+S4v
Xz8fw5Wf3WSkJ+ASiUP6Nka9rcLcKdmcVmsNHN6uMyfZnIbGmN47paic9e3D
kELGhXLeJ4yoJ0RgKHZiOLjIxxFEs7/nSuIABRt24C13mfnUg7Xnq8NRHMf3
wcjAIY5fSjgCpVsX1xvv7oFDZ/Y4hqYDh30wj6IzXsmVfNjrBi07P+eOkj6F
W/1+S/r+/XdwX8zNIDj3YO3+KKfO7D1IsSe8SR8f26pK8dD7YeCO4rb77Nj8
3vOYv9o9bX9q+x+PkoHTx8MO3u0+3rPh7+0Sex7/fbA63occD7zUexgQR5bJ
5K4evFmPrmEQK445pKxnicfyeDS4QTdJ8m54je8eNsIeSOgannFggP35PWgT
OUUxPgCSdJzDa8Cfw1fnl6hXUCUH2IOC9GjfFgTEfSu49afofoJjCkbYs3pa
2LzKtAYG6xd2gX1hazY/hQPXnmYuImmP4IvhaxQNP3ysJBvvwUxc8JEp7m21
ptADGoUO9AYKuIKgTm7zJbB8jUhTrxrBNeB2N0Jx31x2LTQr1euyk9DOYfwg
LdALUwOWNM1D2eu0NfHdezRiMROZ+ARTLw6Dpfaweo49Oe9fhDppXEYRKTcm
Rg5pc2P9c7Z4heRGdeyVrkjX/uoYq9TmpYWwkVrG99lMk8Nucl6cmoeelC+r
bd2p4GSQwZ9Ro1jkpFxJFPkgOZtPvq5mI/4nOFafOJ4axym9MYziY3PiVAfb
VuzDYsCdRLb5ZNWZmCyzZj53p1JbjB1DRkDou8l2bje+r/PJpfY4G/V9OLxT
Mh2Uy4oMfICdeTXPZ/de7c6+moGZunRiYE8JtdGUEqpzjFcJc47cnl9yuxY2
YYwGyoRFi6jz5ZLCVEU5rvwYYyoMQOWKtVYgE41xp6op94Lo9W/T4tW6kYaF
mgM4VXb10TLxNVNwrcxaKpLLtf/JxOzDBQMV0pUV87GMZt3ORlSxJZi+4cD5
zHsfRuZ3uzShLx6Kcl+1zjM7nRWMmnAXdA250JLQWf8UwSFJqcMulNXVlzVc
Hno+R295na2r22wuAbdzLitXBW1sXFkP2x3R5yK6roBqKt7WdaZ17uPuGuOw
VQOb5qQ+Qzpf+TALiv/WmyatcboNGu3QoHCTu2+7xpy7BltKJ0VWLoFHdcpu
oFvEcz9evoa3oZtGwGlrJoxGz97uP4be4preIADPDPuQGqRp6W+QlCKI45G9
p0nCRCVYCi9K/FU6eSVD7CXS1vUYS9+lPMMYFbO5P5y9+Cp5tW1WYQCrJhGq
VDZ6ss0LDn7D4ha+6byJ/9+Xa5Ful2vnge+0F3OCpIBWBSwtUNfprmTNgVzL
naAnQa37pDkx/XFussk86wnoDOTGPltDIDn2GiMeKjX2RDr3S4+es6IUEfhH
XHnC/eIsmY5NMfIh6VjLprtOS/uIn7gZvS3QWk3RpeZKA1wDeyuVWFJLH4Oq
MiCnFcdCsvPJU3vW0Eo7Zjc1nO1WTYIuWt6vG6slYuMfDGekzpSBoXeVmjxu
dmLU4mEw5lYbZ9sTF6gerKB6gBuIahD3BBM2riQDIwQyJW8yR0dKgydrsqxl
YXtWMLX2CHaiNBwn4ze5p2KC9IwIYMC9gLgRQZiRjITXWF69RV9cE3synOgS
7Xk+Tnqiz8YqRvU6J5CroAizqbmrYtztTDOEpOWedMGj4Bna9l6FBeCwy7Ni
HiZdiwtv7BLGsYMHcwZZ8lZ6W3CsSqtRVhL2x6/KeCSaGyW4R6PWQueBYdjX
Nj+2b1rl3Npy9fPe4dlM4bZnDQyhberdwBC9RotuMiYc93HAKcQMZOZ+LdGL
oZH32NglZBKzju/tp33rC81IA9myvZaV/h+/Igt7enT4ystGR3tH2DPZkG35
ku5kF1qjPd/aZ3mOltNFAf/Cni8/YEMPHKF7zPbnHmN1x/rfl7htfx5mtO5Z
36Bdcshc2fu5dT68J8ze/Tpffc2hDV6iMD+CXKPwNSJn/sc0Yg1+PGL91+05
wC1j8z+2uHUcfDiAc3RwOJfbv5n4XWKg9859qJ9Z3qfGcB7OEjw7nBc13ef3
GF3jN47tcJHzbPAnHKHXTGsYYtdMu4fJd8y0XaAEwnYPzA5fPbs8imN97xG9
O9l8wo2lfbZyYxcWvlcwCBNY09YJIiBX3mEfc19CHmSNvKlQvF1ym8B4WbWE
Dto+Svi9IsfCGN5CG4oyXpqnXXQUlejTMK56X7Kl11MsfFzXaq0CfJ/c5Ovp
5otAul9nmVMNGyqJHW0sjN8b7AuV9mzyTqthhWk5T70OSl43k0umAh3qLJlU
uqQQb99F7PziMnmSlbPVOq1v8LtPLy7Pksuri6+c4rxPfoll3h4JR45DE2j9
hoNAJFEH6MtxL85uCNFYzTum0vQ+FZO0Olcq1LQ1RzFbVDg8OgTAvOJyMvhn
FzPj+qMOdZwJKKivqGG1VKVxbp0rnHtCODDPQYtBTVAAEOd74VIURtFquOxc
1FHZROkZGxhfxejdjvWLGkWljZuT7D89U5puZ647oTbwNdPiH70zx/q6waGO
vm5ocd6E4TL3lxUfDKYZorzqTXrG3qSBCM4QCXx8WJu+rcpqDcSSoypJm7eG
jF7ripLl7qX3fcwcVRY8VLuxp8JoiV348C82aOE+xMphy/Szmu4Ckbvqt5oW
UkqhjqxL9hqjteGas8Lluo2lKpPTRbF6XYhELnfKgM7cIMdXlCT4OqxBxF2P
4mqb0RJ8dIth+DBH8mMAKVodsb1U8sxFNppSmc3If9wbxBvkLvuIPbVhRRGS
1k+n+ay2hMdYPDaUjyvB+/bbJh3SpbIzQYyy7V2EnqbRweq2m3lKXq10XeHQ
CBbJnnvuEvhVwrC1B6KxD4osnR8M1CCQjnnbpvVJ48iBsN4yZYxxbnTQAWOs
SQxRBWQcCJRCjnftKZAwFmuDOJ2kgC/VmhBLSRrYXzgXqIlhTIG8HrChM9oe
byyEYaiskAsFIG3cJrD2ZcljPTfGYI6rzfoylaWfR8sN5tF1MB8HsZ801SKv
sXzfFi9HK9Xo93XX4DvtX9cb3GxnM1pVOAdlRwC1Tbn4Zhonpw+EW3ak1WWu
1skTC3gfinnoi6y8Nm9jHrJ2dw0BTSuj0qTB8mLfd+khOqHwcrkLQUF+Jx6O
kyBA27XTci7w8CZJjlbb38H8iix1WhA9KNTDqQt6gZ77qhJ+L50qAIJUKgj0
Q9fxnwcA9HQ0mnRBavLlwnYQCgxzfuL7b8Z9Aw10lZAygZne+SAfFhsZwZCm
ZL9U1jV1PELK0TdzUKyiP/kz7LBS+kZVYQ1nwEuX9eraQ1D4Qlxk2S756H3g
4UuBmGQu9DYe1BVu9yA5pDQ/hM4Q/XyvCc0UPMOHjecl84gEe24V2/JN7EgV
5yAhU99NYU1U5J47zJLZ3aNwP/qGxCdv+gKFXHqcrUIRNLzvEn6/DVNBwAYu
1EGpkT9LCBsXg3DSBIpcksLIgv/6utjFahyVowhEjWnf4SiLkEwPF96uV4pv
XM9ZkxMlpAB0gP21dtCfOvDIwCysQM9CLbYucrLsdUbNevfsw9ZICQtI+8Rg
m/nE7ivpA9lHqEbn/QROh2iSVXXHCobTn0zhXGnTo4pul7/+NuCCe5tSjYOK
LlQPScm0Dw0YADIaOAKsFsbgl2roqemcLIVsTUvmbNM4im2yIDv8v9knAHS+
r5klTQhlZ5dxktYmxrrwC77t2wM4eWcVzOSCXFhTetnwR18lpyuKuN4j4TIN
63K3zGWVusu0/wSjA6RIs+D1C32dDndwrMBOxauJUshQECmzIvCBu3JgpLLs
LF1wsNYYGD+XqTtsAIitrPupTRpgRbc0c6eHieRqeeZyZjWS5GtYbrOC6UaD
rwy7PoO+K7lE45h+S3HtLsV5PSMGxkqXoNpokYVNjh5+6JStbZt/yYMPDY9y
LFalGbeLE8OCA4GkE2Ia4W5kMvOpXVF/Vcnj7TYQdKcmAPKZQVHyD57l11la
wL7PV9nspg+RD1b8wgxfOJC+893DsyhnWSl+foAJzSWskgqzeyEkVnQVLFWD
zH/HPQ2oXlXjc461vgiFlEVlL8qKilhTL126crH+cPYHlXVNSJKpCk4cLSAj
gdVXas67G4M1uDEipyDTs2EoQ5SCFW8L8oBx4voklztxUbYExgNzn15nC6zV
fjBmhAiqw91/M6eGZvheA02+zrknNZ8YLLFur7M07PQgRYWGcxM9TvG3+xDq
b3/995U+/9tf/2MQo1IjJHjrYnjnE1fX1EoOqAs0Woygp7CeOwVehLQDMAW/
Bg8oL/tm9Pw0koS0JE+K9eX3MLncNQuddyisbzz7Wgj36CxIXJz1vOpovIT/
MdKHptNBOshp2lQTImIkwr3UHBY1e8WjM6HAM8Om3rikSwchFkfjAg/h8Y7V
EqLvy3a0Na1jDmkgVxDdR3sjnF5VYgkFbY9g+gyyOj/fY12zQaFsZ2RlwlkC
2iqwPbCOGKnwkrfNJoQXNkhxdMZ6MYCqxz7RmCvh+/GEdc34nmgPQoNMPpxT
OgNeH3GxTBY7Q90CYSrGDqwT07sUtiUT2KNkZOxDRuCIShA2YwvvwPIiojls
um6xPBTscTVmY1TDlf/TvEBxD6OdfOa5a0Y95lQCjTxFlJHIWF9t0ZiZYoUj
MPTaS9xn6FV9KSUE6dZCFc7OlH+oiqXjXUZHFObtbIneaDTrXxKHHsYyiqm+
l/raSVFztDLsquZTdsKyiHTvyYBghE03YahJhb640NkSWhPUljKkeUe9euIw
JmSJWkKG7Uf5Zsu/L/KiRRoh0bkezndU61UrmkSSWwAdgDBXdSXHsROTLJm0
C+qmT3MtMGHAkoJiUouvogE0o6cxbaCi3IZOZ7s90bBRbSYhzxjV7Vor+XpI
nV4cmDtly26KzM/6mHiNzMp6Wh6aKrpUcwVHJI8N5Sf17rHfvX7ojTXOrW77
oRl52Bad1HKspoXuvW43R6HGcfaWK0ThKiu8UhHRHOmll5Q6mT/jDsa854EH
YpgU0+jMQvYdNrClRaAquMp2ElcQWbyiBupig6UdEvvjJqcofWp2VaLpRr2g
uHINqjxxRgTpyTliyEhKkentyQYllXnJcZp2DcJOk3CF6IZy93ywShrsTcJp
xSZp7d0m9lj2KhVKNwLgA9/7x3beXRTpUlMP54ETxmZfGK0uBQpF6Qd0AzfO
RDW8GfuIZkq3bYVHPSOZhHrhqRwOtJdFnKxcRp6svkQuPd9zjMgp+k83RuV5
3nhX2oPzylBgoEuwM9jItB3H6Z411eLIbnNu6NefhWbgFJ8WyBNBGtYveVIE
rCLtPSuetz8ZEGZDg8SmSPuoTJD+dmIztsxpUI90LPzVzAB7AfbiNt6XK2G8
uQecpZbVB5q6pXKFY/D6hmQbsRyPEj31B+PzjvLdmIQYMTkMrPfN35hV6xRD
EVZpLhERwEbyMggfY2poX9daUiaYgCMjgjJDUXLufdxBr4Vj6Q86mwdy+S5r
Z/+Sl8fi/qj7asAc6nnBReJy5Crzq1nQubekcTnTWJNQaJYT1LXVkSNxJzSH
eGdY71nKGFIwi5Yf0Zz/vqDtAeceuYmpAiu2SsXmYVboyUBGW/Y2m3HxwUqz
OcPBte+62BZ9SkwHiZvRl06DEFUKa5FZDrwXm6hMgGsEU7CS91DxTW6WE62Q
uEeu6/4cse61fsAdRQIW5O+0Ftsl+E7RfUCK9Mx3veET0OLy1GoEGwCyEcov
7S6zRcIGZH8TGP5A1LWBboOyfzdurZGQ4b9TBXh2vwpgFrhfBcChcUD19kcb
3XQj+1ykF1JqibfoF+n3h5v+LJneHFVXprfq+wNl+qGD3CPTB1rwe8j0dqpf
Qqa3WHufTB9D5peS6QfA93NkejPU/TK9f3mfpHhv6P6w1Di8sSCS8RcR8Lt9
VGMBfx+B6hfw72seEwr4w4B6f4l/AHL9Ev8Dz/HZ5S8i4IfhyfcI+OeUyy/s
3xzAGVeJwbDiybLmPAAypKEthV2KnSMQU2yfQd/mHy/6DsKRby4u0Iizrb/w
hXg5uKHwQin+LyNdC0+20ksHGTVuc2aBZzN0ZOeeBgfN1PfagGxfsVha9p02
jEmzlyCLkdhn33RuRqXdJBTgVBwXi6IQcqrZussZo9s7iECRZReRQy7xrw63
bpxYL5AC77UKY8lg+oaXvIbW7328KXNhuW9SgmykpciC2uacv3BAflN2RBul
dhxGkZim3Lha9u5bN/AJuZ57Fk/BuRRzPzHistJtEyobNUjO0fUoKwu0bXF3
Hfwlqyu8udvWR2Cbcrsh1zBkwC+Epa1lWmPIjQuYW8MeiAaWbWgbGn3gQ3ea
KKi10YpMzkliSycYqcGmHjiv+2BZ4b0FwLgfncMBF8X2XxtMZiPEusFTnZix
fU7X6YgiJ72n+Wq3yU6Tpxq0cyjO35PX4kQ+gvcvucCK2+dpgp5hW4BEJq6S
f6viXmzeM7NHLxzb239hfHv7FBMfwj9JrtJ6mbV+iUA4Tl1Uv5Q+5yiHV0yN
Rt9xqaBOrJyxVJk95C3fOkdZ8rbJikXHj8zhP6IsMQZs5ASMTkit3tOiztL5
bkLx2qFDriO6uEoHI/fSxCLbRIjJ6ShJfjz174RS++lPo9HgM/imf8YLmBjZ
6TDH+OBJgGhBdBmXTPxg8vL15INgLCrxbxeFH8BS7DsY+hx84ECHQX8qgh3Z
5dMo8J2sxOYIbg9JMtErbmjSRNzl0Qv+qkcv+MDcibs68sh2FNOP8LSbf9Ej
YtSyl1ZpKQdUIuUdR8FYbBHJyvmgIcFywSCMC8HLrUMQipynFb5CYR97jq5h
dVYrI6UL6miJWnNrqJK5KYjam6LaqXIAU2d3ievhEL2NBW0wK6XRMO2Cro+V
xVWVBwIUlD4/Sv64Byn/NI2utms4wUdg/dcS0NaEi/vQ9WUhCPhwWbrxeCgU
FvuVLK9PvxwnP+xd4w9jd/wmGtd9A6Pr1ew2cPTj6OzvmY8EoNb2LXBpAJKl
JLmX2w32W6aYir44Ocl/4pD+Oa7zmUsg2R/XU9nd2iAQVOH8CjpBtvBFjnDj
QPdOQK2LZ/IhP4oAEvGkxN0G40mjVnzDmXnC4llGRh24ZYAnXZqMZRvEJsj5
rVF0TEqJq/Ht+VAydEiZ6TJLn0Tvm0JhuaJiMXG8B6B4m9ftVtqkqZEND/3n
cA6G3T0M4HT/TXS0LzwOfyEvva04UoY7wa7ZeyK8S9iObzdl9Dos7EbnJW8a
L4zLkgURYiKGh0ARBz6JKqejLOcuK+Q94n2vgsFJsmhNBiqP3W/KwvzSO2Yw
e0h6N4CHqbqGPGHWJNXLpCwUovMkju8JPj8z0rdP70BV0NskWKcak00jY3Ml
U5FA9/OJB+r8qClNc6eivJqXbUjkYNB6byoL8xGkLhNkSymq30+3YdfcgNxz
qxyJmuc4+bFv/97uibWl0ljuJLAgAHH5KH6NUmVtk14OGUcO6oPdehM3uhoB
IVCdBaZTTrPhzHHlN0MYKf2bguhO09iNqjz0BHua2aRIrlqHfNB7RLTp6LWQ
Gm3Shlkyxr1vmH8QPRmXMjH9XKNshiD2U7rj2AOq4rBr8UqSCVis/a7jBywA
cwA9RKZRF929XUT8xU/NdphpB+l03XJ6ro2hKWFhQ0sIP06Cjh2q+g8FoFKc
9Rp9aGnZmzfqiJImbvS844uxSEXdnZUkojg/W6quy/rqbFH5XqjBqeJimJAE
DY6DhA7pShJUgIl9SL+cEtyHYP9NNN6uynsVySGDGKEysUpFYuLWhAHNF7XJ
Am9ev2gOksOrJ0+Ti7MXZ8nls/Ori5cv2GHhbylzNh8BGXT77usYMzKUKFgk
ySvmG6z8mbe3dQlCC/z/Tz/7yXQ6tYJNr6bxpjfU6n4gh+Iih16TsqHawOBA
3ZQkCjcVGR9G8C6BcRhw4eq8d/rCdlPCD3tl8COtF02RBiKuu9etL1jfD+rA
e9InZlPBhKmDb48gH8tm2rkw6xHnI698G4UMB7uE0zux24g1bmdX9IV1DAth
QLkKIGEMtQKd8nz6EqB3rKenFj3uUu324GiKj7AosESW2UlW12iIVyroQ/fd
GYdszogWjKMiCXKr4XvuWqgk7Ll0p1IZbfhKJYGRdMIZCaeUCk9h+e90YdqC
Q45sIog5qeoJR7ko7sHouE8dXkECH+uv8TX/77rKiNR0lSgqsBGeJmahiG1j
HmoyagYYpD+5uy4+85W9k13ZLyIP6GPtEAFycukSG09KTjyVoKh/KeijGSax
qpVzWWAsc4V3b0tF4mMtrlPPpJtjeKY+DiqjpXWDvKTjEqxczRMp7dCQ3A9y
LccODdWHQJIs1d4tF2NcER3P5jSaNGbvGiCNdAG3FOVXEHTLnryXoOQEuVKM
5caXeKCUxw+DfpVk1TH5jj6AUl2CPrfFpz9KN0vXYD2bLqdYoPvi2XN8fvny
7PWRzcvYlukt3Ab2BtqQsl9CyFKJZkDg+a+UwYaFLGtTbGM0yLlHCJlaDzYA
wANPgPnFCb1obfoMwtMEX79XInG2z5YhZrPqjRE0WJTMNe7/Hlpv2Y7r7GhU
3potLAb5pV9xmA/Z07vWZZRbWHydFUVljxB12l219ez5X5LkD3g+F0m6DhJG
+66bO4Q4CzIqm8cWwKA0N0aHrPHeIwGpti4vtKp/y2BIy1ByDe346KqkGKEq
tjs6MDdVf55vtVhgHqGUjSql+RMOMe7bAz6H2W4ykD3v0rxVZ4N0VqCw6HRd
bYXt+2YoXUlLnBY0l8kwHsaSjljGPgw8TJNOLxzzdADDvVjhftev3M8O+0Tv
g94JDkK7XmAalrTCvG1CYirEHblP31EbPyHCFcj+eqOLkDVNfeXxsFc9m83q
FLV+Sj6najgkqxEZ5jRStKpxPp+LocczsifCdp9t6eXEsQTU5BRmNasz52kP
8qVD5kjoFiXe2Y2S/E682/hsDNnFRVxTuEfrMPgQgLZKN42U1qEo/ZT7CcBX
vf+I86yCHNpeTt1fsMbxxsjWRUGMtkuXKd5ASC0p2Q/myQNmxiBkg/Qozmsl
T0r/Ehw/pgO2Mr0mfy+YeekAQgeEXv3/bLyI7RJCbNju6bhaTScrLNOyVj7z
Xr66LZrs4Yy116nokcqRyfw/l3V6BPsZjDNce4+v7VfgmwEdfjDXzB/EKTvr
/k/hlTEG/F2M0uHrr8Ilo9EPhlxf7JfB6GlkkX6PCKFa0RYbLWH6fb3GpjMm
hT5VUGOtXjKex2VkpCiriEC/KJ8MT6PLLIFJBUllTqVJKYUeEEIw9GgPW+0r
ujD6kq4PcljEDfx3zt6nduUqWTA3ZEcFd6tzgBsHkUkIBKIjPn5C2Iw1V0UV
Sw4JtXcCGTiiWVaXltIfjZ0/EZPg8mZTpDunCWolC1UUeRhRFweN+EJO+upg
ek5LXQSbfFlKoV2KnEyDiDKs+OFsiTJap/wQlRzYWSei57UKLtTkO76Z3nRM
zl7zs/YVgMnZ3uKD5W3akykKYSYA2rjE7AFTILecc4y3cwKq041tejMkKhp1
2Mfqn7g1Hr6S5pta2eD/HWYPW9E4UisaqWOyV9jCe2DbjPbWM1FZN5YfzrAp
pPTIYxKn5NifOYfv9mFvkGpi5DxFSg3bEPdU4Gf+sEl+2BPA8APgpxqRhwKA
9Jhk1lk1xwMwV0r5LHyatbPpWD201vnqaGuwOuNq4dEnduPIc9R3f28MiDNr
eqsmfvjHtDfjKI4Z6Re37O3m0lua+LjoOYdxYtp+BWrCDpkDJ2PA17CuiH9+
Ypzf3uR5l+6CIqXiBvVx6NYFWZt+u0RX79R7j2HkwFCWSwyLFkJdFfCSUFzJ
yuxUtaGAAWzzO01cZyRHsG2gVn9VHwp9gdtV5OtcIgysiz/is0NxVC9OzoZD
eujhaH9hkg98cW0Ehc0ioGdBWoFJC+hpQL2/P/V9OQW9CzUpDu+7UPmqPHV/
2WUEuYR+HSPYRp3fprNd2M6hGf3x6snTP+Hzy2wG0kI7/AK5WPseAvHHilRV
DtLSpuBaEqAzTuMAduQkzWj05vXFafIDOj/yrF2cYrfKKFD3h9FTH4p7Styd
GDYmS/jI27iYeRieSgmfgIai2GypSNdAXfKJsfgGhzDRQ6ffPfgnvewJPv7j
85evn/0p2ve5cV71uAzQjZ0EvUPSgI7H5ZUFnYI6bjYox9VfJK8RMjZHkGOt
AO8gzN49Du+2Em3VWrh+6Bh2fv4WYpPIr7h+nkoW3yM/O8nm6H03pPEhA6LB
PSuUb5/2cMJ9izXi13su9z5xRiTu+1fuBhpY+2gymZCVbRQQmKfcF1bbojTc
FVtSbwKbGMabgZa/Tuuw/EajQ3GL2cb2mNWaw66yG1ArdFSeJhdXyVmDOuVz
1xBhHPUesk8QEc+D5jL+KZO2ngFHNn3/KputygpY8Y6qa7e2EwPG76UNBlg2
XBokha3DebGx8Mcfzy8uz1++uHr98pvLn36S0ud3XM+rBlYOu0oLl5sDC4kn
mFK3dXg1eTQGEmVrsusDoJ9fg8RAEcO0D6xo1rLCcHBG8kyh3SOwipUL6Abq
OLsZixpOMVhcgm+lo80zlsglBKTMWjwVFC1IpWGzzBYkmpoaXOjr+FVWSlPS
lnmKbWle5Q8kPjz44qLalnOpn0UInEmbpKUklvOY0wO3/8d7AHOpPYB+EcC4
jkIPBIh7P+eabjCG7H2WamWNzBTg3AMiO9QgiGQOF4kptTtADjwYYXWeZpPD
dZOAVQribbjmInPgjZPPOKsw56PfgU7otnqYoumR282RmgtvNyAp3nhoUKEb
FFKrckm/pPN002aqXxxRMyfSWTarXYOaHK6VotLTAjSTcgLbWucNNzTQ5uhF
tZ27oE8nnY8DrkwwUXoEquIIxBrNUnVfsR9ajn5W9t0/S3NdIoo3N1LUlcsV
5pOFIwCpHbNaaDBKPvdVVESjdQ25n+aNhFNfpc1Ng0FcEr1oKWV6TSbRVhtz
z2Vsq2SwVoXGqIE0oEP2KWP/c5R1gCKzhf9rDkdyKCZhWo4MmMp3ckoy+xFL
UBKeR0eUrHbXdY4CHrxalZRgK9DuOZhBsj0KH4QEN5WKlnR9bfS0IDDQ3gqD
XNPNqk4bFhYjSjxWwyNKnLd75qIosFmrThn+Bt7yGQZ4Ufg3t1rjX/Emc+eE
qM4nXsiSkCJq7OzqmecWi7AhC9d+sIvTiDsJcyWLhC9ZeweafHXHCa7o/gJ8
kPDjtG2BoHGl17Nou755HZzzFPhW+Bg9VLT8I4SGr6OL1/KucuX//8EjdNg7
UFOMJTTFNyTsuWF4g5Gfvk3XtovZ4PGEUY2SM240J7pQU1ibZLVRazKs3M2d
8d5jSUBYtwuQiHKWKKwOiZMQorhW7WrP8Wnl2hw8avxn4iV0EXBA3/bDH3E+
97yYgeQUKC4PjUvP+s6Bm2K7Ik6wtrSV6rWmGnIAaBQ8sKN8/4Ba3ZiXZ/ru
8aq1QAFhxpmfoduSzzJG3ZpMCF/9Mi80mMgkscODSzcitW0zz4jPoSI7SxsN
UO3dgm925b2wpmXmhzFdEAmbHDA+Fs04td8f2SkHxcU/UXtNW0Pqa1CVb9Gy
iWSCTfF+Tx67endHyxS3FeYK50izhqaSZJgYq9W15lG7P69gEJmTl0g1tzWm
ZdGZxC4arKlzH5BQ/AcoL6QRlS38QxWBK1MSKg9q+KJsxP4cf3tD8sS1C8Is
kwecG4e1ESFW7cQXRwgaai1IgvGFYae/ogDjP+7jtEMq0Ch8YLmfNnuJ2nia
bqesqsmOG72M7oV+JUirNiL/WOXL1aSAgyq8SiT+JrY0D6ztUGX8TwnEJQiN
Kn46ZcJoAo8e8WvhK0dTUAvIDY22sLGEnrp1IJ0quKdjk6E4QU7q62yWohmV
Oj55OUriUz0druplWrp2XdIjirOadBmAGCCfUAGfLYtdpPWSY8E1tJomz7N6
qTw+0B21NJmIyL78hZN94I9Tn3o79vePRZU01oFE8UGLNCZvl2Ov/3Cgv+jr
nWatGvCpKUZAMaqarXkDJ0iyMtVP0Q05W1HQ5YU1HC/CMLXJ3m6Kip3DtuOr
dSGBgIrPqeOdOoy4oJU7NAniarJomcttzklAUvsf4LFtpacs+sfEEdfx0wKM
dpLVmBcSvxmORdI3D+KrrqRzrFJAWbi2CTK7jM1q4RzLOQjlfK16HojAWnqK
1nb7zA7dZvYtqPSigqHprCZqQZBJ0MN6SMZkgk1B2Fzbhpr+kLb0OgKmqaqH
4jF6KbTtQe+hoAXXb31wN0FnG+BgWZeShUcTHzIakaV4xGlEPd0XEd501JLp
4c/E+4JIayQT9B64u340rH/6YMI6aLmrOzGJVCkQHBI63EE9eK4QGky8w/m0
QTs7m3MB/0XYWY5azKQFReeZeO7xfkxTqYIJMOiN1cy8ws3IyMJvO+aFtSCQ
Rt2CBESN6nxRiXU1zwp28c8wsbmaa+cZjbnnrbqucPMtEOEdO5A1twgIUrlE
9bJEAQaJI+dkzGs2bEkJNPbggZhM/ruYY703t7cGVFc+ngqwgYwKcBU7QBBk
04R9YvPMVDWSBkTs63H1fVB5JF9uVXZumaHQaoGd9kggAbvh7jiojKaFw0s6
O/+VoNKSY0P3r8dgjVnPP0QYLv2pv8zQPnzGQVk1ZVQwieECVGhZa12M53An
+unQ+F5iplnI5VpSf3R3aUii7RLmYL6eCc78Nq3nCqYJQvDDppO+nAwxXTcE
jd91aFrH5/aaOfb+Ce6tm06EU3h//6QByMxUpEDiHI1cHNHyhmr97QWZ8+jt
346W7Ll/tiRFazMgsmsP/rPW1S0Dew8QunVnp32S/iuQjX788fWX558//uRz
NGY1VbFlQTNofhnYLpcVNRjFoABzLYPADlN3W4MJiLgYtx7biGzGopRkpqgp
bJIF14wiLMLSgz198TS6zJf2pbz0fJNqE6PW1tz4rS00hAb8Jm4NGLyOAauz
VAmIkMxIav2OLGZAlZ+ns5eXLNWdfXcpUuzLb8++OfDEb+CMlX4Pe786tDrI
9yRV/BpE9dkDKB9Fo1H0J5WXHXfCvkhpQXK2LNmJoKV4vLmABH+OhkGumVOl
6IQCZmCNNmRKY1TSMjoqtkBo/BKZ7DYu9vhas/fmUXjvtizkJNiNgaJ4uHzT
hsi6IMc6FZkdQQba1qWLPKIwoOOJ/TlOkvCDgc+6nx6P3llekrxL8L8gfkM+
S6yhMZFPzUfvdE3HnZmOzezvkBRPzqyII+Mr7YCROO2TZw1+7Cc46vdmJzq+
sfI8cKTo73d+fDfF8d8zkv7FYzyaxt/4OPrkc//3F/bRo4+mf9eOwnX8nWMI
eG47KBZ/cjz06Nhh4PBPT+vcwXd1TT1oH/+YV76PP/zen/a+le2D0Dtd0C84
zOMO2nR+PvGvfOp+/Yx/+830F13NLzDMsUWJ44EhjkOskUt+7L+nCCREbHhd
9LmRCBMlbCrC4ZpC6jE4Uj8J8zKgvx737y7GzCES9nN+IlJv+MePp8kHwHon
zIFVZMjbIvung0HO7yPDbLOag59Gox9/jAf76SfhtcPW1FhKYKHJygpqb6Uw
CQn7Ne3RuRf66NEUZMwNn/8iy0wfsnR4bnk/6mjQ26n7MZufOioRR8eXDQb2
cXFvz0eDgGSX+WTKNbKcZL7yoat2PR19PDUsOIi8pxrPUjEVNNet5GLcVjdY
G8BVaR+7ggNcq3nsQr1Su2VuX9iVFC2cxMM8+mSKZhAnVY0j7Sq8D1E0MdXM
pzUmviMjCtDkkOpqGoFx7dN4YlzvvslJOteKSA9pkdLHZKKWFQ+rpP6ZYsqe
ct20OkEbcxpootppllWdFaAYEZbuBc1vHjqfrQ8lCT4hku4BhanErXewCpDT
5ZiYIt04lk11iM9IPVi2Bjo7rz/nPe37skBPkk/9iwpLuWbc79BH6DahCxUf
pHXe2HSbRiI459tZX0+U6egLojWuh1Nf8w/XP6XuOtr27Wr4BEYg+Nmv2hkE
FjjDiasE+6AGLSNpX4YmttuMzNZhqkdk8rQqD8x6m2kZPljw29abu2SrvtSm
V7BcrT2tUkioQlnD2xL9H96bNMvr2XaN5qRZ1i0YF5daSigeh50XZSf8PHD0
NgD3wMK6zjETG72+WVEw7qauqxMPcJe21Pt6uL2WxLCIFwlzzvRVDhjI5ra/
w32UhMg3VtHuLi0LV7ZM25UmXPUQC22oUuymgHCwB7aqMuoM6bDWIeOb/oxJ
fw69NaGp2nNmVHhzoE//F7XkIPo9LwEA

-->

</rfc>
